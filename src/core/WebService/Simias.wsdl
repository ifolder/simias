<?xml version="1.0" encoding="UTF-8"?>
<definitions xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:s="http://www.w3.org/2001/XMLSchema" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tm="http://microsoft.com/wsdl/mime/textMatching/" xmlns:s0="http://novell.com/simias/web/" name="Simias Web Service" targetNamespace="http://novell.com/simias/web/" xmlns="http://schemas.xmlsoap.org/wsdl/">
  <types>
    <xs:schema elementFormDefault="qualified" targetNamespace="http://novell.com/simias/web/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:element name="PingSimias">
        <xs:complexType/>
      </xs:element>
      <xs:element name="PingSimiasResponse">
        <xs:complexType/>
      </xs:element>
      <xs:element name="AddMemberToDomain">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="DomainID" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="MemberName" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="MemberID" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="PublicKey" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="GivenName" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="FamilyName" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="AddMemberToDomainResponse">
        <xs:complexType/>
      </xs:element>
      <xs:element name="RemoveMemberFromDomain">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="DomainID" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="MemberID" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="RemoveMemberFromDomainResponse">
        <xs:complexType/>
      </xs:element>
      <xs:element name="FindCloseMembers">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="domainID" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="searchContext" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="FindCloseMembersResponse">
        <xs:complexType/>
      </xs:element>
      <xs:element name="FindFirstMembers">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="domainID" type="xs:string"/>
            <xs:element minOccurs="1" maxOccurs="1" name="count" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="ArrayOfMemberInfo">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="MemberInfo" nillable="true" type="s0:MemberInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="MemberInfo">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="1" name="ObjectID" type="xs:string"/>
          <xs:element minOccurs="0" maxOccurs="1" name="UserID" type="xs:string"/>
          <xs:element minOccurs="0" maxOccurs="1" name="Name" type="xs:string"/>
          <xs:element minOccurs="0" maxOccurs="1" name="GivenName" type="xs:string"/>
          <xs:element minOccurs="0" maxOccurs="1" name="FamilyName" type="xs:string"/>
          <xs:element minOccurs="0" maxOccurs="1" name="FullName" type="xs:string"/>
          <xs:element minOccurs="1" maxOccurs="1" name="AccessRights" type="xs:int"/>
          <xs:element minOccurs="1" maxOccurs="1" name="IsOwner" type="xs:boolean"/>
          <xs:element minOccurs="1" maxOccurs="1" name="IsHost" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="FindFirstMembersResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" maxOccurs="1" name="FindFirstMembersResult" type="xs:boolean"/>
            <xs:element minOccurs="0" maxOccurs="1" name="searchContext" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="memberList" type="s0:ArrayOfMemberInfo"/>
            <xs:element minOccurs="1" maxOccurs="1" name="totalMembers" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:simpleType name="SearchType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Equal"/>
          <xs:enumeration value="Not_Equal"/>
          <xs:enumeration value="Begins"/>
          <xs:enumeration value="Ends"/>
          <xs:enumeration value="Contains"/>
          <xs:enumeration value="Greater"/>
          <xs:enumeration value="Less"/>
          <xs:enumeration value="Greater_Equal"/>
          <xs:enumeration value="Less_Equal"/>
          <xs:enumeration value="Exists"/>
          <xs:enumeration value="CaseEqual"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="FindFirstSpecificMembers">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="domainID" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="attributeName" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="searchString" type="xs:string"/>
            <xs:element minOccurs="1" maxOccurs="1" name="operation" type="s0:SearchType"/>
            <xs:element minOccurs="1" maxOccurs="1" name="count" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="FindFirstSpecificMembersResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" maxOccurs="1" name="FindFirstSpecificMembersResult" type="xs:boolean"/>
            <xs:element minOccurs="0" maxOccurs="1" name="searchContext" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="memberList" type="s0:ArrayOfMemberInfo"/>
            <xs:element minOccurs="1" maxOccurs="1" name="totalMembers" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="FindNextMembers">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="domainID" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="searchContext" type="xs:string"/>
            <xs:element minOccurs="1" maxOccurs="1" name="count" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="FindNextMembersResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" maxOccurs="1" name="FindNextMembersResult" type="xs:boolean"/>
            <xs:element minOccurs="0" maxOccurs="1" name="searchContext" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="memberList" type="s0:ArrayOfMemberInfo"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="FindPreviousMembers">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="domainID" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="searchContext" type="xs:string"/>
            <xs:element minOccurs="1" maxOccurs="1" name="count" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="FindPreviousMembersResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" maxOccurs="1" name="FindPreviousMembersResult" type="xs:boolean"/>
            <xs:element minOccurs="0" maxOccurs="1" name="searchContext" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="memberList" type="s0:ArrayOfMemberInfo"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="FindSeekMembers">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="domainID" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="searchContext" type="xs:string"/>
            <xs:element minOccurs="1" maxOccurs="1" name="offset" type="xs:int"/>
            <xs:element minOccurs="1" maxOccurs="1" name="count" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="FindSeekMembersResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" maxOccurs="1" name="FindSeekMembersResult" type="xs:boolean"/>
            <xs:element minOccurs="0" maxOccurs="1" name="searchContext" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="memberList" type="s0:ArrayOfMemberInfo"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetSimiasInformation">
        <xs:complexType/>
      </xs:element>
      <xs:element name="GetSimiasInformationResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="GetSimiasInformationResult" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetDomainInformation">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="domainID" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="DomainInformation">
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="1" name="Type" type="s0:DomainType"/>
          <xs:element minOccurs="1" maxOccurs="1" name="Active" type="xs:boolean"/>
          <xs:element minOccurs="1" maxOccurs="1" name="Authenticated" type="xs:boolean"/>
          <xs:element minOccurs="0" maxOccurs="1" name="Name" type="xs:string"/>
          <xs:element minOccurs="0" maxOccurs="1" name="Description" type="xs:string"/>
          <xs:element minOccurs="0" maxOccurs="1" name="ID" type="xs:string"/>
          <xs:element minOccurs="0" maxOccurs="1" name="MemberUserID" type="xs:string"/>
          <xs:element minOccurs="0" maxOccurs="1" name="MemberName" type="xs:string"/>
          <xs:element minOccurs="0" maxOccurs="1" name="RemoteUrl" type="xs:string"/>
          <xs:element minOccurs="0" maxOccurs="1" name="POBoxID" type="xs:string"/>
          <xs:element minOccurs="0" maxOccurs="1" name="HostUrl" type="xs:string"/>
          <xs:element minOccurs="0" maxOccurs="1" name="Host" type="xs:string"/>
          <xs:element minOccurs="1" maxOccurs="1" name="IsSlave" type="xs:boolean"/>
          <xs:element minOccurs="1" maxOccurs="1" name="IsDefault" type="xs:boolean"/>
          <xs:element minOccurs="1" maxOccurs="1" name="StatusCode" type="s0:StatusCodes"/>
          <xs:element minOccurs="1" maxOccurs="1" name="RemainingGraceLogins" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="DomainType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Master"/>
          <xs:enumeration value="Slave"/>
          <xs:enumeration value="Local"/>
          <xs:enumeration value="None"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="StatusCodes">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Success"/>
          <xs:enumeration value="SuccessInGrace"/>
          <xs:enumeration value="InvalidCertificate"/>
          <xs:enumeration value="UnknownUser"/>
          <xs:enumeration value="AmbiguousUser"/>
          <xs:enumeration value="InvalidCredentials"/>
          <xs:enumeration value="InvalidPassword"/>
          <xs:enumeration value="AccountDisabled"/>
          <xs:enumeration value="AccountLockout"/>
          <xs:enumeration value="SimiasLoginDisabled"/>
          <xs:enumeration value="UnknownDomain"/>
          <xs:enumeration value="InternalException"/>
          <xs:enumeration value="MethodNotSupported"/>
          <xs:enumeration value="Timeout"/>
          <xs:enumeration value="OlderVersion"/>
          <xs:enumeration value="ServerOld"/>
          <xs:enumeration value="UpgradeNeeded"/>
          <xs:enumeration value="PassPhraseNotSet"/>
          <xs:enumeration value="PassPhraseInvalid"/>
          <xs:enumeration value="UserAlreadyMoved"/>
          <xs:enumeration value="ServerUnAvailable"/>
          <xs:enumeration value="Unknown"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="GetDomainInformationResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="GetDomainInformationResult" type="s0:DomainInformation"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetDomains">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" maxOccurs="1" name="onlySlaves" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="ArrayOfDomainInformation">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="DomainInformation" nillable="true" type="s0:DomainInformation"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="GetDomainsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="GetDomainsResult" type="s0:ArrayOfDomainInformation"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="LoginToRemoteDomain">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="domainID" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="password" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="Status">
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="1" name="statusCode" type="s0:StatusCodes"/>
          <xs:element minOccurs="0" maxOccurs="1" name="DomainID" type="xs:string"/>
          <xs:element minOccurs="0" maxOccurs="1" name="UserID" type="xs:string"/>
          <xs:element minOccurs="0" maxOccurs="1" name="UserName" type="xs:string"/>
          <xs:element minOccurs="0" maxOccurs="1" name="DistinguishedUserName" type="xs:string"/>
          <xs:element minOccurs="0" maxOccurs="1" name="ExceptionMessage" type="xs:string"/>
          <xs:element minOccurs="1" maxOccurs="1" name="TotalGraceLogins" type="xs:int"/>
          <xs:element minOccurs="1" maxOccurs="1" name="RemainingGraceLogins" type="xs:int"/>
          <xs:element minOccurs="1" maxOccurs="1" name="DaysUntilPasswordExpires" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="LoginToRemoteDomainResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="LoginToRemoteDomainResult" type="s0:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="LogoutFromRemoteDomain">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="domainID" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="LogoutFromRemoteDomainResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="LogoutFromRemoteDomainResult" type="s0:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="DisableDomainAutoLogin">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="domainID" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="DisableDomainAutoLoginResponse">
        <xs:complexType/>
      </xs:element>
      <xs:element name="IsDomainActive">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="domainID" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="IsDomainActiveResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" maxOccurs="1" name="IsDomainActiveResult" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="SetDomainActive">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="domainID" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="SetDomainActiveResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" maxOccurs="1" name="SetDomainActiveResult" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="SetDomainInactive">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="domainID" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="SetDomainInactiveResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" maxOccurs="1" name="SetDomainInactiveResult" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ValidCredentials">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="domainID" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="memberID" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ValidCredentialsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" maxOccurs="1" name="ValidCredentialsResult" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:simpleType name="CredentialType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="None"/>
          <xs:enumeration value="NotRequired"/>
          <xs:enumeration value="Basic"/>
          <xs:enumeration value="PPK"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="SetDomainCredentials">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="domainID" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="credentials" type="xs:string"/>
            <xs:element minOccurs="1" maxOccurs="1" name="type" type="s0:CredentialType"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="SetDomainCredentialsResponse">
        <xs:complexType/>
      </xs:element>
      <xs:element name="SetHostAddress">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="Host" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="PublicUrl" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="PrivateUrl" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="DomainID" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="SetHostAddressResponse">
        <xs:complexType/>
      </xs:element>
      <xs:element name="StorePassPhrase">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="domainID" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="passPhrase" type="xs:string"/>
            <xs:element minOccurs="1" maxOccurs="1" name="type" type="s0:CredentialType"/>
            <xs:element minOccurs="1" maxOccurs="1" name="rememberPassPhrase" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="StorePassPhraseResponse">
        <xs:complexType/>
      </xs:element>
      <xs:element name="GetDomainCredentials">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="domainID" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetDomainCredentialsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" maxOccurs="1" name="GetDomainCredentialsResult" type="s0:CredentialType"/>
            <xs:element minOccurs="0" maxOccurs="1" name="userID" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="credentials" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetPassPhrase">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="domainID" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetPassPhraseResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="GetPassPhraseResult" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetRememberOption">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="domainID" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetRememberOptionResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" maxOccurs="1" name="GetRememberOptionResult" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ConnectToDomain">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="UserName" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="Password" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="Host" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ConnectToDomainResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="ConnectToDomainResult" type="s0:DomainInformation"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="LeaveDomain">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="DomainID" type="xs:string"/>
            <xs:element minOccurs="1" maxOccurs="1" name="LocalOnly" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="LeaveDomainResponse">
        <xs:complexType/>
      </xs:element>
      <xs:element name="RemoveCertFromTable">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="host" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="RemoveCertFromTableResponse">
        <xs:complexType/>
      </xs:element>
      <xs:element name="SetDefaultDomain">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="domainID" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="SetDefaultDomainResponse">
        <xs:complexType/>
      </xs:element>
      <xs:element name="GetDefaultDomainID">
        <xs:complexType/>
      </xs:element>
      <xs:element name="GetDefaultDomainIDResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="GetDefaultDomainIDResult" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetCertificate">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="host" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetCertificateResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="GetCertificateResult" type="xs:base64Binary"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetCertificate2">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="host" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:simpleType name="CertificateProblem">
        <xs:restriction base="xs:string">
          <xs:enumeration value="CertOK"/>
          <xs:enumeration value="CertEXPIRED"/>
          <xs:enumeration value="CertVALIDITYPERIODNESTING"/>
          <xs:enumeration value="CertROLE"/>
          <xs:enumeration value="CertPATHLENCONST"/>
          <xs:enumeration value="CertCRITICAL"/>
          <xs:enumeration value="CertPURPOSE"/>
          <xs:enumeration value="CertISSUERCHAINING"/>
          <xs:enumeration value="CertMALFORMED"/>
          <xs:enumeration value="CertUNTRUSTEDROOT"/>
          <xs:enumeration value="CertCHAINING"/>
          <xs:enumeration value="CertREVOKED"/>
          <xs:enumeration value="CertUNTRUSTEDTESTROOT"/>
          <xs:enumeration value="CertREVOCATION_FAILURE"/>
          <xs:enumeration value="CertCN_NO_MATCH"/>
          <xs:enumeration value="CertWRONG_USAGE"/>
          <xs:enumeration value="CertUNTRUSTEDCA"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="GetCertificate2Response">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="GetCertificate2Result" type="xs:base64Binary"/>
            <xs:element minOccurs="1" maxOccurs="1" name="Problem" type="s0:CertificateProblem"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="StoreCertificate">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="certificate" type="xs:base64Binary"/>
            <xs:element minOccurs="0" maxOccurs="1" name="host" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="StoreCertificateResponse">
        <xs:complexType/>
      </xs:element>
      <xs:element name="StoreDomainCertificate">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="certificate" type="xs:base64Binary"/>
            <xs:element minOccurs="0" maxOccurs="1" name="host" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="domainID" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="StoreDomainCertificateResponse">
        <xs:complexType/>
      </xs:element>
      <xs:element name="GetRAList">
        <xs:complexType/>
      </xs:element>
      <xs:complexType name="ArrayOfString">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="string" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="GetRAListResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="GetRAListResult" type="s0:ArrayOfString"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetRAListOnClient">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="DomainID" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetRAListOnClientResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="GetRAListOnClientResult" type="s0:ArrayOfString"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetRACertificate">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="rAgent" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetRACertificateResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="GetRACertificateResult" type="xs:base64Binary"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetRACertificateOnClient">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="DomainID" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="rAgent" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetRACertificateOnClientResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="GetRACertificateOnClientResult" type="xs:base64Binary"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetPublicKey">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="DomainID" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="rAgent" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetPublicKeyResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="GetPublicKeyResult" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetDefaultPublicKey">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="DomainID" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetDefaultPublicKeyResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="GetDefaultPublicKeyResult" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetDefaultRSAFromServer">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="DomainID" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetDefaultRSAFromServerResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="GetDefaultRSAFromServerResult" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetDefaultRSAKey">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="DomainID" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetDefaultRSAKeyResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="GetDefaultRSAKeyResult" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="StoreRACertificate">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="certificate" type="xs:base64Binary"/>
            <xs:element minOccurs="0" maxOccurs="1" name="rAgent" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="StoreRACertificateResponse">
        <xs:complexType/>
      </xs:element>
      <xs:element name="GetInvalidSyncFilenameChars">
        <xs:complexType/>
      </xs:element>
      <xs:element name="GetInvalidSyncFilenameCharsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="GetInvalidSyncFilenameCharsResult" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="SetDomainHostAddress">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="domainID" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="hostAddress" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="user" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="password" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="SetDomainHostAddressResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" maxOccurs="1" name="SetDomainHostAddressResult" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="SetProxyAddress">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="hostUri" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="proxyUri" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="proxyUser" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="proxyPassword" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="SetProxyAddressResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" maxOccurs="1" name="SetProxyAddressResult" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CanShareService">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="simiasDataPath" type="xs:string"/>
            <xs:element minOccurs="1" maxOccurs="1" name="isClient" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CanShareServiceResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" maxOccurs="1" name="CanShareServiceResult" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="StopSimiasProcess">
        <xs:complexType/>
      </xs:element>
      <xs:element name="StopSimiasProcessResponse">
        <xs:complexType/>
      </xs:element>
      <xs:element name="AddSimiasReference">
        <xs:complexType/>
      </xs:element>
      <xs:element name="AddSimiasReferenceResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" maxOccurs="1" name="AddSimiasReferenceResult" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="RemoveSimiasReference">
        <xs:complexType/>
      </xs:element>
      <xs:element name="RemoveSimiasReferenceResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" maxOccurs="1" name="RemoveSimiasReferenceResult" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ServerSetDefaultAccount">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="DomainID" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="UserID" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="iFolderID" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ServerSetDefaultAccountResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" maxOccurs="1" name="ServerSetDefaultAccountResult" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ServerGetDefaultiFolder">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="DomainID" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="UserID" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ServerGetDefaultiFolderResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="ServerGetDefaultiFolderResult" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetGroupsiFolderLimitPolicy">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="DomainID" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="UserID" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetGroupsiFolderLimitPolicyResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" maxOccurs="1" name="GetGroupsiFolderLimitPolicyResult" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="IsTransferAllowed">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="DomainID" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="UserID" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="IsTransferAllowedResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" maxOccurs="1" name="IsTransferAllowedResult" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetGroupsSharingPolicy">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="DomainID" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="UserID" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetGroupsSharingPolicyResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" maxOccurs="1" name="GetGroupsSharingPolicyResult" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetGroupsSecurityPolicy">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="DomainID" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="UserID" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetGroupsSecurityPolicyResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" maxOccurs="1" name="GetGroupsSecurityPolicyResult" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetEffectiveSyncPolicy">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="DomainID" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="UserID" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="CollectionID" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetEffectiveSyncPolicyResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" maxOccurs="1" name="GetEffectiveSyncPolicyResult" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ServerSetPassPhrase">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="DomainID" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="UserID" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="EncryptedCryptoKey" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="CryptoKeyBlob" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="RAName" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="RAPublicKey" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ServerSetPassPhraseResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="ServerSetPassPhraseResult" type="s0:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ServerGetEncrypPassKey">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="DomainID" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="UserID" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ServerGetEncrypPassKeyResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="ServerGetEncrypPassKeyResult" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ServerGetPassKeyHash">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="DomainID" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="UserID" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ServerGetPassKeyHashResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="ServerGetPassKeyHashResult" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="UpdateUserMoveState">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="DomainID" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="UserID" type="xs:string"/>
            <xs:element minOccurs="1" maxOccurs="1" name="userMoveStatus" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="UpdateUserMoveStateResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" maxOccurs="1" name="UpdateUserMoveStateResult" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="UpdateHomeServer">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="DomainID" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="UserID" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="newHostID" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="UpdateHomeServerResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" maxOccurs="1" name="UpdateHomeServerResult" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="DownloadiFolder">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="iFolderID" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="name" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="DomainID" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="HostID" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="DirNodeID" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="MemberNodeID" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="colMemberNodeID" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="localPath" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="DownloadiFolderResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" maxOccurs="1" name="DownloadiFolderResult" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="UpdateLocalProperties">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="DomainID" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="UserID" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="EncryptionKey" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="EncryptionVersion" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="EncryptionBlob" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="RAName" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="RAPublicKey" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="UpdateLocalPropertiesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" maxOccurs="1" name="UpdateLocalPropertiesResult" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="DisableUser">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="DomainID" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="UserID" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="newHostID" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="DisableUserResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" maxOccurs="1" name="DisableUserResult" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="SetOnMasterEncryptionBlobFlag">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="DomainID" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="UserID" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="SetOnMasterEncryptionBlobFlagResponse">
        <xs:complexType/>
      </xs:element>
      <xs:element name="CommitDomainMember">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="DomainID" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="ModifiedMemberXML">
              <xs:complexType mixed="true">
                <xs:sequence>
                  <xs:any/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CommitDomainMemberResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" maxOccurs="1" name="CommitDomainMemberResult" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ServerGetCollectionHashKey">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="CollectionID" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ServerGetCollectionHashKeyResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="ServerGetCollectionHashKeyResult" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetiFolderCryptoKeys">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="DomainID" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="UserID" type="xs:string"/>
            <xs:element minOccurs="1" maxOccurs="1" name="Index" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="CollectionKey">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="1" name="NodeID" type="xs:string"/>
          <xs:element minOccurs="0" maxOccurs="1" name="PEDEK" type="xs:string"/>
          <xs:element minOccurs="0" maxOccurs="1" name="REDEK" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="GetiFolderCryptoKeysResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="GetiFolderCryptoKeysResult" type="s0:CollectionKey"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="SetiFolderCryptoKeys">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="DomainID" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="UserID" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="CKey" type="s0:CollectionKey"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="SetiFolderCryptoKeysResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" maxOccurs="1" name="SetiFolderCryptoKeysResult" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ExportiFoldersCryptoKeys">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="DomainID" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="FilePath" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ExportiFoldersCryptoKeysResponse">
        <xs:complexType/>
      </xs:element>
      <xs:element name="ImportiFoldersCryptoKeys">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="DomainID" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="NewPassphrase" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="OneTimePassphrase" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="FilePath" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ImportiFoldersCryptoKeysResponse">
        <xs:complexType/>
      </xs:element>
      <xs:element name="ExportiFoldersCryptoKeysToDoc">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="DomainID" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="UserID" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ExportiFoldersCryptoKeysToDocResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="keyDocument">
              <xs:complexType mixed="true">
                <xs:sequence>
                  <xs:any/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="RecoverKeys">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="DomainID" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="UserID" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="RAName" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="keyDocument">
              <xs:complexType mixed="true">
                <xs:sequence>
                  <xs:any/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:element minOccurs="0" maxOccurs="1" name="oneTimePP" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="RecoverKeysResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" maxOccurs="1" name="RecoverKeysResult" type="xs:boolean"/>
            <xs:element minOccurs="0" maxOccurs="1" name="decryptedKeyDoc">
              <xs:complexType mixed="true">
                <xs:sequence>
                  <xs:any/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ImportiFoldersCryptoKeysFromDoc">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="DomainID" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="UserID" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="NewPassphrase" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="OneTimePassword" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="keyDocument">
              <xs:complexType mixed="true">
                <xs:sequence>
                  <xs:any/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ImportiFoldersCryptoKeysFromDocResponse">
        <xs:complexType/>
      </xs:element>
      <xs:element name="ExportRecoverImport">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="DomainID" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="UserID" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="NewPassphrase" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ExportRecoverImportResponse">
        <xs:complexType/>
      </xs:element>
      <xs:element name="SetPassPhrase">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="DomainID" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="PassPhrase" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="RAName" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="RAPublicKey" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="SetPassPhraseResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="SetPassPhraseResult" type="s0:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="DefaultAccount">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="DomainID" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="iFolderID" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="DefaultAccountResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" maxOccurs="1" name="DefaultAccountResult" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetDefaultiFolder">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="DomainID" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetDefaultiFolderResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="GetDefaultiFolderResult" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ReSetPassPhrase">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="DomainID" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="OldPassPhrase" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="PassPhrase" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="RAName" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="RAPublicKey" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ReSetPassPhraseResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="ReSetPassPhraseResult" type="s0:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ValidatePassPhrase">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="DomainID" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="PassPhrase" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ValidatePassPhraseResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="ValidatePassPhraseResult" type="s0:Status"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="IsPassPhraseSet">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="DomainID" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="IsPassPhraseSetResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" maxOccurs="1" name="IsPassPhraseSetResult" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetSimiasDataPath">
        <xs:complexType/>
      </xs:element>
      <xs:element name="GetSimiasDataPathResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="GetSimiasDataPathResult" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetSimiasProcessID">
        <xs:complexType/>
      </xs:element>
      <xs:element name="GetSimiasProcessIDResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" maxOccurs="1" name="GetSimiasProcessIDResult" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="string" nillable="true" type="xs:string"/>
      <xs:element name="DomainInformation" nillable="true" type="s0:DomainInformation"/>
      <xs:element name="ArrayOfDomainInformation" nillable="true" type="s0:ArrayOfDomainInformation"/>
      <xs:element name="Status" nillable="true" type="s0:Status"/>
      <xs:element name="boolean" type="xs:boolean"/>
      <xs:element name="int" type="xs:int"/>
      <xs:element name="base64Binary" nillable="true" type="xs:base64Binary"/>
      <xs:element name="ArrayOfString" nillable="true" type="s0:ArrayOfString"/>
      <xs:element name="CollectionKey" nillable="true" type="s0:CollectionKey"/>
    </xs:schema>
    <xs:schema xmlns:tns="http://novell.com/simias/web/AbstractTypes" targetNamespace="http://novell.com/simias/web/AbstractTypes" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:import namespace="http://schemas.xmlsoap.org/soap/encoding/"/>
      <xs:simpleType name="CredentialType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="None"/>
          <xs:enumeration value="NotRequired"/>
          <xs:enumeration value="Basic"/>
          <xs:enumeration value="PPK"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:schema>
  </types>
  <message name="PingSimiasSoapIn">
    <part name="parameters" element="s0:PingSimias"/>
  </message>
  <message name="PingSimiasSoapOut">
    <part name="parameters" element="s0:PingSimiasResponse"/>
  </message>
  <message name="AddMemberToDomainSoapIn">
    <part name="parameters" element="s0:AddMemberToDomain"/>
  </message>
  <message name="AddMemberToDomainSoapOut">
    <part name="parameters" element="s0:AddMemberToDomainResponse"/>
  </message>
  <message name="RemoveMemberFromDomainSoapIn">
    <part name="parameters" element="s0:RemoveMemberFromDomain"/>
  </message>
  <message name="RemoveMemberFromDomainSoapOut">
    <part name="parameters" element="s0:RemoveMemberFromDomainResponse"/>
  </message>
  <message name="FindCloseMembersSoapIn">
    <part name="parameters" element="s0:FindCloseMembers"/>
  </message>
  <message name="FindCloseMembersSoapOut">
    <part name="parameters" element="s0:FindCloseMembersResponse"/>
  </message>
  <message name="FindFirstMembersSoapIn">
    <part name="parameters" element="s0:FindFirstMembers"/>
  </message>
  <message name="FindFirstMembersSoapOut">
    <part name="parameters" element="s0:FindFirstMembersResponse"/>
  </message>
  <message name="FindFirstSpecificMembersSoapIn">
    <part name="parameters" element="s0:FindFirstSpecificMembers"/>
  </message>
  <message name="FindFirstSpecificMembersSoapOut">
    <part name="parameters" element="s0:FindFirstSpecificMembersResponse"/>
  </message>
  <message name="FindNextMembersSoapIn">
    <part name="parameters" element="s0:FindNextMembers"/>
  </message>
  <message name="FindNextMembersSoapOut">
    <part name="parameters" element="s0:FindNextMembersResponse"/>
  </message>
  <message name="FindPreviousMembersSoapIn">
    <part name="parameters" element="s0:FindPreviousMembers"/>
  </message>
  <message name="FindPreviousMembersSoapOut">
    <part name="parameters" element="s0:FindPreviousMembersResponse"/>
  </message>
  <message name="FindSeekMembersSoapIn">
    <part name="parameters" element="s0:FindSeekMembers"/>
  </message>
  <message name="FindSeekMembersSoapOut">
    <part name="parameters" element="s0:FindSeekMembersResponse"/>
  </message>
  <message name="GetSimiasInformationSoapIn">
    <part name="parameters" element="s0:GetSimiasInformation"/>
  </message>
  <message name="GetSimiasInformationSoapOut">
    <part name="parameters" element="s0:GetSimiasInformationResponse"/>
  </message>
  <message name="GetDomainInformationSoapIn">
    <part name="parameters" element="s0:GetDomainInformation"/>
  </message>
  <message name="GetDomainInformationSoapOut">
    <part name="parameters" element="s0:GetDomainInformationResponse"/>
  </message>
  <message name="GetDomainsSoapIn">
    <part name="parameters" element="s0:GetDomains"/>
  </message>
  <message name="GetDomainsSoapOut">
    <part name="parameters" element="s0:GetDomainsResponse"/>
  </message>
  <message name="LoginToRemoteDomainSoapIn">
    <part name="parameters" element="s0:LoginToRemoteDomain"/>
  </message>
  <message name="LoginToRemoteDomainSoapOut">
    <part name="parameters" element="s0:LoginToRemoteDomainResponse"/>
  </message>
  <message name="LogoutFromRemoteDomainSoapIn">
    <part name="parameters" element="s0:LogoutFromRemoteDomain"/>
  </message>
  <message name="LogoutFromRemoteDomainSoapOut">
    <part name="parameters" element="s0:LogoutFromRemoteDomainResponse"/>
  </message>
  <message name="DisableDomainAutoLoginSoapIn">
    <part name="parameters" element="s0:DisableDomainAutoLogin"/>
  </message>
  <message name="DisableDomainAutoLoginSoapOut">
    <part name="parameters" element="s0:DisableDomainAutoLoginResponse"/>
  </message>
  <message name="IsDomainActiveSoapIn">
    <part name="parameters" element="s0:IsDomainActive"/>
  </message>
  <message name="IsDomainActiveSoapOut">
    <part name="parameters" element="s0:IsDomainActiveResponse"/>
  </message>
  <message name="SetDomainActiveSoapIn">
    <part name="parameters" element="s0:SetDomainActive"/>
  </message>
  <message name="SetDomainActiveSoapOut">
    <part name="parameters" element="s0:SetDomainActiveResponse"/>
  </message>
  <message name="SetDomainInactiveSoapIn">
    <part name="parameters" element="s0:SetDomainInactive"/>
  </message>
  <message name="SetDomainInactiveSoapOut">
    <part name="parameters" element="s0:SetDomainInactiveResponse"/>
  </message>
  <message name="ValidCredentialsSoapIn">
    <part name="parameters" element="s0:ValidCredentials"/>
  </message>
  <message name="ValidCredentialsSoapOut">
    <part name="parameters" element="s0:ValidCredentialsResponse"/>
  </message>
  <message name="SetDomainCredentialsSoapIn">
    <part name="parameters" element="s0:SetDomainCredentials"/>
  </message>
  <message name="SetDomainCredentialsSoapOut">
    <part name="parameters" element="s0:SetDomainCredentialsResponse"/>
  </message>
  <message name="SetHostAddressSoapIn">
    <part name="parameters" element="s0:SetHostAddress"/>
  </message>
  <message name="SetHostAddressSoapOut">
    <part name="parameters" element="s0:SetHostAddressResponse"/>
  </message>
  <message name="StorePassPhraseSoapIn">
    <part name="parameters" element="s0:StorePassPhrase"/>
  </message>
  <message name="StorePassPhraseSoapOut">
    <part name="parameters" element="s0:StorePassPhraseResponse"/>
  </message>
  <message name="GetDomainCredentialsSoapIn">
    <part name="parameters" element="s0:GetDomainCredentials"/>
  </message>
  <message name="GetDomainCredentialsSoapOut">
    <part name="parameters" element="s0:GetDomainCredentialsResponse"/>
  </message>
  <message name="GetPassPhraseSoapIn">
    <part name="parameters" element="s0:GetPassPhrase"/>
  </message>
  <message name="GetPassPhraseSoapOut">
    <part name="parameters" element="s0:GetPassPhraseResponse"/>
  </message>
  <message name="GetRememberOptionSoapIn">
    <part name="parameters" element="s0:GetRememberOption"/>
  </message>
  <message name="GetRememberOptionSoapOut">
    <part name="parameters" element="s0:GetRememberOptionResponse"/>
  </message>
  <message name="ConnectToDomainSoapIn">
    <part name="parameters" element="s0:ConnectToDomain"/>
  </message>
  <message name="ConnectToDomainSoapOut">
    <part name="parameters" element="s0:ConnectToDomainResponse"/>
  </message>
  <message name="LeaveDomainSoapIn">
    <part name="parameters" element="s0:LeaveDomain"/>
  </message>
  <message name="LeaveDomainSoapOut">
    <part name="parameters" element="s0:LeaveDomainResponse"/>
  </message>
  <message name="RemoveCertFromTableSoapIn">
    <part name="parameters" element="s0:RemoveCertFromTable"/>
  </message>
  <message name="RemoveCertFromTableSoapOut">
    <part name="parameters" element="s0:RemoveCertFromTableResponse"/>
  </message>
  <message name="SetDefaultDomainSoapIn">
    <part name="parameters" element="s0:SetDefaultDomain"/>
  </message>
  <message name="SetDefaultDomainSoapOut">
    <part name="parameters" element="s0:SetDefaultDomainResponse"/>
  </message>
  <message name="GetDefaultDomainIDSoapIn">
    <part name="parameters" element="s0:GetDefaultDomainID"/>
  </message>
  <message name="GetDefaultDomainIDSoapOut">
    <part name="parameters" element="s0:GetDefaultDomainIDResponse"/>
  </message>
  <message name="GetCertificateSoapIn">
    <part name="parameters" element="s0:GetCertificate"/>
  </message>
  <message name="GetCertificateSoapOut">
    <part name="parameters" element="s0:GetCertificateResponse"/>
  </message>
  <message name="GetCertificate2SoapIn">
    <part name="parameters" element="s0:GetCertificate2"/>
  </message>
  <message name="GetCertificate2SoapOut">
    <part name="parameters" element="s0:GetCertificate2Response"/>
  </message>
  <message name="StoreCertificateSoapIn">
    <part name="parameters" element="s0:StoreCertificate"/>
  </message>
  <message name="StoreCertificateSoapOut">
    <part name="parameters" element="s0:StoreCertificateResponse"/>
  </message>
  <message name="StoreDomainCertificateSoapIn">
    <part name="parameters" element="s0:StoreDomainCertificate"/>
  </message>
  <message name="StoreDomainCertificateSoapOut">
    <part name="parameters" element="s0:StoreDomainCertificateResponse"/>
  </message>
  <message name="GetRAListSoapIn">
    <part name="parameters" element="s0:GetRAList"/>
  </message>
  <message name="GetRAListSoapOut">
    <part name="parameters" element="s0:GetRAListResponse"/>
  </message>
  <message name="GetRAListOnClientSoapIn">
    <part name="parameters" element="s0:GetRAListOnClient"/>
  </message>
  <message name="GetRAListOnClientSoapOut">
    <part name="parameters" element="s0:GetRAListOnClientResponse"/>
  </message>
  <message name="GetRACertificateSoapIn">
    <part name="parameters" element="s0:GetRACertificate"/>
  </message>
  <message name="GetRACertificateSoapOut">
    <part name="parameters" element="s0:GetRACertificateResponse"/>
  </message>
  <message name="GetRACertificateOnClientSoapIn">
    <part name="parameters" element="s0:GetRACertificateOnClient"/>
  </message>
  <message name="GetRACertificateOnClientSoapOut">
    <part name="parameters" element="s0:GetRACertificateOnClientResponse"/>
  </message>
  <message name="GetPublicKeySoapIn">
    <part name="parameters" element="s0:GetPublicKey"/>
  </message>
  <message name="GetPublicKeySoapOut">
    <part name="parameters" element="s0:GetPublicKeyResponse"/>
  </message>
  <message name="GetDefaultPublicKeySoapIn">
    <part name="parameters" element="s0:GetDefaultPublicKey"/>
  </message>
  <message name="GetDefaultPublicKeySoapOut">
    <part name="parameters" element="s0:GetDefaultPublicKeyResponse"/>
  </message>
  <message name="GetDefaultRSAFromServerSoapIn">
    <part name="parameters" element="s0:GetDefaultRSAFromServer"/>
  </message>
  <message name="GetDefaultRSAFromServerSoapOut">
    <part name="parameters" element="s0:GetDefaultRSAFromServerResponse"/>
  </message>
  <message name="GetDefaultRSAKeySoapIn">
    <part name="parameters" element="s0:GetDefaultRSAKey"/>
  </message>
  <message name="GetDefaultRSAKeySoapOut">
    <part name="parameters" element="s0:GetDefaultRSAKeyResponse"/>
  </message>
  <message name="StoreRACertificateSoapIn">
    <part name="parameters" element="s0:StoreRACertificate"/>
  </message>
  <message name="StoreRACertificateSoapOut">
    <part name="parameters" element="s0:StoreRACertificateResponse"/>
  </message>
  <message name="GetInvalidSyncFilenameCharsSoapIn">
    <part name="parameters" element="s0:GetInvalidSyncFilenameChars"/>
  </message>
  <message name="GetInvalidSyncFilenameCharsSoapOut">
    <part name="parameters" element="s0:GetInvalidSyncFilenameCharsResponse"/>
  </message>
  <message name="SetDomainHostAddressSoapIn">
    <part name="parameters" element="s0:SetDomainHostAddress"/>
  </message>
  <message name="SetDomainHostAddressSoapOut">
    <part name="parameters" element="s0:SetDomainHostAddressResponse"/>
  </message>
  <message name="SetProxyAddressSoapIn">
    <part name="parameters" element="s0:SetProxyAddress"/>
  </message>
  <message name="SetProxyAddressSoapOut">
    <part name="parameters" element="s0:SetProxyAddressResponse"/>
  </message>
  <message name="CanShareServiceSoapIn">
    <part name="parameters" element="s0:CanShareService"/>
  </message>
  <message name="CanShareServiceSoapOut">
    <part name="parameters" element="s0:CanShareServiceResponse"/>
  </message>
  <message name="StopSimiasProcessSoapIn">
    <part name="parameters" element="s0:StopSimiasProcess"/>
  </message>
  <message name="StopSimiasProcessSoapOut">
    <part name="parameters" element="s0:StopSimiasProcessResponse"/>
  </message>
  <message name="AddSimiasReferenceSoapIn">
    <part name="parameters" element="s0:AddSimiasReference"/>
  </message>
  <message name="AddSimiasReferenceSoapOut">
    <part name="parameters" element="s0:AddSimiasReferenceResponse"/>
  </message>
  <message name="RemoveSimiasReferenceSoapIn">
    <part name="parameters" element="s0:RemoveSimiasReference"/>
  </message>
  <message name="RemoveSimiasReferenceSoapOut">
    <part name="parameters" element="s0:RemoveSimiasReferenceResponse"/>
  </message>
  <message name="ServerSetDefaultAccountSoapIn">
    <part name="parameters" element="s0:ServerSetDefaultAccount"/>
  </message>
  <message name="ServerSetDefaultAccountSoapOut">
    <part name="parameters" element="s0:ServerSetDefaultAccountResponse"/>
  </message>
  <message name="ServerGetDefaultiFolderSoapIn">
    <part name="parameters" element="s0:ServerGetDefaultiFolder"/>
  </message>
  <message name="ServerGetDefaultiFolderSoapOut">
    <part name="parameters" element="s0:ServerGetDefaultiFolderResponse"/>
  </message>
  <message name="GetGroupsiFolderLimitPolicySoapIn">
    <part name="parameters" element="s0:GetGroupsiFolderLimitPolicy"/>
  </message>
  <message name="GetGroupsiFolderLimitPolicySoapOut">
    <part name="parameters" element="s0:GetGroupsiFolderLimitPolicyResponse"/>
  </message>
  <message name="IsTransferAllowedSoapIn">
    <part name="parameters" element="s0:IsTransferAllowed"/>
  </message>
  <message name="IsTransferAllowedSoapOut">
    <part name="parameters" element="s0:IsTransferAllowedResponse"/>
  </message>
  <message name="GetGroupsSharingPolicySoapIn">
    <part name="parameters" element="s0:GetGroupsSharingPolicy"/>
  </message>
  <message name="GetGroupsSharingPolicySoapOut">
    <part name="parameters" element="s0:GetGroupsSharingPolicyResponse"/>
  </message>
  <message name="GetGroupsSecurityPolicySoapIn">
    <part name="parameters" element="s0:GetGroupsSecurityPolicy"/>
  </message>
  <message name="GetGroupsSecurityPolicySoapOut">
    <part name="parameters" element="s0:GetGroupsSecurityPolicyResponse"/>
  </message>
  <message name="GetEffectiveSyncPolicySoapIn">
    <part name="parameters" element="s0:GetEffectiveSyncPolicy"/>
  </message>
  <message name="GetEffectiveSyncPolicySoapOut">
    <part name="parameters" element="s0:GetEffectiveSyncPolicyResponse"/>
  </message>
  <message name="ServerSetPassPhraseSoapIn">
    <part name="parameters" element="s0:ServerSetPassPhrase"/>
  </message>
  <message name="ServerSetPassPhraseSoapOut">
    <part name="parameters" element="s0:ServerSetPassPhraseResponse"/>
  </message>
  <message name="ServerGetEncrypPassKeySoapIn">
    <part name="parameters" element="s0:ServerGetEncrypPassKey"/>
  </message>
  <message name="ServerGetEncrypPassKeySoapOut">
    <part name="parameters" element="s0:ServerGetEncrypPassKeyResponse"/>
  </message>
  <message name="ServerGetPassKeyHashSoapIn">
    <part name="parameters" element="s0:ServerGetPassKeyHash"/>
  </message>
  <message name="ServerGetPassKeyHashSoapOut">
    <part name="parameters" element="s0:ServerGetPassKeyHashResponse"/>
  </message>
  <message name="UpdateUserMoveStateSoapIn">
    <part name="parameters" element="s0:UpdateUserMoveState"/>
  </message>
  <message name="UpdateUserMoveStateSoapOut">
    <part name="parameters" element="s0:UpdateUserMoveStateResponse"/>
  </message>
  <message name="UpdateHomeServerSoapIn">
    <part name="parameters" element="s0:UpdateHomeServer"/>
  </message>
  <message name="UpdateHomeServerSoapOut">
    <part name="parameters" element="s0:UpdateHomeServerResponse"/>
  </message>
  <message name="DownloadiFolderSoapIn">
    <part name="parameters" element="s0:DownloadiFolder"/>
  </message>
  <message name="DownloadiFolderSoapOut">
    <part name="parameters" element="s0:DownloadiFolderResponse"/>
  </message>
  <message name="UpdateLocalPropertiesSoapIn">
    <part name="parameters" element="s0:UpdateLocalProperties"/>
  </message>
  <message name="UpdateLocalPropertiesSoapOut">
    <part name="parameters" element="s0:UpdateLocalPropertiesResponse"/>
  </message>
  <message name="DisableUserSoapIn">
    <part name="parameters" element="s0:DisableUser"/>
  </message>
  <message name="DisableUserSoapOut">
    <part name="parameters" element="s0:DisableUserResponse"/>
  </message>
  <message name="SetOnMasterEncryptionBlobFlagSoapIn">
    <part name="parameters" element="s0:SetOnMasterEncryptionBlobFlag"/>
  </message>
  <message name="SetOnMasterEncryptionBlobFlagSoapOut">
    <part name="parameters" element="s0:SetOnMasterEncryptionBlobFlagResponse"/>
  </message>
  <message name="CommitDomainMemberSoapIn">
    <part name="parameters" element="s0:CommitDomainMember"/>
  </message>
  <message name="CommitDomainMemberSoapOut">
    <part name="parameters" element="s0:CommitDomainMemberResponse"/>
  </message>
  <message name="ServerGetCollectionHashKeySoapIn">
    <part name="parameters" element="s0:ServerGetCollectionHashKey"/>
  </message>
  <message name="ServerGetCollectionHashKeySoapOut">
    <part name="parameters" element="s0:ServerGetCollectionHashKeyResponse"/>
  </message>
  <message name="GetiFolderCryptoKeysSoapIn">
    <part name="parameters" element="s0:GetiFolderCryptoKeys"/>
  </message>
  <message name="GetiFolderCryptoKeysSoapOut">
    <part name="parameters" element="s0:GetiFolderCryptoKeysResponse"/>
  </message>
  <message name="SetiFolderCryptoKeysSoapIn">
    <part name="parameters" element="s0:SetiFolderCryptoKeys"/>
  </message>
  <message name="SetiFolderCryptoKeysSoapOut">
    <part name="parameters" element="s0:SetiFolderCryptoKeysResponse"/>
  </message>
  <message name="ExportiFoldersCryptoKeysSoapIn">
    <part name="parameters" element="s0:ExportiFoldersCryptoKeys"/>
  </message>
  <message name="ExportiFoldersCryptoKeysSoapOut">
    <part name="parameters" element="s0:ExportiFoldersCryptoKeysResponse"/>
  </message>
  <message name="ImportiFoldersCryptoKeysSoapIn">
    <part name="parameters" element="s0:ImportiFoldersCryptoKeys"/>
  </message>
  <message name="ImportiFoldersCryptoKeysSoapOut">
    <part name="parameters" element="s0:ImportiFoldersCryptoKeysResponse"/>
  </message>
  <message name="ExportiFoldersCryptoKeysToDocSoapIn">
    <part name="parameters" element="s0:ExportiFoldersCryptoKeysToDoc"/>
  </message>
  <message name="ExportiFoldersCryptoKeysToDocSoapOut">
    <part name="parameters" element="s0:ExportiFoldersCryptoKeysToDocResponse"/>
  </message>
  <message name="RecoverKeysSoapIn">
    <part name="parameters" element="s0:RecoverKeys"/>
  </message>
  <message name="RecoverKeysSoapOut">
    <part name="parameters" element="s0:RecoverKeysResponse"/>
  </message>
  <message name="ImportiFoldersCryptoKeysFromDocSoapIn">
    <part name="parameters" element="s0:ImportiFoldersCryptoKeysFromDoc"/>
  </message>
  <message name="ImportiFoldersCryptoKeysFromDocSoapOut">
    <part name="parameters" element="s0:ImportiFoldersCryptoKeysFromDocResponse"/>
  </message>
  <message name="ExportRecoverImportSoapIn">
    <part name="parameters" element="s0:ExportRecoverImport"/>
  </message>
  <message name="ExportRecoverImportSoapOut">
    <part name="parameters" element="s0:ExportRecoverImportResponse"/>
  </message>
  <message name="SetPassPhraseSoapIn">
    <part name="parameters" element="s0:SetPassPhrase"/>
  </message>
  <message name="SetPassPhraseSoapOut">
    <part name="parameters" element="s0:SetPassPhraseResponse"/>
  </message>
  <message name="DefaultAccountSoapIn">
    <part name="parameters" element="s0:DefaultAccount"/>
  </message>
  <message name="DefaultAccountSoapOut">
    <part name="parameters" element="s0:DefaultAccountResponse"/>
  </message>
  <message name="GetDefaultiFolderSoapIn">
    <part name="parameters" element="s0:GetDefaultiFolder"/>
  </message>
  <message name="GetDefaultiFolderSoapOut">
    <part name="parameters" element="s0:GetDefaultiFolderResponse"/>
  </message>
  <message name="ReSetPassPhraseSoapIn">
    <part name="parameters" element="s0:ReSetPassPhrase"/>
  </message>
  <message name="ReSetPassPhraseSoapOut">
    <part name="parameters" element="s0:ReSetPassPhraseResponse"/>
  </message>
  <message name="ValidatePassPhraseSoapIn">
    <part name="parameters" element="s0:ValidatePassPhrase"/>
  </message>
  <message name="ValidatePassPhraseSoapOut">
    <part name="parameters" element="s0:ValidatePassPhraseResponse"/>
  </message>
  <message name="IsPassPhraseSetSoapIn">
    <part name="parameters" element="s0:IsPassPhraseSet"/>
  </message>
  <message name="IsPassPhraseSetSoapOut">
    <part name="parameters" element="s0:IsPassPhraseSetResponse"/>
  </message>
  <message name="GetSimiasDataPathSoapIn">
    <part name="parameters" element="s0:GetSimiasDataPath"/>
  </message>
  <message name="GetSimiasDataPathSoapOut">
    <part name="parameters" element="s0:GetSimiasDataPathResponse"/>
  </message>
  <message name="GetSimiasProcessIDSoapIn">
    <part name="parameters" element="s0:GetSimiasProcessID"/>
  </message>
  <message name="GetSimiasProcessIDSoapOut">
    <part name="parameters" element="s0:GetSimiasProcessIDResponse"/>
  </message>
  <message name="PingSimiasHttpGetIn"/>
  <message name="PingSimiasHttpGetOut"/>
  <message name="AddMemberToDomainHttpGetIn">
    <part name="DomainID" type="s:string"/>
    <part name="MemberName" type="s:string"/>
    <part name="MemberID" type="s:string"/>
    <part name="PublicKey" type="s:string"/>
    <part name="GivenName" type="s:string"/>
    <part name="FamilyName" type="s:string"/>
  </message>
  <message name="AddMemberToDomainHttpGetOut"/>
  <message name="RemoveMemberFromDomainHttpGetIn">
    <part name="DomainID" type="s:string"/>
    <part name="MemberID" type="s:string"/>
  </message>
  <message name="RemoveMemberFromDomainHttpGetOut"/>
  <message name="FindCloseMembersHttpGetIn">
    <part name="domainID" type="s:string"/>
    <part name="searchContext" type="s:string"/>
  </message>
  <message name="FindCloseMembersHttpGetOut"/>
  <message name="GetSimiasInformationHttpGetIn"/>
  <message name="GetSimiasInformationHttpGetOut">
    <part name="Body" element="s0:string"/>
  </message>
  <message name="GetDomainInformationHttpGetIn">
    <part name="domainID" type="s:string"/>
  </message>
  <message name="GetDomainInformationHttpGetOut">
    <part name="Body" element="s0:DomainInformation"/>
  </message>
  <message name="GetDomainsHttpGetIn">
    <part name="onlySlaves" type="s:boolean"/>
  </message>
  <message name="GetDomainsHttpGetOut">
    <part name="Body" element="s0:ArrayOfDomainInformation"/>
  </message>
  <message name="LoginToRemoteDomainHttpGetIn">
    <part name="domainID" type="s:string"/>
    <part name="password" type="s:string"/>
  </message>
  <message name="LoginToRemoteDomainHttpGetOut">
    <part name="Body" element="s0:Status"/>
  </message>
  <message name="LogoutFromRemoteDomainHttpGetIn">
    <part name="domainID" type="s:string"/>
  </message>
  <message name="LogoutFromRemoteDomainHttpGetOut">
    <part name="Body" element="s0:Status"/>
  </message>
  <message name="DisableDomainAutoLoginHttpGetIn">
    <part name="domainID" type="s:string"/>
  </message>
  <message name="DisableDomainAutoLoginHttpGetOut"/>
  <message name="IsDomainActiveHttpGetIn">
    <part name="domainID" type="s:string"/>
  </message>
  <message name="IsDomainActiveHttpGetOut">
    <part name="Body" element="s0:boolean"/>
  </message>
  <message name="SetDomainActiveHttpGetIn">
    <part name="domainID" type="s:string"/>
  </message>
  <message name="SetDomainActiveHttpGetOut">
    <part name="Body" element="s0:int"/>
  </message>
  <message name="SetDomainInactiveHttpGetIn">
    <part name="domainID" type="s:string"/>
  </message>
  <message name="SetDomainInactiveHttpGetOut">
    <part name="Body" element="s0:int"/>
  </message>
  <message name="ValidCredentialsHttpGetIn">
    <part name="domainID" type="s:string"/>
    <part name="memberID" type="s:string"/>
  </message>
  <message name="ValidCredentialsHttpGetOut">
    <part name="Body" element="s0:boolean"/>
  </message>
  <message name="SetDomainCredentialsHttpGetIn">
    <part name="domainID" type="s:string"/>
    <part name="credentials" type="s:string"/>
    <part name="type" xmlns:q1="http://novell.com/simias/web/AbstractTypes" type="q1:CredentialType"/>
  </message>
  <message name="SetDomainCredentialsHttpGetOut"/>
  <message name="SetHostAddressHttpGetIn">
    <part name="Host" type="s:string"/>
    <part name="PublicUrl" type="s:string"/>
    <part name="PrivateUrl" type="s:string"/>
    <part name="DomainID" type="s:string"/>
  </message>
  <message name="SetHostAddressHttpGetOut"/>
  <message name="StorePassPhraseHttpGetIn">
    <part name="domainID" type="s:string"/>
    <part name="passPhrase" type="s:string"/>
    <part name="type" xmlns:q2="http://novell.com/simias/web/AbstractTypes" type="q2:CredentialType"/>
    <part name="rememberPassPhrase" type="s:boolean"/>
  </message>
  <message name="StorePassPhraseHttpGetOut"/>
  <message name="GetPassPhraseHttpGetIn">
    <part name="domainID" type="s:string"/>
  </message>
  <message name="GetPassPhraseHttpGetOut">
    <part name="Body" element="s0:string"/>
  </message>
  <message name="GetRememberOptionHttpGetIn">
    <part name="domainID" type="s:string"/>
  </message>
  <message name="GetRememberOptionHttpGetOut">
    <part name="Body" element="s0:boolean"/>
  </message>
  <message name="ConnectToDomainHttpGetIn">
    <part name="UserName" type="s:string"/>
    <part name="Password" type="s:string"/>
    <part name="Host" type="s:string"/>
  </message>
  <message name="ConnectToDomainHttpGetOut">
    <part name="Body" element="s0:DomainInformation"/>
  </message>
  <message name="LeaveDomainHttpGetIn">
    <part name="DomainID" type="s:string"/>
    <part name="LocalOnly" type="s:boolean"/>
  </message>
  <message name="LeaveDomainHttpGetOut"/>
  <message name="RemoveCertFromTableHttpGetIn">
    <part name="host" type="s:string"/>
  </message>
  <message name="RemoveCertFromTableHttpGetOut"/>
  <message name="SetDefaultDomainHttpGetIn">
    <part name="domainID" type="s:string"/>
  </message>
  <message name="SetDefaultDomainHttpGetOut"/>
  <message name="GetDefaultDomainIDHttpGetIn"/>
  <message name="GetDefaultDomainIDHttpGetOut">
    <part name="Body" element="s0:string"/>
  </message>
  <message name="GetCertificateHttpGetIn">
    <part name="host" type="s:string"/>
  </message>
  <message name="GetCertificateHttpGetOut">
    <part name="Body" element="s0:base64Binary"/>
  </message>
  <message name="StoreCertificateHttpGetIn">
    <part name="certificate" type="s:base64Binary"/>
    <part name="host" type="s:string"/>
  </message>
  <message name="StoreCertificateHttpGetOut"/>
  <message name="StoreDomainCertificateHttpGetIn">
    <part name="certificate" type="s:base64Binary"/>
    <part name="host" type="s:string"/>
    <part name="domainID" type="s:string"/>
  </message>
  <message name="StoreDomainCertificateHttpGetOut"/>
  <message name="GetRAListHttpGetIn"/>
  <message name="GetRAListHttpGetOut">
    <part name="Body" element="s0:ArrayOfString"/>
  </message>
  <message name="GetRAListOnClientHttpGetIn">
    <part name="DomainID" type="s:string"/>
  </message>
  <message name="GetRAListOnClientHttpGetOut">
    <part name="Body" element="s0:ArrayOfString"/>
  </message>
  <message name="GetRACertificateHttpGetIn">
    <part name="rAgent" type="s:string"/>
  </message>
  <message name="GetRACertificateHttpGetOut">
    <part name="Body" element="s0:base64Binary"/>
  </message>
  <message name="GetRACertificateOnClientHttpGetIn">
    <part name="DomainID" type="s:string"/>
    <part name="rAgent" type="s:string"/>
  </message>
  <message name="GetRACertificateOnClientHttpGetOut">
    <part name="Body" element="s0:base64Binary"/>
  </message>
  <message name="GetPublicKeyHttpGetIn">
    <part name="DomainID" type="s:string"/>
    <part name="rAgent" type="s:string"/>
  </message>
  <message name="GetPublicKeyHttpGetOut">
    <part name="Body" element="s0:string"/>
  </message>
  <message name="GetDefaultPublicKeyHttpGetIn">
    <part name="DomainID" type="s:string"/>
  </message>
  <message name="GetDefaultPublicKeyHttpGetOut">
    <part name="Body" element="s0:string"/>
  </message>
  <message name="GetDefaultRSAFromServerHttpGetIn">
    <part name="DomainID" type="s:string"/>
  </message>
  <message name="GetDefaultRSAFromServerHttpGetOut">
    <part name="Body" element="s0:string"/>
  </message>
  <message name="GetDefaultRSAKeyHttpGetIn">
    <part name="DomainID" type="s:string"/>
  </message>
  <message name="GetDefaultRSAKeyHttpGetOut">
    <part name="Body" element="s0:string"/>
  </message>
  <message name="StoreRACertificateHttpGetIn">
    <part name="certificate" type="s:base64Binary"/>
    <part name="rAgent" type="s:string"/>
  </message>
  <message name="StoreRACertificateHttpGetOut"/>
  <message name="GetInvalidSyncFilenameCharsHttpGetIn"/>
  <message name="GetInvalidSyncFilenameCharsHttpGetOut">
    <part name="Body" element="s0:string"/>
  </message>
  <message name="SetDomainHostAddressHttpGetIn">
    <part name="domainID" type="s:string"/>
    <part name="hostAddress" type="s:string"/>
    <part name="user" type="s:string"/>
    <part name="password" type="s:string"/>
  </message>
  <message name="SetDomainHostAddressHttpGetOut">
    <part name="Body" element="s0:boolean"/>
  </message>
  <message name="SetProxyAddressHttpGetIn">
    <part name="hostUri" type="s:string"/>
    <part name="proxyUri" type="s:string"/>
    <part name="proxyUser" type="s:string"/>
    <part name="proxyPassword" type="s:string"/>
  </message>
  <message name="SetProxyAddressHttpGetOut">
    <part name="Body" element="s0:boolean"/>
  </message>
  <message name="CanShareServiceHttpGetIn">
    <part name="simiasDataPath" type="s:string"/>
    <part name="isClient" type="s:boolean"/>
  </message>
  <message name="CanShareServiceHttpGetOut">
    <part name="Body" element="s0:boolean"/>
  </message>
  <message name="StopSimiasProcessHttpGetIn"/>
  <message name="StopSimiasProcessHttpGetOut"/>
  <message name="AddSimiasReferenceHttpGetIn"/>
  <message name="AddSimiasReferenceHttpGetOut">
    <part name="Body" element="s0:int"/>
  </message>
  <message name="RemoveSimiasReferenceHttpGetIn"/>
  <message name="RemoveSimiasReferenceHttpGetOut">
    <part name="Body" element="s0:int"/>
  </message>
  <message name="ServerSetDefaultAccountHttpGetIn">
    <part name="DomainID" type="s:string"/>
    <part name="UserID" type="s:string"/>
    <part name="iFolderID" type="s:string"/>
  </message>
  <message name="ServerSetDefaultAccountHttpGetOut">
    <part name="Body" element="s0:boolean"/>
  </message>
  <message name="ServerGetDefaultiFolderHttpGetIn">
    <part name="DomainID" type="s:string"/>
    <part name="UserID" type="s:string"/>
  </message>
  <message name="ServerGetDefaultiFolderHttpGetOut">
    <part name="Body" element="s0:string"/>
  </message>
  <message name="GetGroupsiFolderLimitPolicyHttpGetIn">
    <part name="DomainID" type="s:string"/>
    <part name="UserID" type="s:string"/>
  </message>
  <message name="GetGroupsiFolderLimitPolicyHttpGetOut">
    <part name="Body" element="s0:int"/>
  </message>
  <message name="IsTransferAllowedHttpGetIn">
    <part name="DomainID" type="s:string"/>
    <part name="UserID" type="s:string"/>
  </message>
  <message name="IsTransferAllowedHttpGetOut">
    <part name="Body" element="s0:boolean"/>
  </message>
  <message name="GetGroupsSharingPolicyHttpGetIn">
    <part name="DomainID" type="s:string"/>
    <part name="UserID" type="s:string"/>
  </message>
  <message name="GetGroupsSharingPolicyHttpGetOut">
    <part name="Body" element="s0:int"/>
  </message>
  <message name="GetGroupsSecurityPolicyHttpGetIn">
    <part name="DomainID" type="s:string"/>
    <part name="UserID" type="s:string"/>
  </message>
  <message name="GetGroupsSecurityPolicyHttpGetOut">
    <part name="Body" element="s0:int"/>
  </message>
  <message name="GetEffectiveSyncPolicyHttpGetIn">
    <part name="DomainID" type="s:string"/>
    <part name="UserID" type="s:string"/>
    <part name="CollectionID" type="s:string"/>
  </message>
  <message name="GetEffectiveSyncPolicyHttpGetOut">
    <part name="Body" element="s0:int"/>
  </message>
  <message name="ServerSetPassPhraseHttpGetIn">
    <part name="DomainID" type="s:string"/>
    <part name="UserID" type="s:string"/>
    <part name="EncryptedCryptoKey" type="s:string"/>
    <part name="CryptoKeyBlob" type="s:string"/>
    <part name="RAName" type="s:string"/>
    <part name="RAPublicKey" type="s:string"/>
  </message>
  <message name="ServerSetPassPhraseHttpGetOut">
    <part name="Body" element="s0:Status"/>
  </message>
  <message name="ServerGetEncrypPassKeyHttpGetIn">
    <part name="DomainID" type="s:string"/>
    <part name="UserID" type="s:string"/>
  </message>
  <message name="ServerGetEncrypPassKeyHttpGetOut">
    <part name="Body" element="s0:string"/>
  </message>
  <message name="ServerGetPassKeyHashHttpGetIn">
    <part name="DomainID" type="s:string"/>
    <part name="UserID" type="s:string"/>
  </message>
  <message name="ServerGetPassKeyHashHttpGetOut">
    <part name="Body" element="s0:string"/>
  </message>
  <message name="UpdateUserMoveStateHttpGetIn">
    <part name="DomainID" type="s:string"/>
    <part name="UserID" type="s:string"/>
    <part name="userMoveStatus" type="s:int"/>
  </message>
  <message name="UpdateUserMoveStateHttpGetOut">
    <part name="Body" element="s0:boolean"/>
  </message>
  <message name="UpdateHomeServerHttpGetIn">
    <part name="DomainID" type="s:string"/>
    <part name="UserID" type="s:string"/>
    <part name="newHostID" type="s:string"/>
  </message>
  <message name="UpdateHomeServerHttpGetOut">
    <part name="Body" element="s0:boolean"/>
  </message>
  <message name="DownloadiFolderHttpGetIn">
    <part name="iFolderID" type="s:string"/>
    <part name="name" type="s:string"/>
    <part name="DomainID" type="s:string"/>
    <part name="HostID" type="s:string"/>
    <part name="DirNodeID" type="s:string"/>
    <part name="MemberNodeID" type="s:string"/>
    <part name="colMemberNodeID" type="s:string"/>
    <part name="localPath" type="s:string"/>
  </message>
  <message name="DownloadiFolderHttpGetOut">
    <part name="Body" element="s0:boolean"/>
  </message>
  <message name="UpdateLocalPropertiesHttpGetIn">
    <part name="DomainID" type="s:string"/>
    <part name="UserID" type="s:string"/>
    <part name="EncryptionKey" type="s:string"/>
    <part name="EncryptionVersion" type="s:string"/>
    <part name="EncryptionBlob" type="s:string"/>
    <part name="RAName" type="s:string"/>
    <part name="RAPublicKey" type="s:string"/>
  </message>
  <message name="UpdateLocalPropertiesHttpGetOut">
    <part name="Body" element="s0:boolean"/>
  </message>
  <message name="DisableUserHttpGetIn">
    <part name="DomainID" type="s:string"/>
    <part name="UserID" type="s:string"/>
    <part name="newHostID" type="s:string"/>
  </message>
  <message name="DisableUserHttpGetOut">
    <part name="Body" element="s0:boolean"/>
  </message>
  <message name="SetOnMasterEncryptionBlobFlagHttpGetIn">
    <part name="DomainID" type="s:string"/>
    <part name="UserID" type="s:string"/>
  </message>
  <message name="SetOnMasterEncryptionBlobFlagHttpGetOut"/>
  <message name="ServerGetCollectionHashKeyHttpGetIn">
    <part name="CollectionID" type="s:string"/>
  </message>
  <message name="ServerGetCollectionHashKeyHttpGetOut">
    <part name="Body" element="s0:string"/>
  </message>
  <message name="GetiFolderCryptoKeysHttpGetIn">
    <part name="DomainID" type="s:string"/>
    <part name="UserID" type="s:string"/>
    <part name="Index" type="s:int"/>
  </message>
  <message name="GetiFolderCryptoKeysHttpGetOut">
    <part name="Body" element="s0:CollectionKey"/>
  </message>
  <message name="ExportiFoldersCryptoKeysHttpGetIn">
    <part name="DomainID" type="s:string"/>
    <part name="FilePath" type="s:string"/>
  </message>
  <message name="ExportiFoldersCryptoKeysHttpGetOut"/>
  <message name="ImportiFoldersCryptoKeysHttpGetIn">
    <part name="DomainID" type="s:string"/>
    <part name="NewPassphrase" type="s:string"/>
    <part name="OneTimePassphrase" type="s:string"/>
    <part name="FilePath" type="s:string"/>
  </message>
  <message name="ImportiFoldersCryptoKeysHttpGetOut"/>
  <message name="ExportRecoverImportHttpGetIn">
    <part name="DomainID" type="s:string"/>
    <part name="UserID" type="s:string"/>
    <part name="NewPassphrase" type="s:string"/>
  </message>
  <message name="ExportRecoverImportHttpGetOut"/>
  <message name="SetPassPhraseHttpGetIn">
    <part name="DomainID" type="s:string"/>
    <part name="PassPhrase" type="s:string"/>
    <part name="RAName" type="s:string"/>
    <part name="RAPublicKey" type="s:string"/>
  </message>
  <message name="SetPassPhraseHttpGetOut">
    <part name="Body" element="s0:Status"/>
  </message>
  <message name="DefaultAccountHttpGetIn">
    <part name="DomainID" type="s:string"/>
    <part name="iFolderID" type="s:string"/>
  </message>
  <message name="DefaultAccountHttpGetOut">
    <part name="Body" element="s0:boolean"/>
  </message>
  <message name="GetDefaultiFolderHttpGetIn">
    <part name="DomainID" type="s:string"/>
  </message>
  <message name="GetDefaultiFolderHttpGetOut">
    <part name="Body" element="s0:string"/>
  </message>
  <message name="ReSetPassPhraseHttpGetIn">
    <part name="DomainID" type="s:string"/>
    <part name="OldPassPhrase" type="s:string"/>
    <part name="PassPhrase" type="s:string"/>
    <part name="RAName" type="s:string"/>
    <part name="RAPublicKey" type="s:string"/>
  </message>
  <message name="ReSetPassPhraseHttpGetOut">
    <part name="Body" element="s0:Status"/>
  </message>
  <message name="ValidatePassPhraseHttpGetIn">
    <part name="DomainID" type="s:string"/>
    <part name="PassPhrase" type="s:string"/>
  </message>
  <message name="ValidatePassPhraseHttpGetOut">
    <part name="Body" element="s0:Status"/>
  </message>
  <message name="IsPassPhraseSetHttpGetIn">
    <part name="DomainID" type="s:string"/>
  </message>
  <message name="IsPassPhraseSetHttpGetOut">
    <part name="Body" element="s0:boolean"/>
  </message>
  <message name="GetSimiasDataPathHttpGetIn"/>
  <message name="GetSimiasDataPathHttpGetOut">
    <part name="Body" element="s0:string"/>
  </message>
  <message name="GetSimiasProcessIDHttpGetIn"/>
  <message name="GetSimiasProcessIDHttpGetOut">
    <part name="Body" element="s0:int"/>
  </message>
  <message name="PingSimiasHttpPostIn"/>
  <message name="PingSimiasHttpPostOut"/>
  <message name="AddMemberToDomainHttpPostIn">
    <part name="DomainID" type="s:string"/>
    <part name="MemberName" type="s:string"/>
    <part name="MemberID" type="s:string"/>
    <part name="PublicKey" type="s:string"/>
    <part name="GivenName" type="s:string"/>
    <part name="FamilyName" type="s:string"/>
  </message>
  <message name="AddMemberToDomainHttpPostOut"/>
  <message name="RemoveMemberFromDomainHttpPostIn">
    <part name="DomainID" type="s:string"/>
    <part name="MemberID" type="s:string"/>
  </message>
  <message name="RemoveMemberFromDomainHttpPostOut"/>
  <message name="FindCloseMembersHttpPostIn">
    <part name="domainID" type="s:string"/>
    <part name="searchContext" type="s:string"/>
  </message>
  <message name="FindCloseMembersHttpPostOut"/>
  <message name="GetSimiasInformationHttpPostIn"/>
  <message name="GetSimiasInformationHttpPostOut">
    <part name="Body" element="s0:string"/>
  </message>
  <message name="GetDomainInformationHttpPostIn">
    <part name="domainID" type="s:string"/>
  </message>
  <message name="GetDomainInformationHttpPostOut">
    <part name="Body" element="s0:DomainInformation"/>
  </message>
  <message name="GetDomainsHttpPostIn">
    <part name="onlySlaves" type="s:boolean"/>
  </message>
  <message name="GetDomainsHttpPostOut">
    <part name="Body" element="s0:ArrayOfDomainInformation"/>
  </message>
  <message name="LoginToRemoteDomainHttpPostIn">
    <part name="domainID" type="s:string"/>
    <part name="password" type="s:string"/>
  </message>
  <message name="LoginToRemoteDomainHttpPostOut">
    <part name="Body" element="s0:Status"/>
  </message>
  <message name="LogoutFromRemoteDomainHttpPostIn">
    <part name="domainID" type="s:string"/>
  </message>
  <message name="LogoutFromRemoteDomainHttpPostOut">
    <part name="Body" element="s0:Status"/>
  </message>
  <message name="DisableDomainAutoLoginHttpPostIn">
    <part name="domainID" type="s:string"/>
  </message>
  <message name="DisableDomainAutoLoginHttpPostOut"/>
  <message name="IsDomainActiveHttpPostIn">
    <part name="domainID" type="s:string"/>
  </message>
  <message name="IsDomainActiveHttpPostOut">
    <part name="Body" element="s0:boolean"/>
  </message>
  <message name="SetDomainActiveHttpPostIn">
    <part name="domainID" type="s:string"/>
  </message>
  <message name="SetDomainActiveHttpPostOut">
    <part name="Body" element="s0:int"/>
  </message>
  <message name="SetDomainInactiveHttpPostIn">
    <part name="domainID" type="s:string"/>
  </message>
  <message name="SetDomainInactiveHttpPostOut">
    <part name="Body" element="s0:int"/>
  </message>
  <message name="ValidCredentialsHttpPostIn">
    <part name="domainID" type="s:string"/>
    <part name="memberID" type="s:string"/>
  </message>
  <message name="ValidCredentialsHttpPostOut">
    <part name="Body" element="s0:boolean"/>
  </message>
  <message name="SetDomainCredentialsHttpPostIn">
    <part name="domainID" type="s:string"/>
    <part name="credentials" type="s:string"/>
    <part name="type" xmlns:q3="http://novell.com/simias/web/AbstractTypes" type="q3:CredentialType"/>
  </message>
  <message name="SetDomainCredentialsHttpPostOut"/>
  <message name="SetHostAddressHttpPostIn">
    <part name="Host" type="s:string"/>
    <part name="PublicUrl" type="s:string"/>
    <part name="PrivateUrl" type="s:string"/>
    <part name="DomainID" type="s:string"/>
  </message>
  <message name="SetHostAddressHttpPostOut"/>
  <message name="StorePassPhraseHttpPostIn">
    <part name="domainID" type="s:string"/>
    <part name="passPhrase" type="s:string"/>
    <part name="type" xmlns:q4="http://novell.com/simias/web/AbstractTypes" type="q4:CredentialType"/>
    <part name="rememberPassPhrase" type="s:boolean"/>
  </message>
  <message name="StorePassPhraseHttpPostOut"/>
  <message name="GetPassPhraseHttpPostIn">
    <part name="domainID" type="s:string"/>
  </message>
  <message name="GetPassPhraseHttpPostOut">
    <part name="Body" element="s0:string"/>
  </message>
  <message name="GetRememberOptionHttpPostIn">
    <part name="domainID" type="s:string"/>
  </message>
  <message name="GetRememberOptionHttpPostOut">
    <part name="Body" element="s0:boolean"/>
  </message>
  <message name="ConnectToDomainHttpPostIn">
    <part name="UserName" type="s:string"/>
    <part name="Password" type="s:string"/>
    <part name="Host" type="s:string"/>
  </message>
  <message name="ConnectToDomainHttpPostOut">
    <part name="Body" element="s0:DomainInformation"/>
  </message>
  <message name="LeaveDomainHttpPostIn">
    <part name="DomainID" type="s:string"/>
    <part name="LocalOnly" type="s:boolean"/>
  </message>
  <message name="LeaveDomainHttpPostOut"/>
  <message name="RemoveCertFromTableHttpPostIn">
    <part name="host" type="s:string"/>
  </message>
  <message name="RemoveCertFromTableHttpPostOut"/>
  <message name="SetDefaultDomainHttpPostIn">
    <part name="domainID" type="s:string"/>
  </message>
  <message name="SetDefaultDomainHttpPostOut"/>
  <message name="GetDefaultDomainIDHttpPostIn"/>
  <message name="GetDefaultDomainIDHttpPostOut">
    <part name="Body" element="s0:string"/>
  </message>
  <message name="GetCertificateHttpPostIn">
    <part name="host" type="s:string"/>
  </message>
  <message name="GetCertificateHttpPostOut">
    <part name="Body" element="s0:base64Binary"/>
  </message>
  <message name="StoreCertificateHttpPostIn">
    <part name="certificate" type="s:base64Binary"/>
    <part name="host" type="s:string"/>
  </message>
  <message name="StoreCertificateHttpPostOut"/>
  <message name="StoreDomainCertificateHttpPostIn">
    <part name="certificate" type="s:base64Binary"/>
    <part name="host" type="s:string"/>
    <part name="domainID" type="s:string"/>
  </message>
  <message name="StoreDomainCertificateHttpPostOut"/>
  <message name="GetRAListHttpPostIn"/>
  <message name="GetRAListHttpPostOut">
    <part name="Body" element="s0:ArrayOfString"/>
  </message>
  <message name="GetRAListOnClientHttpPostIn">
    <part name="DomainID" type="s:string"/>
  </message>
  <message name="GetRAListOnClientHttpPostOut">
    <part name="Body" element="s0:ArrayOfString"/>
  </message>
  <message name="GetRACertificateHttpPostIn">
    <part name="rAgent" type="s:string"/>
  </message>
  <message name="GetRACertificateHttpPostOut">
    <part name="Body" element="s0:base64Binary"/>
  </message>
  <message name="GetRACertificateOnClientHttpPostIn">
    <part name="DomainID" type="s:string"/>
    <part name="rAgent" type="s:string"/>
  </message>
  <message name="GetRACertificateOnClientHttpPostOut">
    <part name="Body" element="s0:base64Binary"/>
  </message>
  <message name="GetPublicKeyHttpPostIn">
    <part name="DomainID" type="s:string"/>
    <part name="rAgent" type="s:string"/>
  </message>
  <message name="GetPublicKeyHttpPostOut">
    <part name="Body" element="s0:string"/>
  </message>
  <message name="GetDefaultPublicKeyHttpPostIn">
    <part name="DomainID" type="s:string"/>
  </message>
  <message name="GetDefaultPublicKeyHttpPostOut">
    <part name="Body" element="s0:string"/>
  </message>
  <message name="GetDefaultRSAFromServerHttpPostIn">
    <part name="DomainID" type="s:string"/>
  </message>
  <message name="GetDefaultRSAFromServerHttpPostOut">
    <part name="Body" element="s0:string"/>
  </message>
  <message name="GetDefaultRSAKeyHttpPostIn">
    <part name="DomainID" type="s:string"/>
  </message>
  <message name="GetDefaultRSAKeyHttpPostOut">
    <part name="Body" element="s0:string"/>
  </message>
  <message name="StoreRACertificateHttpPostIn">
    <part name="certificate" type="s:base64Binary"/>
    <part name="rAgent" type="s:string"/>
  </message>
  <message name="StoreRACertificateHttpPostOut"/>
  <message name="GetInvalidSyncFilenameCharsHttpPostIn"/>
  <message name="GetInvalidSyncFilenameCharsHttpPostOut">
    <part name="Body" element="s0:string"/>
  </message>
  <message name="SetDomainHostAddressHttpPostIn">
    <part name="domainID" type="s:string"/>
    <part name="hostAddress" type="s:string"/>
    <part name="user" type="s:string"/>
    <part name="password" type="s:string"/>
  </message>
  <message name="SetDomainHostAddressHttpPostOut">
    <part name="Body" element="s0:boolean"/>
  </message>
  <message name="SetProxyAddressHttpPostIn">
    <part name="hostUri" type="s:string"/>
    <part name="proxyUri" type="s:string"/>
    <part name="proxyUser" type="s:string"/>
    <part name="proxyPassword" type="s:string"/>
  </message>
  <message name="SetProxyAddressHttpPostOut">
    <part name="Body" element="s0:boolean"/>
  </message>
  <message name="CanShareServiceHttpPostIn">
    <part name="simiasDataPath" type="s:string"/>
    <part name="isClient" type="s:boolean"/>
  </message>
  <message name="CanShareServiceHttpPostOut">
    <part name="Body" element="s0:boolean"/>
  </message>
  <message name="StopSimiasProcessHttpPostIn"/>
  <message name="StopSimiasProcessHttpPostOut"/>
  <message name="AddSimiasReferenceHttpPostIn"/>
  <message name="AddSimiasReferenceHttpPostOut">
    <part name="Body" element="s0:int"/>
  </message>
  <message name="RemoveSimiasReferenceHttpPostIn"/>
  <message name="RemoveSimiasReferenceHttpPostOut">
    <part name="Body" element="s0:int"/>
  </message>
  <message name="ServerSetDefaultAccountHttpPostIn">
    <part name="DomainID" type="s:string"/>
    <part name="UserID" type="s:string"/>
    <part name="iFolderID" type="s:string"/>
  </message>
  <message name="ServerSetDefaultAccountHttpPostOut">
    <part name="Body" element="s0:boolean"/>
  </message>
  <message name="ServerGetDefaultiFolderHttpPostIn">
    <part name="DomainID" type="s:string"/>
    <part name="UserID" type="s:string"/>
  </message>
  <message name="ServerGetDefaultiFolderHttpPostOut">
    <part name="Body" element="s0:string"/>
  </message>
  <message name="GetGroupsiFolderLimitPolicyHttpPostIn">
    <part name="DomainID" type="s:string"/>
    <part name="UserID" type="s:string"/>
  </message>
  <message name="GetGroupsiFolderLimitPolicyHttpPostOut">
    <part name="Body" element="s0:int"/>
  </message>
  <message name="IsTransferAllowedHttpPostIn">
    <part name="DomainID" type="s:string"/>
    <part name="UserID" type="s:string"/>
  </message>
  <message name="IsTransferAllowedHttpPostOut">
    <part name="Body" element="s0:boolean"/>
  </message>
  <message name="GetGroupsSharingPolicyHttpPostIn">
    <part name="DomainID" type="s:string"/>
    <part name="UserID" type="s:string"/>
  </message>
  <message name="GetGroupsSharingPolicyHttpPostOut">
    <part name="Body" element="s0:int"/>
  </message>
  <message name="GetGroupsSecurityPolicyHttpPostIn">
    <part name="DomainID" type="s:string"/>
    <part name="UserID" type="s:string"/>
  </message>
  <message name="GetGroupsSecurityPolicyHttpPostOut">
    <part name="Body" element="s0:int"/>
  </message>
  <message name="GetEffectiveSyncPolicyHttpPostIn">
    <part name="DomainID" type="s:string"/>
    <part name="UserID" type="s:string"/>
    <part name="CollectionID" type="s:string"/>
  </message>
  <message name="GetEffectiveSyncPolicyHttpPostOut">
    <part name="Body" element="s0:int"/>
  </message>
  <message name="ServerSetPassPhraseHttpPostIn">
    <part name="DomainID" type="s:string"/>
    <part name="UserID" type="s:string"/>
    <part name="EncryptedCryptoKey" type="s:string"/>
    <part name="CryptoKeyBlob" type="s:string"/>
    <part name="RAName" type="s:string"/>
    <part name="RAPublicKey" type="s:string"/>
  </message>
  <message name="ServerSetPassPhraseHttpPostOut">
    <part name="Body" element="s0:Status"/>
  </message>
  <message name="ServerGetEncrypPassKeyHttpPostIn">
    <part name="DomainID" type="s:string"/>
    <part name="UserID" type="s:string"/>
  </message>
  <message name="ServerGetEncrypPassKeyHttpPostOut">
    <part name="Body" element="s0:string"/>
  </message>
  <message name="ServerGetPassKeyHashHttpPostIn">
    <part name="DomainID" type="s:string"/>
    <part name="UserID" type="s:string"/>
  </message>
  <message name="ServerGetPassKeyHashHttpPostOut">
    <part name="Body" element="s0:string"/>
  </message>
  <message name="UpdateUserMoveStateHttpPostIn">
    <part name="DomainID" type="s:string"/>
    <part name="UserID" type="s:string"/>
    <part name="userMoveStatus" type="s:int"/>
  </message>
  <message name="UpdateUserMoveStateHttpPostOut">
    <part name="Body" element="s0:boolean"/>
  </message>
  <message name="UpdateHomeServerHttpPostIn">
    <part name="DomainID" type="s:string"/>
    <part name="UserID" type="s:string"/>
    <part name="newHostID" type="s:string"/>
  </message>
  <message name="UpdateHomeServerHttpPostOut">
    <part name="Body" element="s0:boolean"/>
  </message>
  <message name="DownloadiFolderHttpPostIn">
    <part name="iFolderID" type="s:string"/>
    <part name="name" type="s:string"/>
    <part name="DomainID" type="s:string"/>
    <part name="HostID" type="s:string"/>
    <part name="DirNodeID" type="s:string"/>
    <part name="MemberNodeID" type="s:string"/>
    <part name="colMemberNodeID" type="s:string"/>
    <part name="localPath" type="s:string"/>
  </message>
  <message name="DownloadiFolderHttpPostOut">
    <part name="Body" element="s0:boolean"/>
  </message>
  <message name="UpdateLocalPropertiesHttpPostIn">
    <part name="DomainID" type="s:string"/>
    <part name="UserID" type="s:string"/>
    <part name="EncryptionKey" type="s:string"/>
    <part name="EncryptionVersion" type="s:string"/>
    <part name="EncryptionBlob" type="s:string"/>
    <part name="RAName" type="s:string"/>
    <part name="RAPublicKey" type="s:string"/>
  </message>
  <message name="UpdateLocalPropertiesHttpPostOut">
    <part name="Body" element="s0:boolean"/>
  </message>
  <message name="DisableUserHttpPostIn">
    <part name="DomainID" type="s:string"/>
    <part name="UserID" type="s:string"/>
    <part name="newHostID" type="s:string"/>
  </message>
  <message name="DisableUserHttpPostOut">
    <part name="Body" element="s0:boolean"/>
  </message>
  <message name="SetOnMasterEncryptionBlobFlagHttpPostIn">
    <part name="DomainID" type="s:string"/>
    <part name="UserID" type="s:string"/>
  </message>
  <message name="SetOnMasterEncryptionBlobFlagHttpPostOut"/>
  <message name="ServerGetCollectionHashKeyHttpPostIn">
    <part name="CollectionID" type="s:string"/>
  </message>
  <message name="ServerGetCollectionHashKeyHttpPostOut">
    <part name="Body" element="s0:string"/>
  </message>
  <message name="GetiFolderCryptoKeysHttpPostIn">
    <part name="DomainID" type="s:string"/>
    <part name="UserID" type="s:string"/>
    <part name="Index" type="s:int"/>
  </message>
  <message name="GetiFolderCryptoKeysHttpPostOut">
    <part name="Body" element="s0:CollectionKey"/>
  </message>
  <message name="ExportiFoldersCryptoKeysHttpPostIn">
    <part name="DomainID" type="s:string"/>
    <part name="FilePath" type="s:string"/>
  </message>
  <message name="ExportiFoldersCryptoKeysHttpPostOut"/>
  <message name="ImportiFoldersCryptoKeysHttpPostIn">
    <part name="DomainID" type="s:string"/>
    <part name="NewPassphrase" type="s:string"/>
    <part name="OneTimePassphrase" type="s:string"/>
    <part name="FilePath" type="s:string"/>
  </message>
  <message name="ImportiFoldersCryptoKeysHttpPostOut"/>
  <message name="ExportRecoverImportHttpPostIn">
    <part name="DomainID" type="s:string"/>
    <part name="UserID" type="s:string"/>
    <part name="NewPassphrase" type="s:string"/>
  </message>
  <message name="ExportRecoverImportHttpPostOut"/>
  <message name="SetPassPhraseHttpPostIn">
    <part name="DomainID" type="s:string"/>
    <part name="PassPhrase" type="s:string"/>
    <part name="RAName" type="s:string"/>
    <part name="RAPublicKey" type="s:string"/>
  </message>
  <message name="SetPassPhraseHttpPostOut">
    <part name="Body" element="s0:Status"/>
  </message>
  <message name="DefaultAccountHttpPostIn">
    <part name="DomainID" type="s:string"/>
    <part name="iFolderID" type="s:string"/>
  </message>
  <message name="DefaultAccountHttpPostOut">
    <part name="Body" element="s0:boolean"/>
  </message>
  <message name="GetDefaultiFolderHttpPostIn">
    <part name="DomainID" type="s:string"/>
  </message>
  <message name="GetDefaultiFolderHttpPostOut">
    <part name="Body" element="s0:string"/>
  </message>
  <message name="ReSetPassPhraseHttpPostIn">
    <part name="DomainID" type="s:string"/>
    <part name="OldPassPhrase" type="s:string"/>
    <part name="PassPhrase" type="s:string"/>
    <part name="RAName" type="s:string"/>
    <part name="RAPublicKey" type="s:string"/>
  </message>
  <message name="ReSetPassPhraseHttpPostOut">
    <part name="Body" element="s0:Status"/>
  </message>
  <message name="ValidatePassPhraseHttpPostIn">
    <part name="DomainID" type="s:string"/>
    <part name="PassPhrase" type="s:string"/>
  </message>
  <message name="ValidatePassPhraseHttpPostOut">
    <part name="Body" element="s0:Status"/>
  </message>
  <message name="IsPassPhraseSetHttpPostIn">
    <part name="DomainID" type="s:string"/>
  </message>
  <message name="IsPassPhraseSetHttpPostOut">
    <part name="Body" element="s0:boolean"/>
  </message>
  <message name="GetSimiasDataPathHttpPostIn"/>
  <message name="GetSimiasDataPathHttpPostOut">
    <part name="Body" element="s0:string"/>
  </message>
  <message name="GetSimiasProcessIDHttpPostIn"/>
  <message name="GetSimiasProcessIDHttpPostOut">
    <part name="Body" element="s0:int"/>
  </message>
  <portType name="Simias Web ServiceSoap">
    <operation name="PingSimias">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Allows a client to ping to make sure the Web Service is up and running</wsdl:documentation>
      <input message="s0:PingSimiasSoapIn"/>
      <output message="s0:PingSimiasSoapOut"/>
    </operation>
    <operation name="AddMemberToDomain">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Add a member to the domain.</wsdl:documentation>
      <input message="s0:AddMemberToDomainSoapIn"/>
      <output message="s0:AddMemberToDomainSoapOut"/>
    </operation>
    <operation name="RemoveMemberFromDomain">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Remove a member from the domain.</wsdl:documentation>
      <input message="s0:RemoveMemberFromDomainSoapIn"/>
      <output message="s0:RemoveMemberFromDomainSoapOut"/>
    </operation>
    <operation name="FindCloseMembers">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">End the search for domain members.</wsdl:documentation>
      <input message="s0:FindCloseMembersSoapIn"/>
      <output message="s0:FindCloseMembersSoapOut"/>
    </operation>
    <operation name="FindFirstMembers">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Starts a search for all domain members.</wsdl:documentation>
      <input message="s0:FindFirstMembersSoapIn"/>
      <output message="s0:FindFirstMembersSoapOut"/>
    </operation>
    <operation name="FindFirstSpecificMembers">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Starts a search for a specific set of domain members.</wsdl:documentation>
      <input message="s0:FindFirstSpecificMembersSoapIn"/>
      <output message="s0:FindFirstSpecificMembersSoapOut"/>
    </operation>
    <operation name="FindNextMembers">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Continues the search for domain members from the current record location.</wsdl:documentation>
      <input message="s0:FindNextMembersSoapIn"/>
      <output message="s0:FindNextMembersSoapOut"/>
    </operation>
    <operation name="FindPreviousMembers">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Continues the search for domain members previous to the current record location.</wsdl:documentation>
      <input message="s0:FindPreviousMembersSoapIn"/>
      <output message="s0:FindPreviousMembersSoapOut"/>
    </operation>
    <operation name="FindSeekMembers">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Continues the search for domain members from the specified record location.</wsdl:documentation>
      <input message="s0:FindSeekMembersSoapIn"/>
      <output message="s0:FindSeekMembersSoapOut"/>
    </operation>
    <operation name="GetSimiasInformation">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">GetSimiasInformation</wsdl:documentation>
      <input message="s0:GetSimiasInformationSoapIn"/>
      <output message="s0:GetSimiasInformationSoapOut"/>
    </operation>
    <operation name="GetDomainInformation">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">GetDomainInformation</wsdl:documentation>
      <input message="s0:GetDomainInformationSoapIn"/>
      <output message="s0:GetDomainInformationSoapOut"/>
    </operation>
    <operation name="GetDomains">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get a list of local domains</wsdl:documentation>
      <input message="s0:GetDomainsSoapIn"/>
      <output message="s0:GetDomainsSoapOut"/>
    </operation>
    <operation name="LoginToRemoteDomain">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Login or authenticate to a remote domain</wsdl:documentation>
      <input message="s0:LoginToRemoteDomainSoapIn"/>
      <output message="s0:LoginToRemoteDomainSoapOut"/>
    </operation>
    <operation name="LogoutFromRemoteDomain">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Logout from a remote domain</wsdl:documentation>
      <input message="s0:LogoutFromRemoteDomainSoapIn"/>
      <output message="s0:LogoutFromRemoteDomainSoapOut"/>
    </operation>
    <operation name="DisableDomainAutoLogin">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Disable automatic authentication to the specified domain</wsdl:documentation>
      <input message="s0:DisableDomainAutoLoginSoapIn"/>
      <output message="s0:DisableDomainAutoLoginSoapOut"/>
    </operation>
    <operation name="IsDomainActive">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">WebMethod to check if a domain is active</wsdl:documentation>
      <input message="s0:IsDomainActiveSoapIn"/>
      <output message="s0:IsDomainActiveSoapOut"/>
    </operation>
    <operation name="SetDomainActive">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">SetDomainActive - enables synchronization to the remote server</wsdl:documentation>
      <input message="s0:SetDomainActiveSoapIn"/>
      <output message="s0:SetDomainActiveSoapOut"/>
    </operation>
    <operation name="SetDomainInactive">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">SetDomainInactive - disables remote synchronization</wsdl:documentation>
      <input message="s0:SetDomainInactiveSoapIn"/>
      <output message="s0:SetDomainInactiveSoapOut"/>
    </operation>
    <operation name="ValidCredentials">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">ValidCredentials</wsdl:documentation>
      <input message="s0:ValidCredentialsSoapIn"/>
      <output message="s0:ValidCredentialsSoapOut"/>
    </operation>
    <operation name="SetDomainCredentials">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Sets domain credentials in the local store</wsdl:documentation>
      <input message="s0:SetDomainCredentialsSoapIn"/>
      <output message="s0:SetDomainCredentialsSoapOut"/>
    </operation>
    <operation name="SetHostAddress">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Sets host's url to local domain</wsdl:documentation>
      <input message="s0:SetHostAddressSoapIn"/>
      <output message="s0:SetHostAddressSoapOut"/>
    </operation>
    <operation name="StorePassPhrase">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Stores domain passphrase in the local store</wsdl:documentation>
      <input message="s0:StorePassPhraseSoapIn"/>
      <output message="s0:StorePassPhraseSoapOut"/>
    </operation>
    <operation name="GetDomainCredentials">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get the saved credentials from a domain</wsdl:documentation>
      <input message="s0:GetDomainCredentialsSoapIn"/>
      <output message="s0:GetDomainCredentialsSoapOut"/>
    </operation>
    <operation name="GetPassPhrase">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get the saved credentials from a domain</wsdl:documentation>
      <input message="s0:GetPassPhraseSoapIn"/>
      <output message="s0:GetPassPhraseSoapOut"/>
    </operation>
    <operation name="GetRememberOption">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get the saved credentials from a domain</wsdl:documentation>
      <input message="s0:GetRememberOptionSoapIn"/>
      <output message="s0:GetRememberOptionSoapOut"/>
    </operation>
    <operation name="ConnectToDomain">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Connects to a Domain</wsdl:documentation>
      <input message="s0:ConnectToDomainSoapIn"/>
      <output message="s0:ConnectToDomainSoapOut"/>
    </operation>
    <operation name="LeaveDomain">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Removes a domain account from the workstation</wsdl:documentation>
      <input message="s0:LeaveDomainSoapIn"/>
      <output message="s0:LeaveDomainSoapOut"/>
    </operation>
    <operation name="RemoveCertFromTable">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Remove Certificate for this specified host</wsdl:documentation>
      <input message="s0:RemoveCertFromTableSoapIn"/>
      <output message="s0:RemoveCertFromTableSoapOut"/>
    </operation>
    <operation name="SetDefaultDomain">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Change the default domain to the specified domain ID</wsdl:documentation>
      <input message="s0:SetDefaultDomainSoapIn"/>
      <output message="s0:SetDefaultDomainSoapOut"/>
    </operation>
    <operation name="GetDefaultDomainID">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get the ID of the default domain</wsdl:documentation>
      <input message="s0:GetDefaultDomainIDSoapIn"/>
      <output message="s0:GetDefaultDomainIDSoapOut"/>
    </operation>
    <operation name="GetCertificate">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get the certificate of the specified host.</wsdl:documentation>
      <input message="s0:GetCertificateSoapIn"/>
      <output message="s0:GetCertificateSoapOut"/>
    </operation>
    <operation name="GetCertificate2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get the certificate of the specified host.</wsdl:documentation>
      <input message="s0:GetCertificate2SoapIn"/>
      <output message="s0:GetCertificate2SoapOut"/>
    </operation>
    <operation name="StoreCertificate">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Store the certificate for the specified host.</wsdl:documentation>
      <input message="s0:StoreCertificateSoapIn"/>
      <output message="s0:StoreCertificateSoapOut"/>
    </operation>
    <operation name="StoreDomainCertificate">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Store the certificate for the specified host.</wsdl:documentation>
      <input message="s0:StoreDomainCertificateSoapIn"/>
      <output message="s0:StoreDomainCertificateSoapOut"/>
    </operation>
    <operation name="GetRAList">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get the Recovery Agent List.</wsdl:documentation>
      <input message="s0:GetRAListSoapIn"/>
      <output message="s0:GetRAListSoapOut"/>
    </operation>
    <operation name="GetRAListOnClient">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get the Recovery Agent List.</wsdl:documentation>
      <input message="s0:GetRAListOnClientSoapIn"/>
      <output message="s0:GetRAListOnClientSoapOut"/>
    </operation>
    <operation name="GetRACertificate">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get the Recovery Agent certificate of the domain.</wsdl:documentation>
      <input message="s0:GetRACertificateSoapIn"/>
      <output message="s0:GetRACertificateSoapOut"/>
    </operation>
    <operation name="GetRACertificateOnClient">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get the Recovery Agent List.</wsdl:documentation>
      <input message="s0:GetRACertificateOnClientSoapIn"/>
      <output message="s0:GetRACertificateOnClientSoapOut"/>
    </operation>
    <operation name="GetPublicKey">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get the public key of the certificate</wsdl:documentation>
      <input message="s0:GetPublicKeySoapIn"/>
      <output message="s0:GetPublicKeySoapOut"/>
    </operation>
    <operation name="GetDefaultPublicKey">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get the public key of the certificate</wsdl:documentation>
      <input message="s0:GetDefaultPublicKeySoapIn"/>
      <output message="s0:GetDefaultPublicKeySoapOut"/>
    </operation>
    <operation name="GetDefaultRSAFromServer">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get the Default RSA key</wsdl:documentation>
      <input message="s0:GetDefaultRSAFromServerSoapIn"/>
      <output message="s0:GetDefaultRSAFromServerSoapOut"/>
    </operation>
    <operation name="GetDefaultRSAKey">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get the Default RSA key</wsdl:documentation>
      <input message="s0:GetDefaultRSAKeySoapIn"/>
      <output message="s0:GetDefaultRSAKeySoapOut"/>
    </operation>
    <operation name="StoreRACertificate">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Store the certificate for the Domain.</wsdl:documentation>
      <input message="s0:StoreRACertificateSoapIn"/>
      <output message="s0:StoreRACertificateSoapOut"/>
    </operation>
    <operation name="GetInvalidSyncFilenameChars">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns the characters which cannot be used for filenames in the Simias namespace (files and folders that contain any of these characters cannot be synchronized with iFolder and conflicts will be generated).</wsdl:documentation>
      <input message="s0:GetInvalidSyncFilenameCharsSoapIn"/>
      <output message="s0:GetInvalidSyncFilenameCharsSoapOut"/>
    </operation>
    <operation name="SetDomainHostAddress">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Sets a new server network address for a client.</wsdl:documentation>
      <input message="s0:SetDomainHostAddressSoapIn"/>
      <output message="s0:SetDomainHostAddressSoapOut"/>
    </operation>
    <operation name="SetProxyAddress">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Sets a new proxy address for the specified host.</wsdl:documentation>
      <input message="s0:SetProxyAddressSoapIn"/>
      <output message="s0:SetProxyAddressSoapOut"/>
    </operation>
    <operation name="CanShareService">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Checks to see if this instance of Simias is shareable.</wsdl:documentation>
      <input message="s0:CanShareServiceSoapIn"/>
      <output message="s0:CanShareServiceSoapOut"/>
    </operation>
    <operation name="StopSimiasProcess">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Shuts down the controlling server process.</wsdl:documentation>
      <input message="s0:StopSimiasProcessSoapIn"/>
      <output message="s0:StopSimiasProcessSoapOut"/>
    </operation>
    <operation name="AddSimiasReference">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Increments the reference count that keeps Simias services running.</wsdl:documentation>
      <input message="s0:AddSimiasReferenceSoapIn"/>
      <output message="s0:AddSimiasReferenceSoapOut"/>
    </operation>
    <operation name="RemoveSimiasReference">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Decrements the Simias service reference count and signals the server to stop if the count goes to zero.</wsdl:documentation>
      <input message="s0:RemoveSimiasReferenceSoapIn"/>
      <output message="s0:RemoveSimiasReferenceSoapOut"/>
    </operation>
    <operation name="ServerSetDefaultAccount">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Set the passphrase and recovery agent.</wsdl:documentation>
      <input message="s0:ServerSetDefaultAccountSoapIn"/>
      <output message="s0:ServerSetDefaultAccountSoapOut"/>
    </operation>
    <operation name="ServerGetDefaultiFolder">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Set the passphrase and recovery agent.</wsdl:documentation>
      <input message="s0:ServerGetDefaultiFolderSoapIn"/>
      <output message="s0:ServerGetDefaultiFolderSoapOut"/>
    </operation>
    <operation name="GetGroupsiFolderLimitPolicy">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">gets the GroupsiFolderLimitPolicy for users group.</wsdl:documentation>
      <input message="s0:GetGroupsiFolderLimitPolicySoapIn"/>
      <output message="s0:GetGroupsiFolderLimitPolicySoapOut"/>
    </operation>
    <operation name="IsTransferAllowed">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">gets the UseriFolderLimitPolicy for users - transfer of Ownership.</wsdl:documentation>
      <input message="s0:IsTransferAllowedSoapIn"/>
      <output message="s0:IsTransferAllowedSoapOut"/>
    </operation>
    <operation name="GetGroupsSharingPolicy">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">gets the GroupsiFolderLimitPolicy for users group.</wsdl:documentation>
      <input message="s0:GetGroupsSharingPolicySoapIn"/>
      <output message="s0:GetGroupsSharingPolicySoapOut"/>
    </operation>
    <operation name="GetGroupsSecurityPolicy">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">gets the GroupsSecurityPolicy for users group.</wsdl:documentation>
      <input message="s0:GetGroupsSecurityPolicySoapIn"/>
      <output message="s0:GetGroupsSecurityPolicySoapOut"/>
    </operation>
    <operation name="GetEffectiveSyncPolicy">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">gets the GroupsSecurityPolicy for users group.</wsdl:documentation>
      <input message="s0:GetEffectiveSyncPolicySoapIn"/>
      <output message="s0:GetEffectiveSyncPolicySoapOut"/>
    </operation>
    <operation name="ServerSetPassPhrase">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Set the passphrase and recovery agent.</wsdl:documentation>
      <input message="s0:ServerSetPassPhraseSoapIn"/>
      <output message="s0:ServerSetPassPhraseSoapOut"/>
    </operation>
    <operation name="ServerGetEncrypPassKey">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">ServerGetEncrypPassKey.</wsdl:documentation>
      <input message="s0:ServerGetEncrypPassKeySoapIn"/>
      <output message="s0:ServerGetEncrypPassKeySoapOut"/>
    </operation>
    <operation name="ServerGetPassKeyHash">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">ServerGetPassKeyHash.</wsdl:documentation>
      <input message="s0:ServerGetPassKeyHashSoapIn"/>
      <output message="s0:ServerGetPassKeyHashSoapOut"/>
    </operation>
    <operation name="UpdateUserMoveState">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Updates the user move state property</wsdl:documentation>
      <input message="s0:UpdateUserMoveStateSoapIn"/>
      <output message="s0:UpdateUserMoveStateSoapOut"/>
    </operation>
    <operation name="UpdateHomeServer">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Update users HomeServer Object</wsdl:documentation>
      <input message="s0:UpdateHomeServerSoapIn"/>
      <output message="s0:UpdateHomeServerSoapOut"/>
    </operation>
    <operation name="DownloadiFolder">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns the characters which cannot be used for filenames in the Simias namespace (files and folders that contain any of these characters cannot be synchronized with iFolder and conflicts will be generated).</wsdl:documentation>
      <input message="s0:DownloadiFolderSoapIn"/>
      <output message="s0:DownloadiFolderSoapOut"/>
    </operation>
    <operation name="UpdateLocalProperties">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Updates the encryption related local properties.</wsdl:documentation>
      <input message="s0:UpdateLocalPropertiesSoapIn"/>
      <output message="s0:UpdateLocalPropertiesSoapOut"/>
    </operation>
    <operation name="DisableUser">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Disable user object and set user move property</wsdl:documentation>
      <input message="s0:DisableUserSoapIn"/>
      <output message="s0:DisableUserSoapOut"/>
    </operation>
    <operation name="SetOnMasterEncryptionBlobFlag">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">SetOnMasterEncryptionBlobFlag</wsdl:documentation>
      <input message="s0:SetOnMasterEncryptionBlobFlagSoapIn"/>
      <output message="s0:SetOnMasterEncryptionBlobFlagSoapOut"/>
    </operation>
    <operation name="CommitDomainMember">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">CommitDomainMember</wsdl:documentation>
      <input message="s0:CommitDomainMemberSoapIn"/>
      <output message="s0:CommitDomainMemberSoapOut"/>
    </operation>
    <operation name="ServerGetCollectionHashKey">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">GetCollectionHashKey.</wsdl:documentation>
      <input message="s0:ServerGetCollectionHashKeySoapIn"/>
      <output message="s0:ServerGetCollectionHashKeySoapOut"/>
    </operation>
    <operation name="GetiFolderCryptoKeys">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">GetiFolderCryptoKeys.</wsdl:documentation>
      <input message="s0:GetiFolderCryptoKeysSoapIn"/>
      <output message="s0:GetiFolderCryptoKeysSoapOut"/>
    </operation>
    <operation name="SetiFolderCryptoKeys">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">SetiFolderCryptoKeys.</wsdl:documentation>
      <input message="s0:SetiFolderCryptoKeysSoapIn"/>
      <output message="s0:SetiFolderCryptoKeysSoapOut"/>
    </operation>
    <operation name="ExportiFoldersCryptoKeys">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">ExportiFoldersCryptoKeys.</wsdl:documentation>
      <input message="s0:ExportiFoldersCryptoKeysSoapIn"/>
      <output message="s0:ExportiFoldersCryptoKeysSoapOut"/>
    </operation>
    <operation name="ImportiFoldersCryptoKeys">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">ImportiFoldersCryptoKeys.</wsdl:documentation>
      <input message="s0:ImportiFoldersCryptoKeysSoapIn"/>
      <output message="s0:ImportiFoldersCryptoKeysSoapOut"/>
    </operation>
    <operation name="ExportiFoldersCryptoKeysToDoc">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Exports the iFolders Crypto Keys to a XML Document.</wsdl:documentation>
      <input message="s0:ExportiFoldersCryptoKeysToDocSoapIn"/>
      <output message="s0:ExportiFoldersCryptoKeysToDocSoapOut"/>
    </operation>
    <operation name="RecoverKeys">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Recover the ifolder crypto keys for an user in a Domain given a RA.</wsdl:documentation>
      <input message="s0:RecoverKeysSoapIn"/>
      <output message="s0:RecoverKeysSoapOut"/>
    </operation>
    <operation name="ImportiFoldersCryptoKeysFromDoc">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Imports the iFolder Crypto Keys from an Array</wsdl:documentation>
      <input message="s0:ImportiFoldersCryptoKeysFromDocSoapIn"/>
      <output message="s0:ImportiFoldersCryptoKeysFromDocSoapOut"/>
    </operation>
    <operation name="ExportRecoverImport">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Resets the passphrase by Export-Recover-Import automation</wsdl:documentation>
      <input message="s0:ExportRecoverImportSoapIn"/>
      <output message="s0:ExportRecoverImportSoapOut"/>
    </operation>
    <operation name="SetPassPhrase">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Set the passphrase and recovery agent.</wsdl:documentation>
      <input message="s0:SetPassPhraseSoapIn"/>
      <output message="s0:SetPassPhraseSoapOut"/>
    </operation>
    <operation name="DefaultAccount">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Set the passphrase and recovery agent.</wsdl:documentation>
      <input message="s0:DefaultAccountSoapIn"/>
      <output message="s0:DefaultAccountSoapOut"/>
    </operation>
    <operation name="GetDefaultiFolder">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Set the passphrase and recovery agent.</wsdl:documentation>
      <input message="s0:GetDefaultiFolderSoapIn"/>
      <output message="s0:GetDefaultiFolderSoapOut"/>
    </operation>
    <operation name="ReSetPassPhrase">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Reset passphrase and recovery agent.</wsdl:documentation>
      <input message="s0:ReSetPassPhraseSoapIn"/>
      <output message="s0:ReSetPassPhraseSoapOut"/>
    </operation>
    <operation name="ValidatePassPhrase">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Validate the passphrase for the correctness.</wsdl:documentation>
      <input message="s0:ValidatePassPhraseSoapIn"/>
      <output message="s0:ValidatePassPhraseSoapOut"/>
    </operation>
    <operation name="IsPassPhraseSet">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns the passphrase state.</wsdl:documentation>
      <input message="s0:IsPassPhraseSetSoapIn"/>
      <output message="s0:IsPassPhraseSetSoapOut"/>
    </operation>
    <operation name="GetSimiasDataPath">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Gets the directory path to the Simias data area.</wsdl:documentation>
      <input message="s0:GetSimiasDataPathSoapIn"/>
      <output message="s0:GetSimiasDataPathSoapOut"/>
    </operation>
    <operation name="GetSimiasProcessID">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Gets the process ID for the current running process.</wsdl:documentation>
      <input message="s0:GetSimiasProcessIDSoapIn"/>
      <output message="s0:GetSimiasProcessIDSoapOut"/>
    </operation>
  </portType>
  <portType name="Simias Web ServiceSoap12">
    <operation name="PingSimias">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Allows a client to ping to make sure the Web Service is up and running</wsdl:documentation>
      <input message="s0:PingSimiasSoapIn"/>
      <output message="s0:PingSimiasSoapOut"/>
    </operation>
    <operation name="AddMemberToDomain">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Add a member to the domain.</wsdl:documentation>
      <input message="s0:AddMemberToDomainSoapIn"/>
      <output message="s0:AddMemberToDomainSoapOut"/>
    </operation>
    <operation name="RemoveMemberFromDomain">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Remove a member from the domain.</wsdl:documentation>
      <input message="s0:RemoveMemberFromDomainSoapIn"/>
      <output message="s0:RemoveMemberFromDomainSoapOut"/>
    </operation>
    <operation name="FindCloseMembers">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">End the search for domain members.</wsdl:documentation>
      <input message="s0:FindCloseMembersSoapIn"/>
      <output message="s0:FindCloseMembersSoapOut"/>
    </operation>
    <operation name="FindFirstMembers">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Starts a search for all domain members.</wsdl:documentation>
      <input message="s0:FindFirstMembersSoapIn"/>
      <output message="s0:FindFirstMembersSoapOut"/>
    </operation>
    <operation name="FindFirstSpecificMembers">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Starts a search for a specific set of domain members.</wsdl:documentation>
      <input message="s0:FindFirstSpecificMembersSoapIn"/>
      <output message="s0:FindFirstSpecificMembersSoapOut"/>
    </operation>
    <operation name="FindNextMembers">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Continues the search for domain members from the current record location.</wsdl:documentation>
      <input message="s0:FindNextMembersSoapIn"/>
      <output message="s0:FindNextMembersSoapOut"/>
    </operation>
    <operation name="FindPreviousMembers">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Continues the search for domain members previous to the current record location.</wsdl:documentation>
      <input message="s0:FindPreviousMembersSoapIn"/>
      <output message="s0:FindPreviousMembersSoapOut"/>
    </operation>
    <operation name="FindSeekMembers">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Continues the search for domain members from the specified record location.</wsdl:documentation>
      <input message="s0:FindSeekMembersSoapIn"/>
      <output message="s0:FindSeekMembersSoapOut"/>
    </operation>
    <operation name="GetSimiasInformation">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">GetSimiasInformation</wsdl:documentation>
      <input message="s0:GetSimiasInformationSoapIn"/>
      <output message="s0:GetSimiasInformationSoapOut"/>
    </operation>
    <operation name="GetDomainInformation">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">GetDomainInformation</wsdl:documentation>
      <input message="s0:GetDomainInformationSoapIn"/>
      <output message="s0:GetDomainInformationSoapOut"/>
    </operation>
    <operation name="GetDomains">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get a list of local domains</wsdl:documentation>
      <input message="s0:GetDomainsSoapIn"/>
      <output message="s0:GetDomainsSoapOut"/>
    </operation>
    <operation name="LoginToRemoteDomain">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Login or authenticate to a remote domain</wsdl:documentation>
      <input message="s0:LoginToRemoteDomainSoapIn"/>
      <output message="s0:LoginToRemoteDomainSoapOut"/>
    </operation>
    <operation name="LogoutFromRemoteDomain">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Logout from a remote domain</wsdl:documentation>
      <input message="s0:LogoutFromRemoteDomainSoapIn"/>
      <output message="s0:LogoutFromRemoteDomainSoapOut"/>
    </operation>
    <operation name="DisableDomainAutoLogin">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Disable automatic authentication to the specified domain</wsdl:documentation>
      <input message="s0:DisableDomainAutoLoginSoapIn"/>
      <output message="s0:DisableDomainAutoLoginSoapOut"/>
    </operation>
    <operation name="IsDomainActive">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">WebMethod to check if a domain is active</wsdl:documentation>
      <input message="s0:IsDomainActiveSoapIn"/>
      <output message="s0:IsDomainActiveSoapOut"/>
    </operation>
    <operation name="SetDomainActive">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">SetDomainActive - enables synchronization to the remote server</wsdl:documentation>
      <input message="s0:SetDomainActiveSoapIn"/>
      <output message="s0:SetDomainActiveSoapOut"/>
    </operation>
    <operation name="SetDomainInactive">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">SetDomainInactive - disables remote synchronization</wsdl:documentation>
      <input message="s0:SetDomainInactiveSoapIn"/>
      <output message="s0:SetDomainInactiveSoapOut"/>
    </operation>
    <operation name="ValidCredentials">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">ValidCredentials</wsdl:documentation>
      <input message="s0:ValidCredentialsSoapIn"/>
      <output message="s0:ValidCredentialsSoapOut"/>
    </operation>
    <operation name="SetDomainCredentials">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Sets domain credentials in the local store</wsdl:documentation>
      <input message="s0:SetDomainCredentialsSoapIn"/>
      <output message="s0:SetDomainCredentialsSoapOut"/>
    </operation>
    <operation name="SetHostAddress">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Sets host's url to local domain</wsdl:documentation>
      <input message="s0:SetHostAddressSoapIn"/>
      <output message="s0:SetHostAddressSoapOut"/>
    </operation>
    <operation name="StorePassPhrase">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Stores domain passphrase in the local store</wsdl:documentation>
      <input message="s0:StorePassPhraseSoapIn"/>
      <output message="s0:StorePassPhraseSoapOut"/>
    </operation>
    <operation name="GetDomainCredentials">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get the saved credentials from a domain</wsdl:documentation>
      <input message="s0:GetDomainCredentialsSoapIn"/>
      <output message="s0:GetDomainCredentialsSoapOut"/>
    </operation>
    <operation name="GetPassPhrase">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get the saved credentials from a domain</wsdl:documentation>
      <input message="s0:GetPassPhraseSoapIn"/>
      <output message="s0:GetPassPhraseSoapOut"/>
    </operation>
    <operation name="GetRememberOption">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get the saved credentials from a domain</wsdl:documentation>
      <input message="s0:GetRememberOptionSoapIn"/>
      <output message="s0:GetRememberOptionSoapOut"/>
    </operation>
    <operation name="ConnectToDomain">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Connects to a Domain</wsdl:documentation>
      <input message="s0:ConnectToDomainSoapIn"/>
      <output message="s0:ConnectToDomainSoapOut"/>
    </operation>
    <operation name="LeaveDomain">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Removes a domain account from the workstation</wsdl:documentation>
      <input message="s0:LeaveDomainSoapIn"/>
      <output message="s0:LeaveDomainSoapOut"/>
    </operation>
    <operation name="RemoveCertFromTable">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Remove Certificate for this specified host</wsdl:documentation>
      <input message="s0:RemoveCertFromTableSoapIn"/>
      <output message="s0:RemoveCertFromTableSoapOut"/>
    </operation>
    <operation name="SetDefaultDomain">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Change the default domain to the specified domain ID</wsdl:documentation>
      <input message="s0:SetDefaultDomainSoapIn"/>
      <output message="s0:SetDefaultDomainSoapOut"/>
    </operation>
    <operation name="GetDefaultDomainID">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get the ID of the default domain</wsdl:documentation>
      <input message="s0:GetDefaultDomainIDSoapIn"/>
      <output message="s0:GetDefaultDomainIDSoapOut"/>
    </operation>
    <operation name="GetCertificate">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get the certificate of the specified host.</wsdl:documentation>
      <input message="s0:GetCertificateSoapIn"/>
      <output message="s0:GetCertificateSoapOut"/>
    </operation>
    <operation name="GetCertificate2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get the certificate of the specified host.</wsdl:documentation>
      <input message="s0:GetCertificate2SoapIn"/>
      <output message="s0:GetCertificate2SoapOut"/>
    </operation>
    <operation name="StoreCertificate">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Store the certificate for the specified host.</wsdl:documentation>
      <input message="s0:StoreCertificateSoapIn"/>
      <output message="s0:StoreCertificateSoapOut"/>
    </operation>
    <operation name="StoreDomainCertificate">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Store the certificate for the specified host.</wsdl:documentation>
      <input message="s0:StoreDomainCertificateSoapIn"/>
      <output message="s0:StoreDomainCertificateSoapOut"/>
    </operation>
    <operation name="GetRAList">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get the Recovery Agent List.</wsdl:documentation>
      <input message="s0:GetRAListSoapIn"/>
      <output message="s0:GetRAListSoapOut"/>
    </operation>
    <operation name="GetRAListOnClient">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get the Recovery Agent List.</wsdl:documentation>
      <input message="s0:GetRAListOnClientSoapIn"/>
      <output message="s0:GetRAListOnClientSoapOut"/>
    </operation>
    <operation name="GetRACertificate">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get the Recovery Agent certificate of the domain.</wsdl:documentation>
      <input message="s0:GetRACertificateSoapIn"/>
      <output message="s0:GetRACertificateSoapOut"/>
    </operation>
    <operation name="GetRACertificateOnClient">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get the Recovery Agent List.</wsdl:documentation>
      <input message="s0:GetRACertificateOnClientSoapIn"/>
      <output message="s0:GetRACertificateOnClientSoapOut"/>
    </operation>
    <operation name="GetPublicKey">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get the public key of the certificate</wsdl:documentation>
      <input message="s0:GetPublicKeySoapIn"/>
      <output message="s0:GetPublicKeySoapOut"/>
    </operation>
    <operation name="GetDefaultPublicKey">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get the public key of the certificate</wsdl:documentation>
      <input message="s0:GetDefaultPublicKeySoapIn"/>
      <output message="s0:GetDefaultPublicKeySoapOut"/>
    </operation>
    <operation name="GetDefaultRSAFromServer">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get the Default RSA key</wsdl:documentation>
      <input message="s0:GetDefaultRSAFromServerSoapIn"/>
      <output message="s0:GetDefaultRSAFromServerSoapOut"/>
    </operation>
    <operation name="GetDefaultRSAKey">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get the Default RSA key</wsdl:documentation>
      <input message="s0:GetDefaultRSAKeySoapIn"/>
      <output message="s0:GetDefaultRSAKeySoapOut"/>
    </operation>
    <operation name="StoreRACertificate">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Store the certificate for the Domain.</wsdl:documentation>
      <input message="s0:StoreRACertificateSoapIn"/>
      <output message="s0:StoreRACertificateSoapOut"/>
    </operation>
    <operation name="GetInvalidSyncFilenameChars">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns the characters which cannot be used for filenames in the Simias namespace (files and folders that contain any of these characters cannot be synchronized with iFolder and conflicts will be generated).</wsdl:documentation>
      <input message="s0:GetInvalidSyncFilenameCharsSoapIn"/>
      <output message="s0:GetInvalidSyncFilenameCharsSoapOut"/>
    </operation>
    <operation name="SetDomainHostAddress">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Sets a new server network address for a client.</wsdl:documentation>
      <input message="s0:SetDomainHostAddressSoapIn"/>
      <output message="s0:SetDomainHostAddressSoapOut"/>
    </operation>
    <operation name="SetProxyAddress">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Sets a new proxy address for the specified host.</wsdl:documentation>
      <input message="s0:SetProxyAddressSoapIn"/>
      <output message="s0:SetProxyAddressSoapOut"/>
    </operation>
    <operation name="CanShareService">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Checks to see if this instance of Simias is shareable.</wsdl:documentation>
      <input message="s0:CanShareServiceSoapIn"/>
      <output message="s0:CanShareServiceSoapOut"/>
    </operation>
    <operation name="StopSimiasProcess">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Shuts down the controlling server process.</wsdl:documentation>
      <input message="s0:StopSimiasProcessSoapIn"/>
      <output message="s0:StopSimiasProcessSoapOut"/>
    </operation>
    <operation name="AddSimiasReference">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Increments the reference count that keeps Simias services running.</wsdl:documentation>
      <input message="s0:AddSimiasReferenceSoapIn"/>
      <output message="s0:AddSimiasReferenceSoapOut"/>
    </operation>
    <operation name="RemoveSimiasReference">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Decrements the Simias service reference count and signals the server to stop if the count goes to zero.</wsdl:documentation>
      <input message="s0:RemoveSimiasReferenceSoapIn"/>
      <output message="s0:RemoveSimiasReferenceSoapOut"/>
    </operation>
    <operation name="ServerSetDefaultAccount">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Set the passphrase and recovery agent.</wsdl:documentation>
      <input message="s0:ServerSetDefaultAccountSoapIn"/>
      <output message="s0:ServerSetDefaultAccountSoapOut"/>
    </operation>
    <operation name="ServerGetDefaultiFolder">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Set the passphrase and recovery agent.</wsdl:documentation>
      <input message="s0:ServerGetDefaultiFolderSoapIn"/>
      <output message="s0:ServerGetDefaultiFolderSoapOut"/>
    </operation>
    <operation name="GetGroupsiFolderLimitPolicy">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">gets the GroupsiFolderLimitPolicy for users group.</wsdl:documentation>
      <input message="s0:GetGroupsiFolderLimitPolicySoapIn"/>
      <output message="s0:GetGroupsiFolderLimitPolicySoapOut"/>
    </operation>
    <operation name="IsTransferAllowed">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">gets the UseriFolderLimitPolicy for users - transfer of Ownership.</wsdl:documentation>
      <input message="s0:IsTransferAllowedSoapIn"/>
      <output message="s0:IsTransferAllowedSoapOut"/>
    </operation>
    <operation name="GetGroupsSharingPolicy">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">gets the GroupsiFolderLimitPolicy for users group.</wsdl:documentation>
      <input message="s0:GetGroupsSharingPolicySoapIn"/>
      <output message="s0:GetGroupsSharingPolicySoapOut"/>
    </operation>
    <operation name="GetGroupsSecurityPolicy">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">gets the GroupsSecurityPolicy for users group.</wsdl:documentation>
      <input message="s0:GetGroupsSecurityPolicySoapIn"/>
      <output message="s0:GetGroupsSecurityPolicySoapOut"/>
    </operation>
    <operation name="GetEffectiveSyncPolicy">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">gets the GroupsSecurityPolicy for users group.</wsdl:documentation>
      <input message="s0:GetEffectiveSyncPolicySoapIn"/>
      <output message="s0:GetEffectiveSyncPolicySoapOut"/>
    </operation>
    <operation name="ServerSetPassPhrase">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Set the passphrase and recovery agent.</wsdl:documentation>
      <input message="s0:ServerSetPassPhraseSoapIn"/>
      <output message="s0:ServerSetPassPhraseSoapOut"/>
    </operation>
    <operation name="ServerGetEncrypPassKey">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">ServerGetEncrypPassKey.</wsdl:documentation>
      <input message="s0:ServerGetEncrypPassKeySoapIn"/>
      <output message="s0:ServerGetEncrypPassKeySoapOut"/>
    </operation>
    <operation name="ServerGetPassKeyHash">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">ServerGetPassKeyHash.</wsdl:documentation>
      <input message="s0:ServerGetPassKeyHashSoapIn"/>
      <output message="s0:ServerGetPassKeyHashSoapOut"/>
    </operation>
    <operation name="UpdateUserMoveState">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Updates the user move state property</wsdl:documentation>
      <input message="s0:UpdateUserMoveStateSoapIn"/>
      <output message="s0:UpdateUserMoveStateSoapOut"/>
    </operation>
    <operation name="UpdateHomeServer">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Update users HomeServer Object</wsdl:documentation>
      <input message="s0:UpdateHomeServerSoapIn"/>
      <output message="s0:UpdateHomeServerSoapOut"/>
    </operation>
    <operation name="DownloadiFolder">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns the characters which cannot be used for filenames in the Simias namespace (files and folders that contain any of these characters cannot be synchronized with iFolder and conflicts will be generated).</wsdl:documentation>
      <input message="s0:DownloadiFolderSoapIn"/>
      <output message="s0:DownloadiFolderSoapOut"/>
    </operation>
    <operation name="UpdateLocalProperties">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Updates the encryption related local properties.</wsdl:documentation>
      <input message="s0:UpdateLocalPropertiesSoapIn"/>
      <output message="s0:UpdateLocalPropertiesSoapOut"/>
    </operation>
    <operation name="DisableUser">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Disable user object and set user move property</wsdl:documentation>
      <input message="s0:DisableUserSoapIn"/>
      <output message="s0:DisableUserSoapOut"/>
    </operation>
    <operation name="SetOnMasterEncryptionBlobFlag">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">SetOnMasterEncryptionBlobFlag</wsdl:documentation>
      <input message="s0:SetOnMasterEncryptionBlobFlagSoapIn"/>
      <output message="s0:SetOnMasterEncryptionBlobFlagSoapOut"/>
    </operation>
    <operation name="CommitDomainMember">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">CommitDomainMember</wsdl:documentation>
      <input message="s0:CommitDomainMemberSoapIn"/>
      <output message="s0:CommitDomainMemberSoapOut"/>
    </operation>
    <operation name="ServerGetCollectionHashKey">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">GetCollectionHashKey.</wsdl:documentation>
      <input message="s0:ServerGetCollectionHashKeySoapIn"/>
      <output message="s0:ServerGetCollectionHashKeySoapOut"/>
    </operation>
    <operation name="GetiFolderCryptoKeys">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">GetiFolderCryptoKeys.</wsdl:documentation>
      <input message="s0:GetiFolderCryptoKeysSoapIn"/>
      <output message="s0:GetiFolderCryptoKeysSoapOut"/>
    </operation>
    <operation name="SetiFolderCryptoKeys">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">SetiFolderCryptoKeys.</wsdl:documentation>
      <input message="s0:SetiFolderCryptoKeysSoapIn"/>
      <output message="s0:SetiFolderCryptoKeysSoapOut"/>
    </operation>
    <operation name="ExportiFoldersCryptoKeys">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">ExportiFoldersCryptoKeys.</wsdl:documentation>
      <input message="s0:ExportiFoldersCryptoKeysSoapIn"/>
      <output message="s0:ExportiFoldersCryptoKeysSoapOut"/>
    </operation>
    <operation name="ImportiFoldersCryptoKeys">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">ImportiFoldersCryptoKeys.</wsdl:documentation>
      <input message="s0:ImportiFoldersCryptoKeysSoapIn"/>
      <output message="s0:ImportiFoldersCryptoKeysSoapOut"/>
    </operation>
    <operation name="ExportiFoldersCryptoKeysToDoc">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Exports the iFolders Crypto Keys to a XML Document.</wsdl:documentation>
      <input message="s0:ExportiFoldersCryptoKeysToDocSoapIn"/>
      <output message="s0:ExportiFoldersCryptoKeysToDocSoapOut"/>
    </operation>
    <operation name="RecoverKeys">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Recover the ifolder crypto keys for an user in a Domain given a RA.</wsdl:documentation>
      <input message="s0:RecoverKeysSoapIn"/>
      <output message="s0:RecoverKeysSoapOut"/>
    </operation>
    <operation name="ImportiFoldersCryptoKeysFromDoc">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Imports the iFolder Crypto Keys from an Array</wsdl:documentation>
      <input message="s0:ImportiFoldersCryptoKeysFromDocSoapIn"/>
      <output message="s0:ImportiFoldersCryptoKeysFromDocSoapOut"/>
    </operation>
    <operation name="ExportRecoverImport">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Resets the passphrase by Export-Recover-Import automation</wsdl:documentation>
      <input message="s0:ExportRecoverImportSoapIn"/>
      <output message="s0:ExportRecoverImportSoapOut"/>
    </operation>
    <operation name="SetPassPhrase">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Set the passphrase and recovery agent.</wsdl:documentation>
      <input message="s0:SetPassPhraseSoapIn"/>
      <output message="s0:SetPassPhraseSoapOut"/>
    </operation>
    <operation name="DefaultAccount">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Set the passphrase and recovery agent.</wsdl:documentation>
      <input message="s0:DefaultAccountSoapIn"/>
      <output message="s0:DefaultAccountSoapOut"/>
    </operation>
    <operation name="GetDefaultiFolder">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Set the passphrase and recovery agent.</wsdl:documentation>
      <input message="s0:GetDefaultiFolderSoapIn"/>
      <output message="s0:GetDefaultiFolderSoapOut"/>
    </operation>
    <operation name="ReSetPassPhrase">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Reset passphrase and recovery agent.</wsdl:documentation>
      <input message="s0:ReSetPassPhraseSoapIn"/>
      <output message="s0:ReSetPassPhraseSoapOut"/>
    </operation>
    <operation name="ValidatePassPhrase">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Validate the passphrase for the correctness.</wsdl:documentation>
      <input message="s0:ValidatePassPhraseSoapIn"/>
      <output message="s0:ValidatePassPhraseSoapOut"/>
    </operation>
    <operation name="IsPassPhraseSet">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns the passphrase state.</wsdl:documentation>
      <input message="s0:IsPassPhraseSetSoapIn"/>
      <output message="s0:IsPassPhraseSetSoapOut"/>
    </operation>
    <operation name="GetSimiasDataPath">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Gets the directory path to the Simias data area.</wsdl:documentation>
      <input message="s0:GetSimiasDataPathSoapIn"/>
      <output message="s0:GetSimiasDataPathSoapOut"/>
    </operation>
    <operation name="GetSimiasProcessID">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Gets the process ID for the current running process.</wsdl:documentation>
      <input message="s0:GetSimiasProcessIDSoapIn"/>
      <output message="s0:GetSimiasProcessIDSoapOut"/>
    </operation>
  </portType>
  <portType name="Simias Web ServiceHttpGet">
    <operation name="PingSimias">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Allows a client to ping to make sure the Web Service is up and running</wsdl:documentation>
      <input message="s0:PingSimiasHttpGetIn"/>
      <output message="s0:PingSimiasHttpGetOut"/>
    </operation>
    <operation name="AddMemberToDomain">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Add a member to the domain.</wsdl:documentation>
      <input message="s0:AddMemberToDomainHttpGetIn"/>
      <output message="s0:AddMemberToDomainHttpGetOut"/>
    </operation>
    <operation name="RemoveMemberFromDomain">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Remove a member from the domain.</wsdl:documentation>
      <input message="s0:RemoveMemberFromDomainHttpGetIn"/>
      <output message="s0:RemoveMemberFromDomainHttpGetOut"/>
    </operation>
    <operation name="FindCloseMembers">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">End the search for domain members.</wsdl:documentation>
      <input message="s0:FindCloseMembersHttpGetIn"/>
      <output message="s0:FindCloseMembersHttpGetOut"/>
    </operation>
    <operation name="GetSimiasInformation">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">GetSimiasInformation</wsdl:documentation>
      <input message="s0:GetSimiasInformationHttpGetIn"/>
      <output message="s0:GetSimiasInformationHttpGetOut"/>
    </operation>
    <operation name="GetDomainInformation">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">GetDomainInformation</wsdl:documentation>
      <input message="s0:GetDomainInformationHttpGetIn"/>
      <output message="s0:GetDomainInformationHttpGetOut"/>
    </operation>
    <operation name="GetDomains">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get a list of local domains</wsdl:documentation>
      <input message="s0:GetDomainsHttpGetIn"/>
      <output message="s0:GetDomainsHttpGetOut"/>
    </operation>
    <operation name="LoginToRemoteDomain">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Login or authenticate to a remote domain</wsdl:documentation>
      <input message="s0:LoginToRemoteDomainHttpGetIn"/>
      <output message="s0:LoginToRemoteDomainHttpGetOut"/>
    </operation>
    <operation name="LogoutFromRemoteDomain">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Logout from a remote domain</wsdl:documentation>
      <input message="s0:LogoutFromRemoteDomainHttpGetIn"/>
      <output message="s0:LogoutFromRemoteDomainHttpGetOut"/>
    </operation>
    <operation name="DisableDomainAutoLogin">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Disable automatic authentication to the specified domain</wsdl:documentation>
      <input message="s0:DisableDomainAutoLoginHttpGetIn"/>
      <output message="s0:DisableDomainAutoLoginHttpGetOut"/>
    </operation>
    <operation name="IsDomainActive">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">WebMethod to check if a domain is active</wsdl:documentation>
      <input message="s0:IsDomainActiveHttpGetIn"/>
      <output message="s0:IsDomainActiveHttpGetOut"/>
    </operation>
    <operation name="SetDomainActive">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">SetDomainActive - enables synchronization to the remote server</wsdl:documentation>
      <input message="s0:SetDomainActiveHttpGetIn"/>
      <output message="s0:SetDomainActiveHttpGetOut"/>
    </operation>
    <operation name="SetDomainInactive">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">SetDomainInactive - disables remote synchronization</wsdl:documentation>
      <input message="s0:SetDomainInactiveHttpGetIn"/>
      <output message="s0:SetDomainInactiveHttpGetOut"/>
    </operation>
    <operation name="ValidCredentials">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">ValidCredentials</wsdl:documentation>
      <input message="s0:ValidCredentialsHttpGetIn"/>
      <output message="s0:ValidCredentialsHttpGetOut"/>
    </operation>
    <operation name="SetDomainCredentials">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Sets domain credentials in the local store</wsdl:documentation>
      <input message="s0:SetDomainCredentialsHttpGetIn"/>
      <output message="s0:SetDomainCredentialsHttpGetOut"/>
    </operation>
    <operation name="SetHostAddress">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Sets host's url to local domain</wsdl:documentation>
      <input message="s0:SetHostAddressHttpGetIn"/>
      <output message="s0:SetHostAddressHttpGetOut"/>
    </operation>
    <operation name="StorePassPhrase">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Stores domain passphrase in the local store</wsdl:documentation>
      <input message="s0:StorePassPhraseHttpGetIn"/>
      <output message="s0:StorePassPhraseHttpGetOut"/>
    </operation>
    <operation name="GetPassPhrase">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get the saved credentials from a domain</wsdl:documentation>
      <input message="s0:GetPassPhraseHttpGetIn"/>
      <output message="s0:GetPassPhraseHttpGetOut"/>
    </operation>
    <operation name="GetRememberOption">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get the saved credentials from a domain</wsdl:documentation>
      <input message="s0:GetRememberOptionHttpGetIn"/>
      <output message="s0:GetRememberOptionHttpGetOut"/>
    </operation>
    <operation name="ConnectToDomain">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Connects to a Domain</wsdl:documentation>
      <input message="s0:ConnectToDomainHttpGetIn"/>
      <output message="s0:ConnectToDomainHttpGetOut"/>
    </operation>
    <operation name="LeaveDomain">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Removes a domain account from the workstation</wsdl:documentation>
      <input message="s0:LeaveDomainHttpGetIn"/>
      <output message="s0:LeaveDomainHttpGetOut"/>
    </operation>
    <operation name="RemoveCertFromTable">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Remove Certificate for this specified host</wsdl:documentation>
      <input message="s0:RemoveCertFromTableHttpGetIn"/>
      <output message="s0:RemoveCertFromTableHttpGetOut"/>
    </operation>
    <operation name="SetDefaultDomain">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Change the default domain to the specified domain ID</wsdl:documentation>
      <input message="s0:SetDefaultDomainHttpGetIn"/>
      <output message="s0:SetDefaultDomainHttpGetOut"/>
    </operation>
    <operation name="GetDefaultDomainID">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get the ID of the default domain</wsdl:documentation>
      <input message="s0:GetDefaultDomainIDHttpGetIn"/>
      <output message="s0:GetDefaultDomainIDHttpGetOut"/>
    </operation>
    <operation name="GetCertificate">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get the certificate of the specified host.</wsdl:documentation>
      <input message="s0:GetCertificateHttpGetIn"/>
      <output message="s0:GetCertificateHttpGetOut"/>
    </operation>
    <operation name="StoreCertificate">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Store the certificate for the specified host.</wsdl:documentation>
      <input message="s0:StoreCertificateHttpGetIn"/>
      <output message="s0:StoreCertificateHttpGetOut"/>
    </operation>
    <operation name="StoreDomainCertificate">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Store the certificate for the specified host.</wsdl:documentation>
      <input message="s0:StoreDomainCertificateHttpGetIn"/>
      <output message="s0:StoreDomainCertificateHttpGetOut"/>
    </operation>
    <operation name="GetRAList">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get the Recovery Agent List.</wsdl:documentation>
      <input message="s0:GetRAListHttpGetIn"/>
      <output message="s0:GetRAListHttpGetOut"/>
    </operation>
    <operation name="GetRAListOnClient">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get the Recovery Agent List.</wsdl:documentation>
      <input message="s0:GetRAListOnClientHttpGetIn"/>
      <output message="s0:GetRAListOnClientHttpGetOut"/>
    </operation>
    <operation name="GetRACertificate">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get the Recovery Agent certificate of the domain.</wsdl:documentation>
      <input message="s0:GetRACertificateHttpGetIn"/>
      <output message="s0:GetRACertificateHttpGetOut"/>
    </operation>
    <operation name="GetRACertificateOnClient">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get the Recovery Agent List.</wsdl:documentation>
      <input message="s0:GetRACertificateOnClientHttpGetIn"/>
      <output message="s0:GetRACertificateOnClientHttpGetOut"/>
    </operation>
    <operation name="GetPublicKey">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get the public key of the certificate</wsdl:documentation>
      <input message="s0:GetPublicKeyHttpGetIn"/>
      <output message="s0:GetPublicKeyHttpGetOut"/>
    </operation>
    <operation name="GetDefaultPublicKey">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get the public key of the certificate</wsdl:documentation>
      <input message="s0:GetDefaultPublicKeyHttpGetIn"/>
      <output message="s0:GetDefaultPublicKeyHttpGetOut"/>
    </operation>
    <operation name="GetDefaultRSAFromServer">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get the Default RSA key</wsdl:documentation>
      <input message="s0:GetDefaultRSAFromServerHttpGetIn"/>
      <output message="s0:GetDefaultRSAFromServerHttpGetOut"/>
    </operation>
    <operation name="GetDefaultRSAKey">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get the Default RSA key</wsdl:documentation>
      <input message="s0:GetDefaultRSAKeyHttpGetIn"/>
      <output message="s0:GetDefaultRSAKeyHttpGetOut"/>
    </operation>
    <operation name="StoreRACertificate">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Store the certificate for the Domain.</wsdl:documentation>
      <input message="s0:StoreRACertificateHttpGetIn"/>
      <output message="s0:StoreRACertificateHttpGetOut"/>
    </operation>
    <operation name="GetInvalidSyncFilenameChars">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns the characters which cannot be used for filenames in the Simias namespace (files and folders that contain any of these characters cannot be synchronized with iFolder and conflicts will be generated).</wsdl:documentation>
      <input message="s0:GetInvalidSyncFilenameCharsHttpGetIn"/>
      <output message="s0:GetInvalidSyncFilenameCharsHttpGetOut"/>
    </operation>
    <operation name="SetDomainHostAddress">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Sets a new server network address for a client.</wsdl:documentation>
      <input message="s0:SetDomainHostAddressHttpGetIn"/>
      <output message="s0:SetDomainHostAddressHttpGetOut"/>
    </operation>
    <operation name="SetProxyAddress">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Sets a new proxy address for the specified host.</wsdl:documentation>
      <input message="s0:SetProxyAddressHttpGetIn"/>
      <output message="s0:SetProxyAddressHttpGetOut"/>
    </operation>
    <operation name="CanShareService">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Checks to see if this instance of Simias is shareable.</wsdl:documentation>
      <input message="s0:CanShareServiceHttpGetIn"/>
      <output message="s0:CanShareServiceHttpGetOut"/>
    </operation>
    <operation name="StopSimiasProcess">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Shuts down the controlling server process.</wsdl:documentation>
      <input message="s0:StopSimiasProcessHttpGetIn"/>
      <output message="s0:StopSimiasProcessHttpGetOut"/>
    </operation>
    <operation name="AddSimiasReference">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Increments the reference count that keeps Simias services running.</wsdl:documentation>
      <input message="s0:AddSimiasReferenceHttpGetIn"/>
      <output message="s0:AddSimiasReferenceHttpGetOut"/>
    </operation>
    <operation name="RemoveSimiasReference">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Decrements the Simias service reference count and signals the server to stop if the count goes to zero.</wsdl:documentation>
      <input message="s0:RemoveSimiasReferenceHttpGetIn"/>
      <output message="s0:RemoveSimiasReferenceHttpGetOut"/>
    </operation>
    <operation name="ServerSetDefaultAccount">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Set the passphrase and recovery agent.</wsdl:documentation>
      <input message="s0:ServerSetDefaultAccountHttpGetIn"/>
      <output message="s0:ServerSetDefaultAccountHttpGetOut"/>
    </operation>
    <operation name="ServerGetDefaultiFolder">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Set the passphrase and recovery agent.</wsdl:documentation>
      <input message="s0:ServerGetDefaultiFolderHttpGetIn"/>
      <output message="s0:ServerGetDefaultiFolderHttpGetOut"/>
    </operation>
    <operation name="GetGroupsiFolderLimitPolicy">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">gets the GroupsiFolderLimitPolicy for users group.</wsdl:documentation>
      <input message="s0:GetGroupsiFolderLimitPolicyHttpGetIn"/>
      <output message="s0:GetGroupsiFolderLimitPolicyHttpGetOut"/>
    </operation>
    <operation name="IsTransferAllowed">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">gets the UseriFolderLimitPolicy for users - transfer of Ownership.</wsdl:documentation>
      <input message="s0:IsTransferAllowedHttpGetIn"/>
      <output message="s0:IsTransferAllowedHttpGetOut"/>
    </operation>
    <operation name="GetGroupsSharingPolicy">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">gets the GroupsiFolderLimitPolicy for users group.</wsdl:documentation>
      <input message="s0:GetGroupsSharingPolicyHttpGetIn"/>
      <output message="s0:GetGroupsSharingPolicyHttpGetOut"/>
    </operation>
    <operation name="GetGroupsSecurityPolicy">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">gets the GroupsSecurityPolicy for users group.</wsdl:documentation>
      <input message="s0:GetGroupsSecurityPolicyHttpGetIn"/>
      <output message="s0:GetGroupsSecurityPolicyHttpGetOut"/>
    </operation>
    <operation name="GetEffectiveSyncPolicy">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">gets the GroupsSecurityPolicy for users group.</wsdl:documentation>
      <input message="s0:GetEffectiveSyncPolicyHttpGetIn"/>
      <output message="s0:GetEffectiveSyncPolicyHttpGetOut"/>
    </operation>
    <operation name="ServerSetPassPhrase">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Set the passphrase and recovery agent.</wsdl:documentation>
      <input message="s0:ServerSetPassPhraseHttpGetIn"/>
      <output message="s0:ServerSetPassPhraseHttpGetOut"/>
    </operation>
    <operation name="ServerGetEncrypPassKey">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">ServerGetEncrypPassKey.</wsdl:documentation>
      <input message="s0:ServerGetEncrypPassKeyHttpGetIn"/>
      <output message="s0:ServerGetEncrypPassKeyHttpGetOut"/>
    </operation>
    <operation name="ServerGetPassKeyHash">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">ServerGetPassKeyHash.</wsdl:documentation>
      <input message="s0:ServerGetPassKeyHashHttpGetIn"/>
      <output message="s0:ServerGetPassKeyHashHttpGetOut"/>
    </operation>
    <operation name="UpdateUserMoveState">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Updates the user move state property</wsdl:documentation>
      <input message="s0:UpdateUserMoveStateHttpGetIn"/>
      <output message="s0:UpdateUserMoveStateHttpGetOut"/>
    </operation>
    <operation name="UpdateHomeServer">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Update users HomeServer Object</wsdl:documentation>
      <input message="s0:UpdateHomeServerHttpGetIn"/>
      <output message="s0:UpdateHomeServerHttpGetOut"/>
    </operation>
    <operation name="DownloadiFolder">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns the characters which cannot be used for filenames in the Simias namespace (files and folders that contain any of these characters cannot be synchronized with iFolder and conflicts will be generated).</wsdl:documentation>
      <input message="s0:DownloadiFolderHttpGetIn"/>
      <output message="s0:DownloadiFolderHttpGetOut"/>
    </operation>
    <operation name="UpdateLocalProperties">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Updates the encryption related local properties.</wsdl:documentation>
      <input message="s0:UpdateLocalPropertiesHttpGetIn"/>
      <output message="s0:UpdateLocalPropertiesHttpGetOut"/>
    </operation>
    <operation name="DisableUser">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Disable user object and set user move property</wsdl:documentation>
      <input message="s0:DisableUserHttpGetIn"/>
      <output message="s0:DisableUserHttpGetOut"/>
    </operation>
    <operation name="SetOnMasterEncryptionBlobFlag">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">SetOnMasterEncryptionBlobFlag</wsdl:documentation>
      <input message="s0:SetOnMasterEncryptionBlobFlagHttpGetIn"/>
      <output message="s0:SetOnMasterEncryptionBlobFlagHttpGetOut"/>
    </operation>
    <operation name="ServerGetCollectionHashKey">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">GetCollectionHashKey.</wsdl:documentation>
      <input message="s0:ServerGetCollectionHashKeyHttpGetIn"/>
      <output message="s0:ServerGetCollectionHashKeyHttpGetOut"/>
    </operation>
    <operation name="GetiFolderCryptoKeys">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">GetiFolderCryptoKeys.</wsdl:documentation>
      <input message="s0:GetiFolderCryptoKeysHttpGetIn"/>
      <output message="s0:GetiFolderCryptoKeysHttpGetOut"/>
    </operation>
    <operation name="ExportiFoldersCryptoKeys">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">ExportiFoldersCryptoKeys.</wsdl:documentation>
      <input message="s0:ExportiFoldersCryptoKeysHttpGetIn"/>
      <output message="s0:ExportiFoldersCryptoKeysHttpGetOut"/>
    </operation>
    <operation name="ImportiFoldersCryptoKeys">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">ImportiFoldersCryptoKeys.</wsdl:documentation>
      <input message="s0:ImportiFoldersCryptoKeysHttpGetIn"/>
      <output message="s0:ImportiFoldersCryptoKeysHttpGetOut"/>
    </operation>
    <operation name="ExportRecoverImport">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Resets the passphrase by Export-Recover-Import automation</wsdl:documentation>
      <input message="s0:ExportRecoverImportHttpGetIn"/>
      <output message="s0:ExportRecoverImportHttpGetOut"/>
    </operation>
    <operation name="SetPassPhrase">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Set the passphrase and recovery agent.</wsdl:documentation>
      <input message="s0:SetPassPhraseHttpGetIn"/>
      <output message="s0:SetPassPhraseHttpGetOut"/>
    </operation>
    <operation name="DefaultAccount">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Set the passphrase and recovery agent.</wsdl:documentation>
      <input message="s0:DefaultAccountHttpGetIn"/>
      <output message="s0:DefaultAccountHttpGetOut"/>
    </operation>
    <operation name="GetDefaultiFolder">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Set the passphrase and recovery agent.</wsdl:documentation>
      <input message="s0:GetDefaultiFolderHttpGetIn"/>
      <output message="s0:GetDefaultiFolderHttpGetOut"/>
    </operation>
    <operation name="ReSetPassPhrase">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Reset passphrase and recovery agent.</wsdl:documentation>
      <input message="s0:ReSetPassPhraseHttpGetIn"/>
      <output message="s0:ReSetPassPhraseHttpGetOut"/>
    </operation>
    <operation name="ValidatePassPhrase">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Validate the passphrase for the correctness.</wsdl:documentation>
      <input message="s0:ValidatePassPhraseHttpGetIn"/>
      <output message="s0:ValidatePassPhraseHttpGetOut"/>
    </operation>
    <operation name="IsPassPhraseSet">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns the passphrase state.</wsdl:documentation>
      <input message="s0:IsPassPhraseSetHttpGetIn"/>
      <output message="s0:IsPassPhraseSetHttpGetOut"/>
    </operation>
    <operation name="GetSimiasDataPath">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Gets the directory path to the Simias data area.</wsdl:documentation>
      <input message="s0:GetSimiasDataPathHttpGetIn"/>
      <output message="s0:GetSimiasDataPathHttpGetOut"/>
    </operation>
    <operation name="GetSimiasProcessID">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Gets the process ID for the current running process.</wsdl:documentation>
      <input message="s0:GetSimiasProcessIDHttpGetIn"/>
      <output message="s0:GetSimiasProcessIDHttpGetOut"/>
    </operation>
  </portType>
  <portType name="Simias Web ServiceHttpPost">
    <operation name="PingSimias">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Allows a client to ping to make sure the Web Service is up and running</wsdl:documentation>
      <input message="s0:PingSimiasHttpPostIn"/>
      <output message="s0:PingSimiasHttpPostOut"/>
    </operation>
    <operation name="AddMemberToDomain">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Add a member to the domain.</wsdl:documentation>
      <input message="s0:AddMemberToDomainHttpPostIn"/>
      <output message="s0:AddMemberToDomainHttpPostOut"/>
    </operation>
    <operation name="RemoveMemberFromDomain">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Remove a member from the domain.</wsdl:documentation>
      <input message="s0:RemoveMemberFromDomainHttpPostIn"/>
      <output message="s0:RemoveMemberFromDomainHttpPostOut"/>
    </operation>
    <operation name="FindCloseMembers">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">End the search for domain members.</wsdl:documentation>
      <input message="s0:FindCloseMembersHttpPostIn"/>
      <output message="s0:FindCloseMembersHttpPostOut"/>
    </operation>
    <operation name="GetSimiasInformation">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">GetSimiasInformation</wsdl:documentation>
      <input message="s0:GetSimiasInformationHttpPostIn"/>
      <output message="s0:GetSimiasInformationHttpPostOut"/>
    </operation>
    <operation name="GetDomainInformation">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">GetDomainInformation</wsdl:documentation>
      <input message="s0:GetDomainInformationHttpPostIn"/>
      <output message="s0:GetDomainInformationHttpPostOut"/>
    </operation>
    <operation name="GetDomains">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get a list of local domains</wsdl:documentation>
      <input message="s0:GetDomainsHttpPostIn"/>
      <output message="s0:GetDomainsHttpPostOut"/>
    </operation>
    <operation name="LoginToRemoteDomain">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Login or authenticate to a remote domain</wsdl:documentation>
      <input message="s0:LoginToRemoteDomainHttpPostIn"/>
      <output message="s0:LoginToRemoteDomainHttpPostOut"/>
    </operation>
    <operation name="LogoutFromRemoteDomain">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Logout from a remote domain</wsdl:documentation>
      <input message="s0:LogoutFromRemoteDomainHttpPostIn"/>
      <output message="s0:LogoutFromRemoteDomainHttpPostOut"/>
    </operation>
    <operation name="DisableDomainAutoLogin">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Disable automatic authentication to the specified domain</wsdl:documentation>
      <input message="s0:DisableDomainAutoLoginHttpPostIn"/>
      <output message="s0:DisableDomainAutoLoginHttpPostOut"/>
    </operation>
    <operation name="IsDomainActive">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">WebMethod to check if a domain is active</wsdl:documentation>
      <input message="s0:IsDomainActiveHttpPostIn"/>
      <output message="s0:IsDomainActiveHttpPostOut"/>
    </operation>
    <operation name="SetDomainActive">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">SetDomainActive - enables synchronization to the remote server</wsdl:documentation>
      <input message="s0:SetDomainActiveHttpPostIn"/>
      <output message="s0:SetDomainActiveHttpPostOut"/>
    </operation>
    <operation name="SetDomainInactive">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">SetDomainInactive - disables remote synchronization</wsdl:documentation>
      <input message="s0:SetDomainInactiveHttpPostIn"/>
      <output message="s0:SetDomainInactiveHttpPostOut"/>
    </operation>
    <operation name="ValidCredentials">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">ValidCredentials</wsdl:documentation>
      <input message="s0:ValidCredentialsHttpPostIn"/>
      <output message="s0:ValidCredentialsHttpPostOut"/>
    </operation>
    <operation name="SetDomainCredentials">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Sets domain credentials in the local store</wsdl:documentation>
      <input message="s0:SetDomainCredentialsHttpPostIn"/>
      <output message="s0:SetDomainCredentialsHttpPostOut"/>
    </operation>
    <operation name="SetHostAddress">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Sets host's url to local domain</wsdl:documentation>
      <input message="s0:SetHostAddressHttpPostIn"/>
      <output message="s0:SetHostAddressHttpPostOut"/>
    </operation>
    <operation name="StorePassPhrase">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Stores domain passphrase in the local store</wsdl:documentation>
      <input message="s0:StorePassPhraseHttpPostIn"/>
      <output message="s0:StorePassPhraseHttpPostOut"/>
    </operation>
    <operation name="GetPassPhrase">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get the saved credentials from a domain</wsdl:documentation>
      <input message="s0:GetPassPhraseHttpPostIn"/>
      <output message="s0:GetPassPhraseHttpPostOut"/>
    </operation>
    <operation name="GetRememberOption">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get the saved credentials from a domain</wsdl:documentation>
      <input message="s0:GetRememberOptionHttpPostIn"/>
      <output message="s0:GetRememberOptionHttpPostOut"/>
    </operation>
    <operation name="ConnectToDomain">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Connects to a Domain</wsdl:documentation>
      <input message="s0:ConnectToDomainHttpPostIn"/>
      <output message="s0:ConnectToDomainHttpPostOut"/>
    </operation>
    <operation name="LeaveDomain">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Removes a domain account from the workstation</wsdl:documentation>
      <input message="s0:LeaveDomainHttpPostIn"/>
      <output message="s0:LeaveDomainHttpPostOut"/>
    </operation>
    <operation name="RemoveCertFromTable">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Remove Certificate for this specified host</wsdl:documentation>
      <input message="s0:RemoveCertFromTableHttpPostIn"/>
      <output message="s0:RemoveCertFromTableHttpPostOut"/>
    </operation>
    <operation name="SetDefaultDomain">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Change the default domain to the specified domain ID</wsdl:documentation>
      <input message="s0:SetDefaultDomainHttpPostIn"/>
      <output message="s0:SetDefaultDomainHttpPostOut"/>
    </operation>
    <operation name="GetDefaultDomainID">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get the ID of the default domain</wsdl:documentation>
      <input message="s0:GetDefaultDomainIDHttpPostIn"/>
      <output message="s0:GetDefaultDomainIDHttpPostOut"/>
    </operation>
    <operation name="GetCertificate">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get the certificate of the specified host.</wsdl:documentation>
      <input message="s0:GetCertificateHttpPostIn"/>
      <output message="s0:GetCertificateHttpPostOut"/>
    </operation>
    <operation name="StoreCertificate">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Store the certificate for the specified host.</wsdl:documentation>
      <input message="s0:StoreCertificateHttpPostIn"/>
      <output message="s0:StoreCertificateHttpPostOut"/>
    </operation>
    <operation name="StoreDomainCertificate">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Store the certificate for the specified host.</wsdl:documentation>
      <input message="s0:StoreDomainCertificateHttpPostIn"/>
      <output message="s0:StoreDomainCertificateHttpPostOut"/>
    </operation>
    <operation name="GetRAList">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get the Recovery Agent List.</wsdl:documentation>
      <input message="s0:GetRAListHttpPostIn"/>
      <output message="s0:GetRAListHttpPostOut"/>
    </operation>
    <operation name="GetRAListOnClient">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get the Recovery Agent List.</wsdl:documentation>
      <input message="s0:GetRAListOnClientHttpPostIn"/>
      <output message="s0:GetRAListOnClientHttpPostOut"/>
    </operation>
    <operation name="GetRACertificate">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get the Recovery Agent certificate of the domain.</wsdl:documentation>
      <input message="s0:GetRACertificateHttpPostIn"/>
      <output message="s0:GetRACertificateHttpPostOut"/>
    </operation>
    <operation name="GetRACertificateOnClient">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get the Recovery Agent List.</wsdl:documentation>
      <input message="s0:GetRACertificateOnClientHttpPostIn"/>
      <output message="s0:GetRACertificateOnClientHttpPostOut"/>
    </operation>
    <operation name="GetPublicKey">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get the public key of the certificate</wsdl:documentation>
      <input message="s0:GetPublicKeyHttpPostIn"/>
      <output message="s0:GetPublicKeyHttpPostOut"/>
    </operation>
    <operation name="GetDefaultPublicKey">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get the public key of the certificate</wsdl:documentation>
      <input message="s0:GetDefaultPublicKeyHttpPostIn"/>
      <output message="s0:GetDefaultPublicKeyHttpPostOut"/>
    </operation>
    <operation name="GetDefaultRSAFromServer">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get the Default RSA key</wsdl:documentation>
      <input message="s0:GetDefaultRSAFromServerHttpPostIn"/>
      <output message="s0:GetDefaultRSAFromServerHttpPostOut"/>
    </operation>
    <operation name="GetDefaultRSAKey">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get the Default RSA key</wsdl:documentation>
      <input message="s0:GetDefaultRSAKeyHttpPostIn"/>
      <output message="s0:GetDefaultRSAKeyHttpPostOut"/>
    </operation>
    <operation name="StoreRACertificate">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Store the certificate for the Domain.</wsdl:documentation>
      <input message="s0:StoreRACertificateHttpPostIn"/>
      <output message="s0:StoreRACertificateHttpPostOut"/>
    </operation>
    <operation name="GetInvalidSyncFilenameChars">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns the characters which cannot be used for filenames in the Simias namespace (files and folders that contain any of these characters cannot be synchronized with iFolder and conflicts will be generated).</wsdl:documentation>
      <input message="s0:GetInvalidSyncFilenameCharsHttpPostIn"/>
      <output message="s0:GetInvalidSyncFilenameCharsHttpPostOut"/>
    </operation>
    <operation name="SetDomainHostAddress">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Sets a new server network address for a client.</wsdl:documentation>
      <input message="s0:SetDomainHostAddressHttpPostIn"/>
      <output message="s0:SetDomainHostAddressHttpPostOut"/>
    </operation>
    <operation name="SetProxyAddress">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Sets a new proxy address for the specified host.</wsdl:documentation>
      <input message="s0:SetProxyAddressHttpPostIn"/>
      <output message="s0:SetProxyAddressHttpPostOut"/>
    </operation>
    <operation name="CanShareService">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Checks to see if this instance of Simias is shareable.</wsdl:documentation>
      <input message="s0:CanShareServiceHttpPostIn"/>
      <output message="s0:CanShareServiceHttpPostOut"/>
    </operation>
    <operation name="StopSimiasProcess">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Shuts down the controlling server process.</wsdl:documentation>
      <input message="s0:StopSimiasProcessHttpPostIn"/>
      <output message="s0:StopSimiasProcessHttpPostOut"/>
    </operation>
    <operation name="AddSimiasReference">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Increments the reference count that keeps Simias services running.</wsdl:documentation>
      <input message="s0:AddSimiasReferenceHttpPostIn"/>
      <output message="s0:AddSimiasReferenceHttpPostOut"/>
    </operation>
    <operation name="RemoveSimiasReference">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Decrements the Simias service reference count and signals the server to stop if the count goes to zero.</wsdl:documentation>
      <input message="s0:RemoveSimiasReferenceHttpPostIn"/>
      <output message="s0:RemoveSimiasReferenceHttpPostOut"/>
    </operation>
    <operation name="ServerSetDefaultAccount">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Set the passphrase and recovery agent.</wsdl:documentation>
      <input message="s0:ServerSetDefaultAccountHttpPostIn"/>
      <output message="s0:ServerSetDefaultAccountHttpPostOut"/>
    </operation>
    <operation name="ServerGetDefaultiFolder">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Set the passphrase and recovery agent.</wsdl:documentation>
      <input message="s0:ServerGetDefaultiFolderHttpPostIn"/>
      <output message="s0:ServerGetDefaultiFolderHttpPostOut"/>
    </operation>
    <operation name="GetGroupsiFolderLimitPolicy">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">gets the GroupsiFolderLimitPolicy for users group.</wsdl:documentation>
      <input message="s0:GetGroupsiFolderLimitPolicyHttpPostIn"/>
      <output message="s0:GetGroupsiFolderLimitPolicyHttpPostOut"/>
    </operation>
    <operation name="IsTransferAllowed">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">gets the UseriFolderLimitPolicy for users - transfer of Ownership.</wsdl:documentation>
      <input message="s0:IsTransferAllowedHttpPostIn"/>
      <output message="s0:IsTransferAllowedHttpPostOut"/>
    </operation>
    <operation name="GetGroupsSharingPolicy">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">gets the GroupsiFolderLimitPolicy for users group.</wsdl:documentation>
      <input message="s0:GetGroupsSharingPolicyHttpPostIn"/>
      <output message="s0:GetGroupsSharingPolicyHttpPostOut"/>
    </operation>
    <operation name="GetGroupsSecurityPolicy">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">gets the GroupsSecurityPolicy for users group.</wsdl:documentation>
      <input message="s0:GetGroupsSecurityPolicyHttpPostIn"/>
      <output message="s0:GetGroupsSecurityPolicyHttpPostOut"/>
    </operation>
    <operation name="GetEffectiveSyncPolicy">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">gets the GroupsSecurityPolicy for users group.</wsdl:documentation>
      <input message="s0:GetEffectiveSyncPolicyHttpPostIn"/>
      <output message="s0:GetEffectiveSyncPolicyHttpPostOut"/>
    </operation>
    <operation name="ServerSetPassPhrase">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Set the passphrase and recovery agent.</wsdl:documentation>
      <input message="s0:ServerSetPassPhraseHttpPostIn"/>
      <output message="s0:ServerSetPassPhraseHttpPostOut"/>
    </operation>
    <operation name="ServerGetEncrypPassKey">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">ServerGetEncrypPassKey.</wsdl:documentation>
      <input message="s0:ServerGetEncrypPassKeyHttpPostIn"/>
      <output message="s0:ServerGetEncrypPassKeyHttpPostOut"/>
    </operation>
    <operation name="ServerGetPassKeyHash">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">ServerGetPassKeyHash.</wsdl:documentation>
      <input message="s0:ServerGetPassKeyHashHttpPostIn"/>
      <output message="s0:ServerGetPassKeyHashHttpPostOut"/>
    </operation>
    <operation name="UpdateUserMoveState">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Updates the user move state property</wsdl:documentation>
      <input message="s0:UpdateUserMoveStateHttpPostIn"/>
      <output message="s0:UpdateUserMoveStateHttpPostOut"/>
    </operation>
    <operation name="UpdateHomeServer">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Update users HomeServer Object</wsdl:documentation>
      <input message="s0:UpdateHomeServerHttpPostIn"/>
      <output message="s0:UpdateHomeServerHttpPostOut"/>
    </operation>
    <operation name="DownloadiFolder">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns the characters which cannot be used for filenames in the Simias namespace (files and folders that contain any of these characters cannot be synchronized with iFolder and conflicts will be generated).</wsdl:documentation>
      <input message="s0:DownloadiFolderHttpPostIn"/>
      <output message="s0:DownloadiFolderHttpPostOut"/>
    </operation>
    <operation name="UpdateLocalProperties">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Updates the encryption related local properties.</wsdl:documentation>
      <input message="s0:UpdateLocalPropertiesHttpPostIn"/>
      <output message="s0:UpdateLocalPropertiesHttpPostOut"/>
    </operation>
    <operation name="DisableUser">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Disable user object and set user move property</wsdl:documentation>
      <input message="s0:DisableUserHttpPostIn"/>
      <output message="s0:DisableUserHttpPostOut"/>
    </operation>
    <operation name="SetOnMasterEncryptionBlobFlag">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">SetOnMasterEncryptionBlobFlag</wsdl:documentation>
      <input message="s0:SetOnMasterEncryptionBlobFlagHttpPostIn"/>
      <output message="s0:SetOnMasterEncryptionBlobFlagHttpPostOut"/>
    </operation>
    <operation name="ServerGetCollectionHashKey">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">GetCollectionHashKey.</wsdl:documentation>
      <input message="s0:ServerGetCollectionHashKeyHttpPostIn"/>
      <output message="s0:ServerGetCollectionHashKeyHttpPostOut"/>
    </operation>
    <operation name="GetiFolderCryptoKeys">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">GetiFolderCryptoKeys.</wsdl:documentation>
      <input message="s0:GetiFolderCryptoKeysHttpPostIn"/>
      <output message="s0:GetiFolderCryptoKeysHttpPostOut"/>
    </operation>
    <operation name="ExportiFoldersCryptoKeys">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">ExportiFoldersCryptoKeys.</wsdl:documentation>
      <input message="s0:ExportiFoldersCryptoKeysHttpPostIn"/>
      <output message="s0:ExportiFoldersCryptoKeysHttpPostOut"/>
    </operation>
    <operation name="ImportiFoldersCryptoKeys">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">ImportiFoldersCryptoKeys.</wsdl:documentation>
      <input message="s0:ImportiFoldersCryptoKeysHttpPostIn"/>
      <output message="s0:ImportiFoldersCryptoKeysHttpPostOut"/>
    </operation>
    <operation name="ExportRecoverImport">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Resets the passphrase by Export-Recover-Import automation</wsdl:documentation>
      <input message="s0:ExportRecoverImportHttpPostIn"/>
      <output message="s0:ExportRecoverImportHttpPostOut"/>
    </operation>
    <operation name="SetPassPhrase">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Set the passphrase and recovery agent.</wsdl:documentation>
      <input message="s0:SetPassPhraseHttpPostIn"/>
      <output message="s0:SetPassPhraseHttpPostOut"/>
    </operation>
    <operation name="DefaultAccount">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Set the passphrase and recovery agent.</wsdl:documentation>
      <input message="s0:DefaultAccountHttpPostIn"/>
      <output message="s0:DefaultAccountHttpPostOut"/>
    </operation>
    <operation name="GetDefaultiFolder">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Set the passphrase and recovery agent.</wsdl:documentation>
      <input message="s0:GetDefaultiFolderHttpPostIn"/>
      <output message="s0:GetDefaultiFolderHttpPostOut"/>
    </operation>
    <operation name="ReSetPassPhrase">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Reset passphrase and recovery agent.</wsdl:documentation>
      <input message="s0:ReSetPassPhraseHttpPostIn"/>
      <output message="s0:ReSetPassPhraseHttpPostOut"/>
    </operation>
    <operation name="ValidatePassPhrase">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Validate the passphrase for the correctness.</wsdl:documentation>
      <input message="s0:ValidatePassPhraseHttpPostIn"/>
      <output message="s0:ValidatePassPhraseHttpPostOut"/>
    </operation>
    <operation name="IsPassPhraseSet">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns the passphrase state.</wsdl:documentation>
      <input message="s0:IsPassPhraseSetHttpPostIn"/>
      <output message="s0:IsPassPhraseSetHttpPostOut"/>
    </operation>
    <operation name="GetSimiasDataPath">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Gets the directory path to the Simias data area.</wsdl:documentation>
      <input message="s0:GetSimiasDataPathHttpPostIn"/>
      <output message="s0:GetSimiasDataPathHttpPostOut"/>
    </operation>
    <operation name="GetSimiasProcessID">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Gets the process ID for the current running process.</wsdl:documentation>
      <input message="s0:GetSimiasProcessIDHttpPostIn"/>
      <output message="s0:GetSimiasProcessIDHttpPostOut"/>
    </operation>
  </portType>
  <binding name="Simias Web ServiceSoap" type="s0:Simias Web ServiceSoap">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http"/>
    <operation name="PingSimias">
      <soap:operation soapAction="http://novell.com/simias/web/PingSimias" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="AddMemberToDomain">
      <soap:operation soapAction="http://novell.com/simias/web/AddMemberToDomain" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="RemoveMemberFromDomain">
      <soap:operation soapAction="http://novell.com/simias/web/RemoveMemberFromDomain" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="FindCloseMembers">
      <soap:operation soapAction="http://novell.com/simias/web/FindCloseMembers" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="FindFirstMembers">
      <soap:operation soapAction="http://novell.com/simias/web/FindFirstMembers" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="FindFirstSpecificMembers">
      <soap:operation soapAction="http://novell.com/simias/web/FindFirstSpecificMembers" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="FindNextMembers">
      <soap:operation soapAction="http://novell.com/simias/web/FindNextMembers" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="FindPreviousMembers">
      <soap:operation soapAction="http://novell.com/simias/web/FindPreviousMembers" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="FindSeekMembers">
      <soap:operation soapAction="http://novell.com/simias/web/FindSeekMembers" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="GetSimiasInformation">
      <soap:operation soapAction="http://novell.com/simias/web/GetSimiasInformation" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="GetDomainInformation">
      <soap:operation soapAction="http://novell.com/simias/web/GetDomainInformation" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="GetDomains">
      <soap:operation soapAction="http://novell.com/simias/web/GetDomains" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="LoginToRemoteDomain">
      <soap:operation soapAction="http://novell.com/simias/web/LoginToRemoteDomain" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="LogoutFromRemoteDomain">
      <soap:operation soapAction="http://novell.com/simias/web/LogoutFromRemoteDomain" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="DisableDomainAutoLogin">
      <soap:operation soapAction="http://novell.com/simias/web/DisableDomainAutoLogin" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="IsDomainActive">
      <soap:operation soapAction="http://novell.com/simias/web/IsDomainActive" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="SetDomainActive">
      <soap:operation soapAction="http://novell.com/simias/web/SetDomainActive" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="SetDomainInactive">
      <soap:operation soapAction="http://novell.com/simias/web/SetDomainInactive" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="ValidCredentials">
      <soap:operation soapAction="http://novell.com/simias/web/ValidCredentials" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="SetDomainCredentials">
      <soap:operation soapAction="http://novell.com/simias/web/SetDomainCredentials" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="SetHostAddress">
      <soap:operation soapAction="http://novell.com/simias/web/SetHostAddress" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="StorePassPhrase">
      <soap:operation soapAction="http://novell.com/simias/web/StorePassPhrase" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="GetDomainCredentials">
      <soap:operation soapAction="http://novell.com/simias/web/GetDomainCredentials" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="GetPassPhrase">
      <soap:operation soapAction="http://novell.com/simias/web/GetPassPhrase" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="GetRememberOption">
      <soap:operation soapAction="http://novell.com/simias/web/GetRememberOption" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="ConnectToDomain">
      <soap:operation soapAction="http://novell.com/simias/web/ConnectToDomain" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="LeaveDomain">
      <soap:operation soapAction="http://novell.com/simias/web/LeaveDomain" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="RemoveCertFromTable">
      <soap:operation soapAction="http://novell.com/simias/web/RemoveCertFromTable" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="SetDefaultDomain">
      <soap:operation soapAction="http://novell.com/simias/web/SetDefaultDomain" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="GetDefaultDomainID">
      <soap:operation soapAction="http://novell.com/simias/web/GetDefaultDomainID" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="GetCertificate">
      <soap:operation soapAction="http://novell.com/simias/web/GetCertificate" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="GetCertificate2">
      <soap:operation soapAction="http://novell.com/simias/web/GetCertificate2" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="StoreCertificate">
      <soap:operation soapAction="http://novell.com/simias/web/StoreCertificate" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="StoreDomainCertificate">
      <soap:operation soapAction="http://novell.com/simias/web/StoreDomainCertificate" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="GetRAList">
      <soap:operation soapAction="http://novell.com/simias/web/GetRAList" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="GetRAListOnClient">
      <soap:operation soapAction="http://novell.com/simias/web/GetRAListOnClient" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="GetRACertificate">
      <soap:operation soapAction="http://novell.com/simias/web/GetRACertificate" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="GetRACertificateOnClient">
      <soap:operation soapAction="http://novell.com/simias/web/GetRACertificateOnClient" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="GetPublicKey">
      <soap:operation soapAction="http://novell.com/simias/web/GetPublicKey" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="GetDefaultPublicKey">
      <soap:operation soapAction="http://novell.com/simias/web/GetDefaultPublicKey" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="GetDefaultRSAFromServer">
      <soap:operation soapAction="http://novell.com/simias/web/GetDefaultRSAFromServer" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="GetDefaultRSAKey">
      <soap:operation soapAction="http://novell.com/simias/web/GetDefaultRSAKey" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="StoreRACertificate">
      <soap:operation soapAction="http://novell.com/simias/web/StoreRACertificate" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="GetInvalidSyncFilenameChars">
      <soap:operation soapAction="http://novell.com/simias/web/GetInvalidSyncFilenameChars" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="SetDomainHostAddress">
      <soap:operation soapAction="http://novell.com/simias/web/SetDomainHostAddress" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="SetProxyAddress">
      <soap:operation soapAction="http://novell.com/simias/web/SetProxyAddress" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="CanShareService">
      <soap:operation soapAction="http://novell.com/simias/web/CanShareService" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="StopSimiasProcess">
      <soap:operation soapAction="http://novell.com/simias/web/StopSimiasProcess" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="AddSimiasReference">
      <soap:operation soapAction="http://novell.com/simias/web/AddSimiasReference" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="RemoveSimiasReference">
      <soap:operation soapAction="http://novell.com/simias/web/RemoveSimiasReference" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="ServerSetDefaultAccount">
      <soap:operation soapAction="http://novell.com/simias/web/ServerSetDefaultAccount" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="ServerGetDefaultiFolder">
      <soap:operation soapAction="http://novell.com/simias/web/ServerGetDefaultiFolder" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="GetGroupsiFolderLimitPolicy">
      <soap:operation soapAction="http://novell.com/simias/web/GetGroupsiFolderLimitPolicy" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="IsTransferAllowed">
      <soap:operation soapAction="http://novell.com/simias/web/IsTransferAllowed" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="GetGroupsSharingPolicy">
      <soap:operation soapAction="http://novell.com/simias/web/GetGroupsSharingPolicy" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="GetGroupsSecurityPolicy">
      <soap:operation soapAction="http://novell.com/simias/web/GetGroupsSecurityPolicy" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="GetEffectiveSyncPolicy">
      <soap:operation soapAction="http://novell.com/simias/web/GetEffectiveSyncPolicy" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="ServerSetPassPhrase">
      <soap:operation soapAction="http://novell.com/simias/web/ServerSetPassPhrase" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="ServerGetEncrypPassKey">
      <soap:operation soapAction="http://novell.com/simias/web/ServerGetEncrypPassKey" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="ServerGetPassKeyHash">
      <soap:operation soapAction="http://novell.com/simias/web/ServerGetPassKeyHash" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="UpdateUserMoveState">
      <soap:operation soapAction="http://novell.com/simias/web/UpdateUserMoveState" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="UpdateHomeServer">
      <soap:operation soapAction="http://novell.com/simias/web/UpdateHomeServer" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="DownloadiFolder">
      <soap:operation soapAction="http://novell.com/simias/web/DownloadiFolder" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="UpdateLocalProperties">
      <soap:operation soapAction="http://novell.com/simias/web/UpdateLocalProperties" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="DisableUser">
      <soap:operation soapAction="http://novell.com/simias/web/DisableUser" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="SetOnMasterEncryptionBlobFlag">
      <soap:operation soapAction="http://novell.com/simias/web/SetOnMasterEncryptionBlobFlag" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="CommitDomainMember">
      <soap:operation soapAction="http://novell.com/simias/web/CommitDomainMember" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="ServerGetCollectionHashKey">
      <soap:operation soapAction="http://novell.com/simias/web/ServerGetCollectionHashKey" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="GetiFolderCryptoKeys">
      <soap:operation soapAction="http://novell.com/simias/web/GetiFolderCryptoKeys" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="SetiFolderCryptoKeys">
      <soap:operation soapAction="http://novell.com/simias/web/SetiFolderCryptoKeys" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="ExportiFoldersCryptoKeys">
      <soap:operation soapAction="http://novell.com/simias/web/ExportiFoldersCryptoKeys" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="ImportiFoldersCryptoKeys">
      <soap:operation soapAction="http://novell.com/simias/web/ImportiFoldersCryptoKeys" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="ExportiFoldersCryptoKeysToDoc">
      <soap:operation soapAction="http://novell.com/simias/web/ExportiFoldersCryptoKeysToDoc" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="RecoverKeys">
      <soap:operation soapAction="http://novell.com/simias/web/RecoverKeys" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="ImportiFoldersCryptoKeysFromDoc">
      <soap:operation soapAction="http://novell.com/simias/web/ImportiFoldersCryptoKeysFromDoc" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="ExportRecoverImport">
      <soap:operation soapAction="http://novell.com/simias/web/ExportRecoverImport" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="SetPassPhrase">
      <soap:operation soapAction="http://novell.com/simias/web/SetPassPhrase" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="DefaultAccount">
      <soap:operation soapAction="http://novell.com/simias/web/DefaultAccount" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="GetDefaultiFolder">
      <soap:operation soapAction="http://novell.com/simias/web/GetDefaultiFolder" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="ReSetPassPhrase">
      <soap:operation soapAction="http://novell.com/simias/web/ReSetPassPhrase" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="ValidatePassPhrase">
      <soap:operation soapAction="http://novell.com/simias/web/ValidatePassPhrase" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="IsPassPhraseSet">
      <soap:operation soapAction="http://novell.com/simias/web/IsPassPhraseSet" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="GetSimiasDataPath">
      <soap:operation soapAction="http://novell.com/simias/web/GetSimiasDataPath" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="GetSimiasProcessID">
      <soap:operation soapAction="http://novell.com/simias/web/GetSimiasProcessID" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
  </binding>
  <binding name="Simias Web ServiceSoap12" type="s0:Simias Web ServiceSoap12">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http"/>
    <operation name="PingSimias">
      <soap12:operation soapAction="http://novell.com/simias/web/PingSimias" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="AddMemberToDomain">
      <soap12:operation soapAction="http://novell.com/simias/web/AddMemberToDomain" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="RemoveMemberFromDomain">
      <soap12:operation soapAction="http://novell.com/simias/web/RemoveMemberFromDomain" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="FindCloseMembers">
      <soap12:operation soapAction="http://novell.com/simias/web/FindCloseMembers" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="FindFirstMembers">
      <soap12:operation soapAction="http://novell.com/simias/web/FindFirstMembers" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="FindFirstSpecificMembers">
      <soap12:operation soapAction="http://novell.com/simias/web/FindFirstSpecificMembers" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="FindNextMembers">
      <soap12:operation soapAction="http://novell.com/simias/web/FindNextMembers" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="FindPreviousMembers">
      <soap12:operation soapAction="http://novell.com/simias/web/FindPreviousMembers" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="FindSeekMembers">
      <soap12:operation soapAction="http://novell.com/simias/web/FindSeekMembers" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="GetSimiasInformation">
      <soap12:operation soapAction="http://novell.com/simias/web/GetSimiasInformation" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="GetDomainInformation">
      <soap12:operation soapAction="http://novell.com/simias/web/GetDomainInformation" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="GetDomains">
      <soap12:operation soapAction="http://novell.com/simias/web/GetDomains" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="LoginToRemoteDomain">
      <soap12:operation soapAction="http://novell.com/simias/web/LoginToRemoteDomain" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="LogoutFromRemoteDomain">
      <soap12:operation soapAction="http://novell.com/simias/web/LogoutFromRemoteDomain" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="DisableDomainAutoLogin">
      <soap12:operation soapAction="http://novell.com/simias/web/DisableDomainAutoLogin" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="IsDomainActive">
      <soap12:operation soapAction="http://novell.com/simias/web/IsDomainActive" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="SetDomainActive">
      <soap12:operation soapAction="http://novell.com/simias/web/SetDomainActive" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="SetDomainInactive">
      <soap12:operation soapAction="http://novell.com/simias/web/SetDomainInactive" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="ValidCredentials">
      <soap12:operation soapAction="http://novell.com/simias/web/ValidCredentials" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="SetDomainCredentials">
      <soap12:operation soapAction="http://novell.com/simias/web/SetDomainCredentials" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="SetHostAddress">
      <soap12:operation soapAction="http://novell.com/simias/web/SetHostAddress" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="StorePassPhrase">
      <soap12:operation soapAction="http://novell.com/simias/web/StorePassPhrase" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="GetDomainCredentials">
      <soap12:operation soapAction="http://novell.com/simias/web/GetDomainCredentials" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="GetPassPhrase">
      <soap12:operation soapAction="http://novell.com/simias/web/GetPassPhrase" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="GetRememberOption">
      <soap12:operation soapAction="http://novell.com/simias/web/GetRememberOption" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="ConnectToDomain">
      <soap12:operation soapAction="http://novell.com/simias/web/ConnectToDomain" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="LeaveDomain">
      <soap12:operation soapAction="http://novell.com/simias/web/LeaveDomain" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="RemoveCertFromTable">
      <soap12:operation soapAction="http://novell.com/simias/web/RemoveCertFromTable" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="SetDefaultDomain">
      <soap12:operation soapAction="http://novell.com/simias/web/SetDefaultDomain" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="GetDefaultDomainID">
      <soap12:operation soapAction="http://novell.com/simias/web/GetDefaultDomainID" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="GetCertificate">
      <soap12:operation soapAction="http://novell.com/simias/web/GetCertificate" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="GetCertificate2">
      <soap12:operation soapAction="http://novell.com/simias/web/GetCertificate2" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="StoreCertificate">
      <soap12:operation soapAction="http://novell.com/simias/web/StoreCertificate" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="StoreDomainCertificate">
      <soap12:operation soapAction="http://novell.com/simias/web/StoreDomainCertificate" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="GetRAList">
      <soap12:operation soapAction="http://novell.com/simias/web/GetRAList" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="GetRAListOnClient">
      <soap12:operation soapAction="http://novell.com/simias/web/GetRAListOnClient" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="GetRACertificate">
      <soap12:operation soapAction="http://novell.com/simias/web/GetRACertificate" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="GetRACertificateOnClient">
      <soap12:operation soapAction="http://novell.com/simias/web/GetRACertificateOnClient" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="GetPublicKey">
      <soap12:operation soapAction="http://novell.com/simias/web/GetPublicKey" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="GetDefaultPublicKey">
      <soap12:operation soapAction="http://novell.com/simias/web/GetDefaultPublicKey" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="GetDefaultRSAFromServer">
      <soap12:operation soapAction="http://novell.com/simias/web/GetDefaultRSAFromServer" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="GetDefaultRSAKey">
      <soap12:operation soapAction="http://novell.com/simias/web/GetDefaultRSAKey" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="StoreRACertificate">
      <soap12:operation soapAction="http://novell.com/simias/web/StoreRACertificate" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="GetInvalidSyncFilenameChars">
      <soap12:operation soapAction="http://novell.com/simias/web/GetInvalidSyncFilenameChars" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="SetDomainHostAddress">
      <soap12:operation soapAction="http://novell.com/simias/web/SetDomainHostAddress" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="SetProxyAddress">
      <soap12:operation soapAction="http://novell.com/simias/web/SetProxyAddress" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="CanShareService">
      <soap12:operation soapAction="http://novell.com/simias/web/CanShareService" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="StopSimiasProcess">
      <soap12:operation soapAction="http://novell.com/simias/web/StopSimiasProcess" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="AddSimiasReference">
      <soap12:operation soapAction="http://novell.com/simias/web/AddSimiasReference" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="RemoveSimiasReference">
      <soap12:operation soapAction="http://novell.com/simias/web/RemoveSimiasReference" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="ServerSetDefaultAccount">
      <soap12:operation soapAction="http://novell.com/simias/web/ServerSetDefaultAccount" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="ServerGetDefaultiFolder">
      <soap12:operation soapAction="http://novell.com/simias/web/ServerGetDefaultiFolder" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="GetGroupsiFolderLimitPolicy">
      <soap12:operation soapAction="http://novell.com/simias/web/GetGroupsiFolderLimitPolicy" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="IsTransferAllowed">
      <soap12:operation soapAction="http://novell.com/simias/web/IsTransferAllowed" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="GetGroupsSharingPolicy">
      <soap12:operation soapAction="http://novell.com/simias/web/GetGroupsSharingPolicy" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="GetGroupsSecurityPolicy">
      <soap12:operation soapAction="http://novell.com/simias/web/GetGroupsSecurityPolicy" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="GetEffectiveSyncPolicy">
      <soap12:operation soapAction="http://novell.com/simias/web/GetEffectiveSyncPolicy" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="ServerSetPassPhrase">
      <soap12:operation soapAction="http://novell.com/simias/web/ServerSetPassPhrase" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="ServerGetEncrypPassKey">
      <soap12:operation soapAction="http://novell.com/simias/web/ServerGetEncrypPassKey" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="ServerGetPassKeyHash">
      <soap12:operation soapAction="http://novell.com/simias/web/ServerGetPassKeyHash" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="UpdateUserMoveState">
      <soap12:operation soapAction="http://novell.com/simias/web/UpdateUserMoveState" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="UpdateHomeServer">
      <soap12:operation soapAction="http://novell.com/simias/web/UpdateHomeServer" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="DownloadiFolder">
      <soap12:operation soapAction="http://novell.com/simias/web/DownloadiFolder" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="UpdateLocalProperties">
      <soap12:operation soapAction="http://novell.com/simias/web/UpdateLocalProperties" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="DisableUser">
      <soap12:operation soapAction="http://novell.com/simias/web/DisableUser" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="SetOnMasterEncryptionBlobFlag">
      <soap12:operation soapAction="http://novell.com/simias/web/SetOnMasterEncryptionBlobFlag" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="CommitDomainMember">
      <soap12:operation soapAction="http://novell.com/simias/web/CommitDomainMember" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="ServerGetCollectionHashKey">
      <soap12:operation soapAction="http://novell.com/simias/web/ServerGetCollectionHashKey" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="GetiFolderCryptoKeys">
      <soap12:operation soapAction="http://novell.com/simias/web/GetiFolderCryptoKeys" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="SetiFolderCryptoKeys">
      <soap12:operation soapAction="http://novell.com/simias/web/SetiFolderCryptoKeys" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="ExportiFoldersCryptoKeys">
      <soap12:operation soapAction="http://novell.com/simias/web/ExportiFoldersCryptoKeys" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="ImportiFoldersCryptoKeys">
      <soap12:operation soapAction="http://novell.com/simias/web/ImportiFoldersCryptoKeys" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="ExportiFoldersCryptoKeysToDoc">
      <soap12:operation soapAction="http://novell.com/simias/web/ExportiFoldersCryptoKeysToDoc" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="RecoverKeys">
      <soap12:operation soapAction="http://novell.com/simias/web/RecoverKeys" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="ImportiFoldersCryptoKeysFromDoc">
      <soap12:operation soapAction="http://novell.com/simias/web/ImportiFoldersCryptoKeysFromDoc" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="ExportRecoverImport">
      <soap12:operation soapAction="http://novell.com/simias/web/ExportRecoverImport" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="SetPassPhrase">
      <soap12:operation soapAction="http://novell.com/simias/web/SetPassPhrase" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="DefaultAccount">
      <soap12:operation soapAction="http://novell.com/simias/web/DefaultAccount" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="GetDefaultiFolder">
      <soap12:operation soapAction="http://novell.com/simias/web/GetDefaultiFolder" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="ReSetPassPhrase">
      <soap12:operation soapAction="http://novell.com/simias/web/ReSetPassPhrase" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="ValidatePassPhrase">
      <soap12:operation soapAction="http://novell.com/simias/web/ValidatePassPhrase" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="IsPassPhraseSet">
      <soap12:operation soapAction="http://novell.com/simias/web/IsPassPhraseSet" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="GetSimiasDataPath">
      <soap12:operation soapAction="http://novell.com/simias/web/GetSimiasDataPath" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="GetSimiasProcessID">
      <soap12:operation soapAction="http://novell.com/simias/web/GetSimiasProcessID" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
  </binding>
  <binding name="Simias Web ServiceHttpGet" type="s0:Simias Web ServiceHttpGet">
    <http:binding verb="GET"/>
    <operation name="PingSimias">
      <http:operation location="/PingSimias"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output/>
    </operation>
    <operation name="AddMemberToDomain">
      <http:operation location="/AddMemberToDomain"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output/>
    </operation>
    <operation name="RemoveMemberFromDomain">
      <http:operation location="/RemoveMemberFromDomain"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output/>
    </operation>
    <operation name="FindCloseMembers">
      <http:operation location="/FindCloseMembers"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output/>
    </operation>
    <operation name="GetSimiasInformation">
      <http:operation location="/GetSimiasInformation"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="GetDomainInformation">
      <http:operation location="/GetDomainInformation"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="GetDomains">
      <http:operation location="/GetDomains"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="LoginToRemoteDomain">
      <http:operation location="/LoginToRemoteDomain"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="LogoutFromRemoteDomain">
      <http:operation location="/LogoutFromRemoteDomain"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="DisableDomainAutoLogin">
      <http:operation location="/DisableDomainAutoLogin"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output/>
    </operation>
    <operation name="IsDomainActive">
      <http:operation location="/IsDomainActive"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="SetDomainActive">
      <http:operation location="/SetDomainActive"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="SetDomainInactive">
      <http:operation location="/SetDomainInactive"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="ValidCredentials">
      <http:operation location="/ValidCredentials"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="SetDomainCredentials">
      <http:operation location="/SetDomainCredentials"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output/>
    </operation>
    <operation name="SetHostAddress">
      <http:operation location="/SetHostAddress"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output/>
    </operation>
    <operation name="StorePassPhrase">
      <http:operation location="/StorePassPhrase"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output/>
    </operation>
    <operation name="GetPassPhrase">
      <http:operation location="/GetPassPhrase"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="GetRememberOption">
      <http:operation location="/GetRememberOption"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="ConnectToDomain">
      <http:operation location="/ConnectToDomain"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="LeaveDomain">
      <http:operation location="/LeaveDomain"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output/>
    </operation>
    <operation name="RemoveCertFromTable">
      <http:operation location="/RemoveCertFromTable"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output/>
    </operation>
    <operation name="SetDefaultDomain">
      <http:operation location="/SetDefaultDomain"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output/>
    </operation>
    <operation name="GetDefaultDomainID">
      <http:operation location="/GetDefaultDomainID"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="GetCertificate">
      <http:operation location="/GetCertificate"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="StoreCertificate">
      <http:operation location="/StoreCertificate"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output/>
    </operation>
    <operation name="StoreDomainCertificate">
      <http:operation location="/StoreDomainCertificate"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output/>
    </operation>
    <operation name="GetRAList">
      <http:operation location="/GetRAList"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="GetRAListOnClient">
      <http:operation location="/GetRAListOnClient"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="GetRACertificate">
      <http:operation location="/GetRACertificate"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="GetRACertificateOnClient">
      <http:operation location="/GetRACertificateOnClient"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="GetPublicKey">
      <http:operation location="/GetPublicKey"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="GetDefaultPublicKey">
      <http:operation location="/GetDefaultPublicKey"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="GetDefaultRSAFromServer">
      <http:operation location="/GetDefaultRSAFromServer"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="GetDefaultRSAKey">
      <http:operation location="/GetDefaultRSAKey"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="StoreRACertificate">
      <http:operation location="/StoreRACertificate"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output/>
    </operation>
    <operation name="GetInvalidSyncFilenameChars">
      <http:operation location="/GetInvalidSyncFilenameChars"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="SetDomainHostAddress">
      <http:operation location="/SetDomainHostAddress"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="SetProxyAddress">
      <http:operation location="/SetProxyAddress"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="CanShareService">
      <http:operation location="/CanShareService"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="StopSimiasProcess">
      <http:operation location="/StopSimiasProcess"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output/>
    </operation>
    <operation name="AddSimiasReference">
      <http:operation location="/AddSimiasReference"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="RemoveSimiasReference">
      <http:operation location="/RemoveSimiasReference"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="ServerSetDefaultAccount">
      <http:operation location="/ServerSetDefaultAccount"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="ServerGetDefaultiFolder">
      <http:operation location="/ServerGetDefaultiFolder"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="GetGroupsiFolderLimitPolicy">
      <http:operation location="/GetGroupsiFolderLimitPolicy"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="IsTransferAllowed">
      <http:operation location="/IsTransferAllowed"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="GetGroupsSharingPolicy">
      <http:operation location="/GetGroupsSharingPolicy"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="GetGroupsSecurityPolicy">
      <http:operation location="/GetGroupsSecurityPolicy"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="GetEffectiveSyncPolicy">
      <http:operation location="/GetEffectiveSyncPolicy"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="ServerSetPassPhrase">
      <http:operation location="/ServerSetPassPhrase"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="ServerGetEncrypPassKey">
      <http:operation location="/ServerGetEncrypPassKey"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="ServerGetPassKeyHash">
      <http:operation location="/ServerGetPassKeyHash"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="UpdateUserMoveState">
      <http:operation location="/UpdateUserMoveState"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="UpdateHomeServer">
      <http:operation location="/UpdateHomeServer"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="DownloadiFolder">
      <http:operation location="/DownloadiFolder"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="UpdateLocalProperties">
      <http:operation location="/UpdateLocalProperties"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="DisableUser">
      <http:operation location="/DisableUser"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="SetOnMasterEncryptionBlobFlag">
      <http:operation location="/SetOnMasterEncryptionBlobFlag"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output/>
    </operation>
    <operation name="ServerGetCollectionHashKey">
      <http:operation location="/ServerGetCollectionHashKey"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="GetiFolderCryptoKeys">
      <http:operation location="/GetiFolderCryptoKeys"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="ExportiFoldersCryptoKeys">
      <http:operation location="/ExportiFoldersCryptoKeys"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output/>
    </operation>
    <operation name="ImportiFoldersCryptoKeys">
      <http:operation location="/ImportiFoldersCryptoKeys"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output/>
    </operation>
    <operation name="ExportRecoverImport">
      <http:operation location="/ExportRecoverImport"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output/>
    </operation>
    <operation name="SetPassPhrase">
      <http:operation location="/SetPassPhrase"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="DefaultAccount">
      <http:operation location="/DefaultAccount"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="GetDefaultiFolder">
      <http:operation location="/GetDefaultiFolder"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="ReSetPassPhrase">
      <http:operation location="/ReSetPassPhrase"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="ValidatePassPhrase">
      <http:operation location="/ValidatePassPhrase"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="IsPassPhraseSet">
      <http:operation location="/IsPassPhraseSet"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="GetSimiasDataPath">
      <http:operation location="/GetSimiasDataPath"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="GetSimiasProcessID">
      <http:operation location="/GetSimiasProcessID"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
  </binding>
  <binding name="Simias Web ServiceHttpPost" type="s0:Simias Web ServiceHttpPost">
    <http:binding verb="POST"/>
    <operation name="PingSimias">
      <http:operation location="/PingSimias"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output/>
    </operation>
    <operation name="AddMemberToDomain">
      <http:operation location="/AddMemberToDomain"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output/>
    </operation>
    <operation name="RemoveMemberFromDomain">
      <http:operation location="/RemoveMemberFromDomain"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output/>
    </operation>
    <operation name="FindCloseMembers">
      <http:operation location="/FindCloseMembers"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output/>
    </operation>
    <operation name="GetSimiasInformation">
      <http:operation location="/GetSimiasInformation"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="GetDomainInformation">
      <http:operation location="/GetDomainInformation"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="GetDomains">
      <http:operation location="/GetDomains"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="LoginToRemoteDomain">
      <http:operation location="/LoginToRemoteDomain"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="LogoutFromRemoteDomain">
      <http:operation location="/LogoutFromRemoteDomain"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="DisableDomainAutoLogin">
      <http:operation location="/DisableDomainAutoLogin"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output/>
    </operation>
    <operation name="IsDomainActive">
      <http:operation location="/IsDomainActive"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="SetDomainActive">
      <http:operation location="/SetDomainActive"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="SetDomainInactive">
      <http:operation location="/SetDomainInactive"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="ValidCredentials">
      <http:operation location="/ValidCredentials"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="SetDomainCredentials">
      <http:operation location="/SetDomainCredentials"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output/>
    </operation>
    <operation name="SetHostAddress">
      <http:operation location="/SetHostAddress"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output/>
    </operation>
    <operation name="StorePassPhrase">
      <http:operation location="/StorePassPhrase"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output/>
    </operation>
    <operation name="GetPassPhrase">
      <http:operation location="/GetPassPhrase"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="GetRememberOption">
      <http:operation location="/GetRememberOption"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="ConnectToDomain">
      <http:operation location="/ConnectToDomain"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="LeaveDomain">
      <http:operation location="/LeaveDomain"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output/>
    </operation>
    <operation name="RemoveCertFromTable">
      <http:operation location="/RemoveCertFromTable"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output/>
    </operation>
    <operation name="SetDefaultDomain">
      <http:operation location="/SetDefaultDomain"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output/>
    </operation>
    <operation name="GetDefaultDomainID">
      <http:operation location="/GetDefaultDomainID"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="GetCertificate">
      <http:operation location="/GetCertificate"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="StoreCertificate">
      <http:operation location="/StoreCertificate"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output/>
    </operation>
    <operation name="StoreDomainCertificate">
      <http:operation location="/StoreDomainCertificate"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output/>
    </operation>
    <operation name="GetRAList">
      <http:operation location="/GetRAList"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="GetRAListOnClient">
      <http:operation location="/GetRAListOnClient"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="GetRACertificate">
      <http:operation location="/GetRACertificate"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="GetRACertificateOnClient">
      <http:operation location="/GetRACertificateOnClient"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="GetPublicKey">
      <http:operation location="/GetPublicKey"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="GetDefaultPublicKey">
      <http:operation location="/GetDefaultPublicKey"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="GetDefaultRSAFromServer">
      <http:operation location="/GetDefaultRSAFromServer"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="GetDefaultRSAKey">
      <http:operation location="/GetDefaultRSAKey"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="StoreRACertificate">
      <http:operation location="/StoreRACertificate"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output/>
    </operation>
    <operation name="GetInvalidSyncFilenameChars">
      <http:operation location="/GetInvalidSyncFilenameChars"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="SetDomainHostAddress">
      <http:operation location="/SetDomainHostAddress"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="SetProxyAddress">
      <http:operation location="/SetProxyAddress"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="CanShareService">
      <http:operation location="/CanShareService"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="StopSimiasProcess">
      <http:operation location="/StopSimiasProcess"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output/>
    </operation>
    <operation name="AddSimiasReference">
      <http:operation location="/AddSimiasReference"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="RemoveSimiasReference">
      <http:operation location="/RemoveSimiasReference"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="ServerSetDefaultAccount">
      <http:operation location="/ServerSetDefaultAccount"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="ServerGetDefaultiFolder">
      <http:operation location="/ServerGetDefaultiFolder"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="GetGroupsiFolderLimitPolicy">
      <http:operation location="/GetGroupsiFolderLimitPolicy"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="IsTransferAllowed">
      <http:operation location="/IsTransferAllowed"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="GetGroupsSharingPolicy">
      <http:operation location="/GetGroupsSharingPolicy"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="GetGroupsSecurityPolicy">
      <http:operation location="/GetGroupsSecurityPolicy"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="GetEffectiveSyncPolicy">
      <http:operation location="/GetEffectiveSyncPolicy"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="ServerSetPassPhrase">
      <http:operation location="/ServerSetPassPhrase"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="ServerGetEncrypPassKey">
      <http:operation location="/ServerGetEncrypPassKey"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="ServerGetPassKeyHash">
      <http:operation location="/ServerGetPassKeyHash"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="UpdateUserMoveState">
      <http:operation location="/UpdateUserMoveState"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="UpdateHomeServer">
      <http:operation location="/UpdateHomeServer"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="DownloadiFolder">
      <http:operation location="/DownloadiFolder"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="UpdateLocalProperties">
      <http:operation location="/UpdateLocalProperties"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="DisableUser">
      <http:operation location="/DisableUser"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="SetOnMasterEncryptionBlobFlag">
      <http:operation location="/SetOnMasterEncryptionBlobFlag"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output/>
    </operation>
    <operation name="ServerGetCollectionHashKey">
      <http:operation location="/ServerGetCollectionHashKey"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="GetiFolderCryptoKeys">
      <http:operation location="/GetiFolderCryptoKeys"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="ExportiFoldersCryptoKeys">
      <http:operation location="/ExportiFoldersCryptoKeys"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output/>
    </operation>
    <operation name="ImportiFoldersCryptoKeys">
      <http:operation location="/ImportiFoldersCryptoKeys"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output/>
    </operation>
    <operation name="ExportRecoverImport">
      <http:operation location="/ExportRecoverImport"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output/>
    </operation>
    <operation name="SetPassPhrase">
      <http:operation location="/SetPassPhrase"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="DefaultAccount">
      <http:operation location="/DefaultAccount"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="GetDefaultiFolder">
      <http:operation location="/GetDefaultiFolder"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="ReSetPassPhrase">
      <http:operation location="/ReSetPassPhrase"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="ValidatePassPhrase">
      <http:operation location="/ValidatePassPhrase"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="IsPassPhraseSet">
      <http:operation location="/IsPassPhraseSet"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="GetSimiasDataPath">
      <http:operation location="/GetSimiasDataPath"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="GetSimiasProcessID">
      <http:operation location="/GetSimiasProcessID"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
  </binding>
  <service name="Simias Web Service">
    <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Web Service providing access to Simias</wsdl:documentation>
    <port name="Simias Web ServiceSoap" binding="s0:Simias Web ServiceSoap">
      <soap:address location="http://127.0.0.1/simias10/Simias.asmx"/>
    </port>
    <port name="Simias Web ServiceSoap12" binding="s0:Simias Web ServiceSoap12">
      <soap12:address location="http://127.0.0.1/simias10/Simias.asmx"/>
    </port>
    <port name="Simias Web ServiceHttpGet" binding="s0:Simias Web ServiceHttpGet">
      <http:address location="http://127.0.0.1/simias10/Simias.asmx"/>
    </port>
    <port name="Simias Web ServiceHttpPost" binding="s0:Simias Web ServiceHttpPost">
      <http:address location="http://127.0.0.1/simias10/Simias.asmx"/>
    </port>
  </service>
</definitions>