#######################################################################
#  $RCSfile$
#
#  Copyright (C) 2004 Novell, Inc.
#
#  This program is free software; you can redistribute it and/or
#  modify it under the terms of the GNU General Public
#  License as published by the Free Software Foundation; either
#  version 2 of the License, or (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
#  General Public License for more details.
#
#  You should have received a copy of the GNU General Public
#  License along with this program; if not, write to the Free
#  Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
#
#  Author: Paul Thomas <pthomas@novell.com>
#
#######################################################################
srcdir = .
top_srcdir = ../..

BUILDNUM = $(shell expr `date +%G%j` - 2000000)
pkgdatadir = $(datadir)/simias
pkglibdir = $(libdir)/simias
pkgincludedir = $(includedir)/simias
top_builddir = ../..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-cygwin
host_triplet = i686-pc-cygwin
target_triplet = i686-pc-cygwin
LIBOBJDIR =
subdir = package/windows
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES =
SOURCES =
DIST_SOURCES =
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/srinidhi/simias/missing --run aclocal-1.9
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /home/srinidhi/simias/missing --run tar
AR = ar
AUTOCONF = ${SHELL} /home/srinidhi/simias/missing --run autoconf
AUTOHEADER = ${SHELL} /home/srinidhi/simias/missing --run autoheader
AUTOMAKE = ${SHELL} /home/srinidhi/simias/missing --run automake-1.9
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CDEF = -D
CFLAGS = -MD -O2 -DNDEBUG -nologo -W3 -DWIN32 -D_WINDOWS -DWINDOWS -DPACKAGE=$(PACKAGE) -DVERSION=$(VERSION)
CINC = -I
CLIENT_PKG_CONFIG_CONFLICTS = 
CLIENT_PKG_CONFIG_LIBS = /r:SimiasClient.dll
CLIENT_PKG_CONFIG_REQUIRES = 
COMMON_CLEAN_FILES = *.dbg *.pdb */*.pdb *.doc.xml */*.doc.xml *.test.xml */*.test.xml
COMMON_DISTCLEAN_FILES = *.suo */*.suo *.csproj.user */*.csproj.user bin obj */bin */obj
COMMON_MAINTAINER_CLEAN_FILES = Makefile.in
COUT = -Fo
CPP = gcc -E
CPPFLAGS = 
CSC = csc
CSCFLAGS = /optimize+ /d:WINDOWS /d:DOTNET /warn:4 /d:TRACE /nologo
CSC_EXEFLAG = /target:exe
CSC_LIBFLAG = /target:library
CSC_WINEXEFLAG = /target:winexe
CXX = cl -c
CXXCPP = cl -c -E
CXXDEPMODE = depmode=none
CXXFLAGS = -MD -O2 -DNDEBUG -nologo -GX -W3 -DWIN32 -D_WINDOWS -DWINDOWS -DPACKAGE=$(PACKAGE) -DVERSION=$(VERSION)
CYGPATH_W = cygpath -w
DARWIN_FALSE = 
DARWIN_TRUE = #
DEBUG_FALSE = 
DEBUG_TRUE = #
DEF = -def:
DEFS = -DPACKAGE_NAME=\"\" -DPACKAGE_TARNAME=\"\" -DPACKAGE_VERSION=\"\" -DPACKAGE_STRING=\"\" -DPACKAGE_BUGREPORT=\"\" -DPACKAGE=\"simias\" -DVERSION=\"1.8.2\" -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DHAVE_DLFCN_H=1
DEPDIR = .deps
DEVENV_CONFIGURATION = Release
DOCDIR = $(top_srcdir)/src/doc
DOTNET_FALSE = #
DOTNET_TRUE = 
ECHO = echo
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /usr/bin/grep -E
EMPTY = 
EXEEXT = .exe
F77 = 
FFLAGS = 
GACD_MONO_WEBSERVER_FALSE = 
GACD_MONO_WEBSERVER_TRUE = #
GACINSTALL = gacutil /i
GREP = /usr/bin/grep
GSOAP_PATH = $(top_srcdir)/tools/gsoap/WIN32-2.7
HAS_SIMIASCLIENT_KEYFILE_FALSE = 
HAS_SIMIASCLIENT_KEYFILE_TRUE = #
ICON_EXT = .ico
ICON_FLAG = /win32icon:
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_EXE_OPTS = 
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
LD = link
LDFLAGS = -nologo -machine:X86
LDINC = -libpath:
LDOUT = -out:
LIB64 = lib
LIBFLAIM_CFLAGS = 
LIBFLAIM_LIBS = 
LIBFLAIM_PREFIX = 
LIBOBJS = 
LIBS = kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib rpcrt4.lib ws2_32.lib imagehlp.lib
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIB_PRE = 
LINUX_FALSE = 
LINUX_TRUE = #
LN_S = ln -s
LOG4NET_DIR = 
LTLIBOBJS = 
MAINT = 
MAINTAINER_MODE_FALSE = #
MAINTAINER_MODE_TRUE = 
MAKEINFO = ${SHELL} /home/srinidhi/simias/missing --run makeinfo
MAKE_DOC_FILE_FALSE = 
MAKE_DOC_FILE_TRUE = #
MODMONO_CONFPATH = /etc/apache2/mod_mono.conf
MONO = 
MONO_FALSE = 
MONO_PATH = 
MONO_TRUE = #
MONO_WEBSERVER = no
NDOC_CMD = 
NDOC_FALSE = 
NDOC_TRUE = #
NOVELL_SECURITY_DIR = $(top_srcdir)/external/NS/net
NUNIT = nunit-console.exe
NUNIT_FLAGS =  /nologo
NUNIT_LIBPATH = $(top_srcdir)/tools/NUnit/net/bin
OBJEXT = o
OBJ_EXT = .obj
PACKAGE = simias
PACKAGE_BUGREPORT = 
PACKAGE_NAME = 
PACKAGE_STRING = 
PACKAGE_TARNAME = 
PACKAGE_VERSION = 
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_CONFLICTS = 
PKG_CONFIG_LIBS = /r:SimiasLib.dll
PKG_CONFIG_PATH = /opt/novell/ifolder3//./pkgconfig
PKG_CONFIG_REQUIRES = 
RANLIB = ranlib
REPORT_DIR = $(shell cygpath --windows $(DESTDIR)$(webbindir) | sed s,\\\\,/,g)
REPORT_EXE = $(top_srcdir)/tools/Report/Report.exe
RESGEN = resgen
SED = /usr/bin/sed
SEP = $(EMPTY)\\$(EMPTY)
SET_MAKE = 
SHARED_LIB_EXT = .dll
SHARED_LIB_FLAG = -dll
SHELL = /bin/sh
SIMIASCLIENT_KEYFILE = 
SIMIAS_AS_CLIENT_FALSE = #
SIMIAS_AS_CLIENT_TRUE = 
SIMIAS_OS = windows
SPACE = $(EMPTY) $(EMPTY)
SRCDIR = $(top_srcdir)/src
STORELIB = sqlite.dll
STORELIB_PATH = $(top_srcdir)/external/sqlite/w32
STRIP = strip
SYSTEM_XML = System.XML.dll
StoreProviderAssembly = SimiasLib.dll
StoreProviderType = Simias.Storage.Provider.Flaim.FlaimProvider
TOOLDIR = $(top_srcdir)/tools
UUID_CFLAGS = 
UUID_LIBS = 
VERSION = 1.8.3.$(BUILDNUM).1
WINDOWS_FALSE = #
WINDOWS_TRUE = 
XML2_CFLAGS = `xml2-config --cflags`
XML2_CONFIG = /usr/bin/xml2-config
XML2_LIBS = `xml2-config --libs`
ac_ct_CC = gcc
ac_ct_CXX = 
ac_ct_F77 = 
admindir = /opt/novell/ifolder3//admin
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__fastdepCXX_FALSE = 
am__fastdepCXX_TRUE = #
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = /opt/novell/ifolder3/
bootstrapdir = /opt/novell/ifolder3//etc/simias/bill
build = i686-pc-cygwin
build_alias = 
build_cpu = i686
build_os = cygwin
build_vendor = pc
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE}
dvidir = ${docdir}
exec_prefix = /opt/novell/ifolder3/
host = i686-pc-cygwin
host_alias = 
host_cpu = i686
host_os = cygwin
host_vendor = pc
htmldir = ${docdir}
includedir = /opt/novell/ifolder3//include
infodir = ${datarootdir}/info
install_sh = /home/srinidhi/simias/install-sh
libdir = /opt/novell/ifolder3/
libexecdir = /opt/novell/ifolder3/
localedir = ${datarootdir}/locale
localstatedir = /opt/novell/ifolder3//var
mandir = ${datarootdir}/man
mappingpath = C:\cygwin\opt\novell\ifolder3\web\bin\Simias.exe
mkdir_p = mkdir -p --
modulesdir = /opt/novell/ifolder3//web/modules
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /opt/novell/ifolder3/
program_transform_name = s,x,x,
psdir = ${docdir}
runasclient = TRUE
sbindir = /opt/novell/ifolder3/
sharedstatedir = /opt/novell/ifolder3//com
simiasconfdir = /opt/novell/ifolder3//etc/simias
simiasdatadir = C:/Documents and Settings/srinidhi/Application Data/simias
simiaslogdir = ${APPDATA}/simias
sysconfdir = /opt/novell/ifolder3//etc
target = i686-pc-cygwin
target_alias = 
target_cpu = i686
target_os = cygwin
target_vendor = pc
webaccessdir = /opt/novell/ifolder3//webaccess
webbindir = /opt/novell/ifolder3//web/bin
webdir = /opt/novell/ifolder3//web

EXTRA_DIST = $(srcdir)/$(PACKAGE)-msi.ism $(srcdir)/$(PACKAGE)-msm.ism $(srcdir)/$(PACKAGE)-sdk-msm.ism

CUR_DIR := $(shell pwd)

OUT_DIR := $(shell cygpath --windows $(CUR_DIR))
MERGE_MODULES_WIN  := $(shell cygpath --windows "$(USERPROFILE)\My Documents\My InstallShield DevStudio Projects\MergeModules")
MERGE_MODULES_UNIX := $(shell cygpath --unix "$(USERPROFILE)\My Documents\My InstallShield DevStudio Projects\MergeModules")
ISSABLD_DIR := $(shell cygpath --windows `dirname "$(ISSABLD)"`)

RELEASE = 1

#DEBUG_OPTION = --enable-debug
#MSI_FILE     = $(PACKAGE)_debug-$(VERSION)-$(RELEASE)-setup.exe
#MSM_FILE     = $(PACKAGE)_debug-$(VERSION)-$(RELEASE).msm
#SDK_MSM_FILE = $(PACKAGE)_debug-sdk-$(VERSION)-$(RELEASE).msm
MSI_FILE     = $(PACKAGE)-$(VERSION)-$(RELEASE)-setup.exe
MSM_FILE     = $(PACKAGE)-$(VERSION)-$(RELEASE)-x64.msm
SDK_MSM_FILE = $(PACKAGE)-sdk-$(VERSION)-$(RELEASE).msm

MSI = $(PACKAGE)-msi
MSM = $(PACKAGE)-msm-x64
SDK_MSM = $(PACKAGE)-sdk-msm

MSI_LOG_FILE     = issabld-$(MSI).log
MSM_LOG_FILE     = issabld-$(MSM)-x64.log
SDK_MSM_LOG_FILE = issabld-$(SDK_MSM)-msm.log

ISSABLD_CONFIG  = web
ISSABLD_RELEASE = release

DISK1         = $(ISSABLD_CONFIG)/$(ISSABLD_RELEASE)/DiskImages/DISK1
MSI_DISK1     = $(MSI)/$(DISK1)/setup.exe
MSM_DISK1     = $(MSM)/$(DISK1)/$(subst -,_,$(PACKAGE)).msm
SDK_MSM_DISK1 = $(SDK_MSM)/$(DISK1)/$(subst -,_,$(PACKAGE))_sdk.msm

all: $(MSM_FILE)

$(MSI_FILE): issabld $(MSM_FILE) $(MSI).ism
	@rm -f $@ "$(MSI_DISK1)" "$(MSI_LOG_FILE)"
	@CMD='"$(ISSABLD)" -p "$(MSI).ism" -o "$(ISSABLD_DIR),$(MERGE_MODULES_WIN)"'; \
		echo $$CMD; \
		eval $$CMD > "$(MSI_LOG_FILE)" 2>&1; \
		if test -f "$(MSI_DISK1)"; then \
			ln "$(MSI_DISK1)" $@; \
			mkdir -p "/cygdrive/c/temp/"; \
			cp -f "$(MSI_DISK1)" "/cygdrive/c/temp/"; \
		else \
			cat "$(MSI_LOG_FILE)"; \
			echo FAILED; exit 1; \
		fi
	@test "x" = "x$(INSTALL_PKGS)" || \
		CMD='cp -f $@ "$(INSTALL_PKGS)"'; \
		echo $$CMD; \
		eval $$CMD 
#	@mkdir -p "/cygdrive/c/temp/"; \
#      @CMD='cp -f "$(MSI_DISK1)" "/cygdrive/c/temp/"'; \
#		echo $$CMD; \
#		eval $$CMD

$(MSM_FILE): issabld $(PACKAGE)-install $(MSM).ism
	@rm -f $@ "$(MSM_DISK1)" "$(MSM_LOG_FILE)"
	@CMD='"$(ISSABLD)" -p "$(MSM).ism"'; \
		echo $$CMD; \
		eval $$CMD > "$(MSM_LOG_FILE)" 2>&1; \
		if test -f "$(MSM_DISK1)"; then \
			ln "$(MSM_DISK1)" $@; \
		else \
			cat "$(MSM_LOG_FILE)"; \
			echo FAILED; exit 1; \
		fi
	@mkdir -p "$(MERGE_MODULES_UNIX)"; \
		CMD='cp -f "$(MSM_DISK1)" "$(MERGE_MODULES_UNIX)"'; \
		echo $$CMD; \
		eval $$CMD

$(SDK_MSM_FILE): issabld $(PACKAGE)-doc $(SDK_MSM).ism
	@rm -f $@ "$(SDK_MSM_DISK1)" "$(SDK_MSM_LOG_FILE)"
	@CMD='"$(ISSABLD)" -p "$(SDK_MSM).ism"'; \
		echo $$CMD; \
		eval $$CMD > "$(SDK_MSM_LOG_FILE)" 2>&1; \
		if test -f "$(SDK_MSM_DISK1)"; then \
			ln "$(SDK_MSM_DISK1)" $@; \
		else \
			cat "$(MSM_LOG_FILE)"; \
			echo FAILED; \
		fi
	@mkdir -p "$(MERGE_MODULES_UNIX)"; \
		CMD='cp -f "$(SDK_MSM_DISK1)" "$(MERGE_MODULES_UNIX)"'; \
		echo $$CMD; \
		eval $$CMD

.PHONY: issabld $(PACKAGE)-install $(PACKAGE) $(PACKAGE)-configure $(PACKAGE)-dist $(PACKAGE)-doc

issabld:
	@if test -z "$(ISSABLD)"; then \
		echo ""; \
		echo "ERROR: environment variable ISSABLD is not set"; \
		echo ""; \
		echo "NOTE:  InstallShield is used to build MSI/MSM packages."; \
		echo "       Set ISSABLD to location of IsSABld.exe."; \
		echo ""; \
		exit 1; \
	fi

$(PACKAGE)-install: $(PACKAGE)
	cp -r /cygdrive/c/iFolder_Stage/* MSI/INSTALL

$(PACKAGE): 
	rm -rf MSI
	mkdir MSI
	mkdir -p MSI/INSTALL

$(PACKAGE)-doc: $(PACKAGE)
	$(MAKE) -C $(top_srcdir)/doc all
	
clean-local:
	rm -rf $(COMMON_CLEAN_FILES)
	rm -rf *-setup.exe *.msi *.msm *.log
	rm -rf MSI $(MSI) $(MSM) $(SDK_MSM)

distclean-local:
	rm -rf $(COMMON_DISTCLEAN_FILES) $(PACKAGE).spec $(PACKAGE)-sdk.spec

maintainer-clean-local:
	rm -rf $(COMMON_MAINTAINER_CLEAN_FILES)
