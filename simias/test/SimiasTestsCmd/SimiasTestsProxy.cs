//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2032
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by wsdl, Version=1.1.4322.2032.
// 
using System.Diagnostics;
using System.Xml.Serialization;
using System;
using System.Web.Services.Protocols;
using System.ComponentModel;
using System.Web.Services;


/// <remarks/>
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name="ActionsSoap", Namespace="http://novell.com/simiastests/actions/")]
public class Actions : System.Web.Services.Protocols.SoapHttpClientProtocol {
    
    /// <remarks/>
    public Actions() {
        this.Url = "http://127.0.0.1:1913/simias10/banderso/SimiasTests.asmx";
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://novell.com/simiastests/actions/Ping", RequestNamespace="http://novell.com/simiastests/actions/", ResponseNamespace="http://novell.com/simiastests/actions/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public int Ping(int sleepFor) {
        object[] results = this.Invoke("Ping", new object[] {
                    sleepFor});
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginPing(int sleepFor, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("Ping", new object[] {
                    sleepFor}, callback, asyncState);
    }
    
    /// <remarks/>
    public int EndPing(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://novell.com/simiastests/actions/RemoteAuthentication", RequestNamespace="http://novell.com/simiastests/actions/", ResponseNamespace="http://novell.com/simiastests/actions/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public int RemoteAuthentication(bool preAuthenticate, string host, string user, string password) {
        object[] results = this.Invoke("RemoteAuthentication", new object[] {
                    preAuthenticate,
                    host,
                    user,
                    password});
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginRemoteAuthentication(bool preAuthenticate, string host, string user, string password, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("RemoteAuthentication", new object[] {
                    preAuthenticate,
                    host,
                    user,
                    password}, callback, asyncState);
    }
    
    /// <remarks/>
    public int EndRemoteAuthentication(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://novell.com/simiastests/actions/GetArray", RequestNamespace="http://novell.com/simiastests/actions/", ResponseNamespace="http://novell.com/simiastests/actions/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public char[] GetArray(int sizeToReturn, char charToReturn) {
        object[] results = this.Invoke("GetArray", new object[] {
                    sizeToReturn,
                    charToReturn});
        return ((char[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetArray(int sizeToReturn, char charToReturn, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetArray", new object[] {
                    sizeToReturn,
                    charToReturn}, callback, asyncState);
    }
    
    /// <remarks/>
    public char[] EndGetArray(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((char[])(results[0]));
    }
}
