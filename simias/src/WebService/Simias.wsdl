<?xml version="1.0" encoding="utf-8"?>
<wsdl:definitions xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:s="http://www.w3.org/2001/XMLSchema" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:tns="http://novell.com/simias/web/" xmlns:tm="http://microsoft.com/wsdl/mime/textMatching/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" targetNamespace="http://novell.com/simias/web/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">
  <wsdl:types>
    <s:schema elementFormDefault="qualified" targetNamespace="http://novell.com/simias/web/">
      <s:element name="AddMemberToDomain">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="DomainID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="MemberName" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="MemberID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="PublicKey" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="GivenName" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="FamilyName" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="AddMemberToDomainResponse">
        <s:complexType />
      </s:element>
      <s:element name="RemoveMemberFromDomain">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="DomainID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="MemberID" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="RemoveMemberFromDomainResponse">
        <s:complexType />
      </s:element>
      <s:element name="FindCloseMembers">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="domainID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="searchContext" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="FindCloseMembersResponse">
        <s:complexType />
      </s:element>
      <s:element name="FindFirstMembers">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="domainID" type="s:string" />
            <s:element minOccurs="1" maxOccurs="1" name="count" type="s:int" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:complexType name="MemberInfo">
        <s:sequence>
          <s:element minOccurs="0" maxOccurs="1" name="Name" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="ObjectID" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="UserID" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="GivenName" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="FamilyName" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="FullName" type="s:string" />
          <s:element minOccurs="1" maxOccurs="1" name="AccessRights" type="s:int" />
          <s:element minOccurs="1" maxOccurs="1" name="IsOwner" type="s:boolean" />
        </s:sequence>
      </s:complexType>
      <s:complexType name="ArrayOfMemberInfo">
        <s:sequence>
          <s:element minOccurs="0" maxOccurs="unbounded" name="MemberInfo" nillable="true" type="tns:MemberInfo" />
        </s:sequence>
      </s:complexType>
      <s:element name="FindFirstMembersResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="FindFirstMembersResult" type="s:boolean" />
            <s:element minOccurs="0" maxOccurs="1" name="searchContext" />
            <s:element minOccurs="0" maxOccurs="1" name="memberList" type="tns:ArrayOfMemberInfo" />
            <s:element minOccurs="1" maxOccurs="1" name="totalMembers" type="s:int" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="FindFirstSpecificMembers">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="domainID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="attributeName" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="searchString" type="s:string" />
            <s:element minOccurs="1" maxOccurs="1" name="operation" type="tns:SearchType" />
            <s:element minOccurs="1" maxOccurs="1" name="count" type="s:int" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:simpleType name="SearchType">
        <s:restriction base="s:string">
          <s:enumeration value="Equal" />
          <s:enumeration value="Not_Equal" />
          <s:enumeration value="Begins" />
          <s:enumeration value="Ends" />
          <s:enumeration value="Contains" />
          <s:enumeration value="Greater" />
          <s:enumeration value="Less" />
          <s:enumeration value="Greater_Equal" />
          <s:enumeration value="Less_Equal" />
          <s:enumeration value="Exists" />
          <s:enumeration value="CaseEqual" />
        </s:restriction>
      </s:simpleType>
      <s:element name="FindFirstSpecificMembersResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="FindFirstSpecificMembersResult" type="s:boolean" />
            <s:element minOccurs="0" maxOccurs="1" name="searchContext" />
            <s:element minOccurs="0" maxOccurs="1" name="memberList" type="tns:ArrayOfMemberInfo" />
            <s:element minOccurs="1" maxOccurs="1" name="totalMembers" type="s:int" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="FindNextMembers">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="domainID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="searchContext" />
            <s:element minOccurs="1" maxOccurs="1" name="count" type="s:int" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="FindNextMembersResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="FindNextMembersResult" type="s:boolean" />
            <s:element minOccurs="0" maxOccurs="1" name="searchContext" />
            <s:element minOccurs="0" maxOccurs="1" name="memberList" type="tns:ArrayOfMemberInfo" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="FindPreviousMembers">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="domainID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="searchContext" />
            <s:element minOccurs="1" maxOccurs="1" name="count" type="s:int" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="FindPreviousMembersResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="FindPreviousMembersResult" type="s:boolean" />
            <s:element minOccurs="0" maxOccurs="1" name="searchContext" />
            <s:element minOccurs="0" maxOccurs="1" name="memberList" type="tns:ArrayOfMemberInfo" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetSimiasInformation">
        <s:complexType />
      </s:element>
      <s:element name="GetSimiasInformationResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetSimiasInformationResult" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetDomainInformation">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="domainID" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:complexType name="DomainInformation">
        <s:sequence>
          <s:element minOccurs="1" maxOccurs="1" name="Type" type="tns:DomainType" />
          <s:element minOccurs="1" maxOccurs="1" name="Active" type="s:boolean" />
          <s:element minOccurs="0" maxOccurs="1" name="Name" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="Description" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="ID" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="MemberUserID" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="MemberName" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="RemoteUrl" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="POBoxID" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="Host" type="s:string" />
          <s:element minOccurs="1" maxOccurs="1" name="IsSlave" type="s:boolean" />
          <s:element minOccurs="1" maxOccurs="1" name="IsDefault" type="s:boolean" />
          <s:element minOccurs="1" maxOccurs="1" name="StatusCode" type="tns:StatusCodes" />
        </s:sequence>
      </s:complexType>
      <s:simpleType name="DomainType">
        <s:restriction base="s:string">
          <s:enumeration value="Master" />
          <s:enumeration value="Slave" />
          <s:enumeration value="Local" />
          <s:enumeration value="None" />
        </s:restriction>
      </s:simpleType>
      <s:simpleType name="StatusCodes">
        <s:restriction base="s:string">
          <s:enumeration value="Success" />
          <s:enumeration value="SuccessInGrace" />
          <s:enumeration value="UnknownUser" />
          <s:enumeration value="AmbiguousUser" />
          <s:enumeration value="InvalidCredentials" />
          <s:enumeration value="InvalidPassword" />
          <s:enumeration value="AccountDisabled" />
          <s:enumeration value="AccountLockout" />
          <s:enumeration value="UnknownDomain" />
          <s:enumeration value="InternalException" />
          <s:enumeration value="MethodNotSupported" />
          <s:enumeration value="Timeout" />
          <s:enumeration value="Unknown" />
        </s:restriction>
      </s:simpleType>
      <s:element name="GetDomainInformationResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetDomainInformationResult" type="tns:DomainInformation" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetDomains">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="onlySlaves" type="s:boolean" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:complexType name="ArrayOfDomainInformation">
        <s:sequence>
          <s:element minOccurs="0" maxOccurs="unbounded" name="DomainInformation" nillable="true" type="tns:DomainInformation" />
        </s:sequence>
      </s:complexType>
      <s:element name="GetDomainsResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetDomainsResult" type="tns:ArrayOfDomainInformation" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="LoginToRemoteDomain">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="domainID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="password" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:complexType name="Status">
        <s:sequence>
          <s:element minOccurs="1" maxOccurs="1" name="statusCode" type="tns:StatusCodes" />
          <s:element minOccurs="0" maxOccurs="1" name="DomainID" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="UserID" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="UserName" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="DistinguishedUserName" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="ExceptionMessage" type="s:string" />
          <s:element minOccurs="1" maxOccurs="1" name="TotalGraceLogins" type="s:int" />
          <s:element minOccurs="1" maxOccurs="1" name="RemainingGraceLogins" type="s:int" />
        </s:sequence>
      </s:complexType>
      <s:element name="LoginToRemoteDomainResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="LoginToRemoteDomainResult" type="tns:Status" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="LogoutFromRemoteDomain">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="domainID" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="LogoutFromRemoteDomainResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="LogoutFromRemoteDomainResult" type="tns:Status" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="IsDomainActive">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="domainID" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="IsDomainActiveResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="IsDomainActiveResult" type="s:boolean" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="SetDomainActive">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="domainID" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="SetDomainActiveResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="SetDomainActiveResult" type="s:int" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="SetDomainInactive">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="domainID" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="SetDomainInactiveResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="SetDomainInactiveResult" type="s:int" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ValidCredentials">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="domainID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="memberID" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ValidCredentialsResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="ValidCredentialsResult" type="s:boolean" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="SetDomainCredentials">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="domainID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="credentials" type="s:string" />
            <s:element minOccurs="1" maxOccurs="1" name="type" type="tns:CredentialType" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:simpleType name="CredentialType">
        <s:restriction base="s:string">
          <s:enumeration value="None" />
          <s:enumeration value="NotRequired" />
          <s:enumeration value="Basic" />
          <s:enumeration value="PPK" />
        </s:restriction>
      </s:simpleType>
      <s:element name="SetDomainCredentialsResponse">
        <s:complexType />
      </s:element>
      <s:element name="GetDomainCredentials">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="domainID" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetDomainCredentialsResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="GetDomainCredentialsResult" type="tns:CredentialType" />
            <s:element minOccurs="0" maxOccurs="1" name="userID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="credentials" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ConnectToDomain">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="UserName" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Password" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Host" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ConnectToDomainResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="ConnectToDomainResult" type="tns:DomainInformation" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="LeaveDomain">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="DomainID" type="s:string" />
            <s:element minOccurs="1" maxOccurs="1" name="LocalOnly" type="s:boolean" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="LeaveDomainResponse">
        <s:complexType />
      </s:element>
      <s:element name="SetDefaultDomain">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="domainID" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="SetDefaultDomainResponse">
        <s:complexType />
      </s:element>
      <s:element name="GetDefaultDomainID">
        <s:complexType />
      </s:element>
      <s:element name="GetDefaultDomainIDResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetDefaultDomainIDResult" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
    </s:schema>
  </wsdl:types>
  <wsdl:message name="AddMemberToDomainSoapIn">
    <wsdl:part name="parameters" element="tns:AddMemberToDomain" />
  </wsdl:message>
  <wsdl:message name="AddMemberToDomainSoapOut">
    <wsdl:part name="parameters" element="tns:AddMemberToDomainResponse" />
  </wsdl:message>
  <wsdl:message name="RemoveMemberFromDomainSoapIn">
    <wsdl:part name="parameters" element="tns:RemoveMemberFromDomain" />
  </wsdl:message>
  <wsdl:message name="RemoveMemberFromDomainSoapOut">
    <wsdl:part name="parameters" element="tns:RemoveMemberFromDomainResponse" />
  </wsdl:message>
  <wsdl:message name="FindCloseMembersSoapIn">
    <wsdl:part name="parameters" element="tns:FindCloseMembers" />
  </wsdl:message>
  <wsdl:message name="FindCloseMembersSoapOut">
    <wsdl:part name="parameters" element="tns:FindCloseMembersResponse" />
  </wsdl:message>
  <wsdl:message name="FindFirstMembersSoapIn">
    <wsdl:part name="parameters" element="tns:FindFirstMembers" />
  </wsdl:message>
  <wsdl:message name="FindFirstMembersSoapOut">
    <wsdl:part name="parameters" element="tns:FindFirstMembersResponse" />
  </wsdl:message>
  <wsdl:message name="FindFirstSpecificMembersSoapIn">
    <wsdl:part name="parameters" element="tns:FindFirstSpecificMembers" />
  </wsdl:message>
  <wsdl:message name="FindFirstSpecificMembersSoapOut">
    <wsdl:part name="parameters" element="tns:FindFirstSpecificMembersResponse" />
  </wsdl:message>
  <wsdl:message name="FindNextMembersSoapIn">
    <wsdl:part name="parameters" element="tns:FindNextMembers" />
  </wsdl:message>
  <wsdl:message name="FindNextMembersSoapOut">
    <wsdl:part name="parameters" element="tns:FindNextMembersResponse" />
  </wsdl:message>
  <wsdl:message name="FindPreviousMembersSoapIn">
    <wsdl:part name="parameters" element="tns:FindPreviousMembers" />
  </wsdl:message>
  <wsdl:message name="FindPreviousMembersSoapOut">
    <wsdl:part name="parameters" element="tns:FindPreviousMembersResponse" />
  </wsdl:message>
  <wsdl:message name="GetSimiasInformationSoapIn">
    <wsdl:part name="parameters" element="tns:GetSimiasInformation" />
  </wsdl:message>
  <wsdl:message name="GetSimiasInformationSoapOut">
    <wsdl:part name="parameters" element="tns:GetSimiasInformationResponse" />
  </wsdl:message>
  <wsdl:message name="GetDomainInformationSoapIn">
    <wsdl:part name="parameters" element="tns:GetDomainInformation" />
  </wsdl:message>
  <wsdl:message name="GetDomainInformationSoapOut">
    <wsdl:part name="parameters" element="tns:GetDomainInformationResponse" />
  </wsdl:message>
  <wsdl:message name="GetDomainsSoapIn">
    <wsdl:part name="parameters" element="tns:GetDomains" />
  </wsdl:message>
  <wsdl:message name="GetDomainsSoapOut">
    <wsdl:part name="parameters" element="tns:GetDomainsResponse" />
  </wsdl:message>
  <wsdl:message name="LoginToRemoteDomainSoapIn">
    <wsdl:part name="parameters" element="tns:LoginToRemoteDomain" />
  </wsdl:message>
  <wsdl:message name="LoginToRemoteDomainSoapOut">
    <wsdl:part name="parameters" element="tns:LoginToRemoteDomainResponse" />
  </wsdl:message>
  <wsdl:message name="LogoutFromRemoteDomainSoapIn">
    <wsdl:part name="parameters" element="tns:LogoutFromRemoteDomain" />
  </wsdl:message>
  <wsdl:message name="LogoutFromRemoteDomainSoapOut">
    <wsdl:part name="parameters" element="tns:LogoutFromRemoteDomainResponse" />
  </wsdl:message>
  <wsdl:message name="IsDomainActiveSoapIn">
    <wsdl:part name="parameters" element="tns:IsDomainActive" />
  </wsdl:message>
  <wsdl:message name="IsDomainActiveSoapOut">
    <wsdl:part name="parameters" element="tns:IsDomainActiveResponse" />
  </wsdl:message>
  <wsdl:message name="SetDomainActiveSoapIn">
    <wsdl:part name="parameters" element="tns:SetDomainActive" />
  </wsdl:message>
  <wsdl:message name="SetDomainActiveSoapOut">
    <wsdl:part name="parameters" element="tns:SetDomainActiveResponse" />
  </wsdl:message>
  <wsdl:message name="SetDomainInactiveSoapIn">
    <wsdl:part name="parameters" element="tns:SetDomainInactive" />
  </wsdl:message>
  <wsdl:message name="SetDomainInactiveSoapOut">
    <wsdl:part name="parameters" element="tns:SetDomainInactiveResponse" />
  </wsdl:message>
  <wsdl:message name="ValidCredentialsSoapIn">
    <wsdl:part name="parameters" element="tns:ValidCredentials" />
  </wsdl:message>
  <wsdl:message name="ValidCredentialsSoapOut">
    <wsdl:part name="parameters" element="tns:ValidCredentialsResponse" />
  </wsdl:message>
  <wsdl:message name="SetDomainCredentialsSoapIn">
    <wsdl:part name="parameters" element="tns:SetDomainCredentials" />
  </wsdl:message>
  <wsdl:message name="SetDomainCredentialsSoapOut">
    <wsdl:part name="parameters" element="tns:SetDomainCredentialsResponse" />
  </wsdl:message>
  <wsdl:message name="GetDomainCredentialsSoapIn">
    <wsdl:part name="parameters" element="tns:GetDomainCredentials" />
  </wsdl:message>
  <wsdl:message name="GetDomainCredentialsSoapOut">
    <wsdl:part name="parameters" element="tns:GetDomainCredentialsResponse" />
  </wsdl:message>
  <wsdl:message name="ConnectToDomainSoapIn">
    <wsdl:part name="parameters" element="tns:ConnectToDomain" />
  </wsdl:message>
  <wsdl:message name="ConnectToDomainSoapOut">
    <wsdl:part name="parameters" element="tns:ConnectToDomainResponse" />
  </wsdl:message>
  <wsdl:message name="LeaveDomainSoapIn">
    <wsdl:part name="parameters" element="tns:LeaveDomain" />
  </wsdl:message>
  <wsdl:message name="LeaveDomainSoapOut">
    <wsdl:part name="parameters" element="tns:LeaveDomainResponse" />
  </wsdl:message>
  <wsdl:message name="SetDefaultDomainSoapIn">
    <wsdl:part name="parameters" element="tns:SetDefaultDomain" />
  </wsdl:message>
  <wsdl:message name="SetDefaultDomainSoapOut">
    <wsdl:part name="parameters" element="tns:SetDefaultDomainResponse" />
  </wsdl:message>
  <wsdl:message name="GetDefaultDomainIDSoapIn">
    <wsdl:part name="parameters" element="tns:GetDefaultDomainID" />
  </wsdl:message>
  <wsdl:message name="GetDefaultDomainIDSoapOut">
    <wsdl:part name="parameters" element="tns:GetDefaultDomainIDResponse" />
  </wsdl:message>
  <wsdl:portType name="Simias_x0020_Web_x0020_ServiceSoap">
    <wsdl:operation name="AddMemberToDomain">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Add a member to the domain.</documentation>
      <wsdl:input message="tns:AddMemberToDomainSoapIn" />
      <wsdl:output message="tns:AddMemberToDomainSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="RemoveMemberFromDomain">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Remove a member from the domain.</documentation>
      <wsdl:input message="tns:RemoveMemberFromDomainSoapIn" />
      <wsdl:output message="tns:RemoveMemberFromDomainSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="FindCloseMembers">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Ends the search for the members in a specified domain.</documentation>
      <wsdl:input message="tns:FindCloseMembersSoapIn" />
      <wsdl:output message="tns:FindCloseMembersSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="FindFirstMembers">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Start the search for all of the members in a specified domain.</documentation>
      <wsdl:input message="tns:FindFirstMembersSoapIn" />
      <wsdl:output message="tns:FindFirstMembersSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="FindFirstSpecificMembers">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Start the search for specific members in a specified domain.</documentation>
      <wsdl:input message="tns:FindFirstSpecificMembersSoapIn" />
      <wsdl:output message="tns:FindFirstSpecificMembersSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="FindNextMembers">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Continues the search for the next members in a specified domain.</documentation>
      <wsdl:input message="tns:FindNextMembersSoapIn" />
      <wsdl:output message="tns:FindNextMembersSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="FindPreviousMembers">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Continues the search for the previous members in a specified domain.</documentation>
      <wsdl:input message="tns:FindPreviousMembersSoapIn" />
      <wsdl:output message="tns:FindPreviousMembersSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GetSimiasInformation">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">GetSimiasInformation</documentation>
      <wsdl:input message="tns:GetSimiasInformationSoapIn" />
      <wsdl:output message="tns:GetSimiasInformationSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GetDomainInformation">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">GetDomainInformation</documentation>
      <wsdl:input message="tns:GetDomainInformationSoapIn" />
      <wsdl:output message="tns:GetDomainInformationSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GetDomains">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Get a list of local domains</documentation>
      <wsdl:input message="tns:GetDomainsSoapIn" />
      <wsdl:output message="tns:GetDomainsSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="LoginToRemoteDomain">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Login or authenticate to a remote domain</documentation>
      <wsdl:input message="tns:LoginToRemoteDomainSoapIn" />
      <wsdl:output message="tns:LoginToRemoteDomainSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="LogoutFromRemoteDomain">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Logout from a remote domain</documentation>
      <wsdl:input message="tns:LogoutFromRemoteDomainSoapIn" />
      <wsdl:output message="tns:LogoutFromRemoteDomainSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="IsDomainActive">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">WebMethod to check if a domain is active</documentation>
      <wsdl:input message="tns:IsDomainActiveSoapIn" />
      <wsdl:output message="tns:IsDomainActiveSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="SetDomainActive">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">SetDomainActive - enables synchronization to the remote server</documentation>
      <wsdl:input message="tns:SetDomainActiveSoapIn" />
      <wsdl:output message="tns:SetDomainActiveSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="SetDomainInactive">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">SetDomainInactive - disables remote synchronization</documentation>
      <wsdl:input message="tns:SetDomainInactiveSoapIn" />
      <wsdl:output message="tns:SetDomainInactiveSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="ValidCredentials">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">ValidCredentials</documentation>
      <wsdl:input message="tns:ValidCredentialsSoapIn" />
      <wsdl:output message="tns:ValidCredentialsSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="SetDomainCredentials">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Sets domain credentials in the local store</documentation>
      <wsdl:input message="tns:SetDomainCredentialsSoapIn" />
      <wsdl:output message="tns:SetDomainCredentialsSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GetDomainCredentials">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Get the saved credentials from a domain</documentation>
      <wsdl:input message="tns:GetDomainCredentialsSoapIn" />
      <wsdl:output message="tns:GetDomainCredentialsSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="ConnectToDomain">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Connects to a Domain</documentation>
      <wsdl:input message="tns:ConnectToDomainSoapIn" />
      <wsdl:output message="tns:ConnectToDomainSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="LeaveDomain">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Removes a domain account from the workstation</documentation>
      <wsdl:input message="tns:LeaveDomainSoapIn" />
      <wsdl:output message="tns:LeaveDomainSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="SetDefaultDomain">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Change the default domain to the specified domain ID</documentation>
      <wsdl:input message="tns:SetDefaultDomainSoapIn" />
      <wsdl:output message="tns:SetDefaultDomainSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GetDefaultDomainID">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Get the ID of the default domain</documentation>
      <wsdl:input message="tns:GetDefaultDomainIDSoapIn" />
      <wsdl:output message="tns:GetDefaultDomainIDSoapOut" />
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="Simias_x0020_Web_x0020_ServiceSoap" type="tns:Simias_x0020_Web_x0020_ServiceSoap">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document" />
    <wsdl:operation name="AddMemberToDomain">
      <soap:operation soapAction="http://novell.com/simias/web/AddMemberToDomain" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="RemoveMemberFromDomain">
      <soap:operation soapAction="http://novell.com/simias/web/RemoveMemberFromDomain" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="FindCloseMembers">
      <soap:operation soapAction="http://novell.com/simias/web/FindCloseMembers" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="FindFirstMembers">
      <soap:operation soapAction="http://novell.com/simias/web/FindFirstMembers" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="FindFirstSpecificMembers">
      <soap:operation soapAction="http://novell.com/simias/web/FindFirstSpecificMembers" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="FindNextMembers">
      <soap:operation soapAction="http://novell.com/simias/web/FindNextMembers" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="FindPreviousMembers">
      <soap:operation soapAction="http://novell.com/simias/web/FindPreviousMembers" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSimiasInformation">
      <soap:operation soapAction="http://novell.com/simias/web/GetSimiasInformation" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetDomainInformation">
      <soap:operation soapAction="http://novell.com/simias/web/GetDomainInformation" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetDomains">
      <soap:operation soapAction="http://novell.com/simias/web/GetDomains" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="LoginToRemoteDomain">
      <soap:operation soapAction="http://novell.com/simias/web/LoginToRemoteDomain" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="LogoutFromRemoteDomain">
      <soap:operation soapAction="http://novell.com/simias/web/LogoutFromRemoteDomain" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="IsDomainActive">
      <soap:operation soapAction="http://novell.com/simias/web/IsDomainActive" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="SetDomainActive">
      <soap:operation soapAction="http://novell.com/simias/web/SetDomainActive" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="SetDomainInactive">
      <soap:operation soapAction="http://novell.com/simias/web/SetDomainInactive" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ValidCredentials">
      <soap:operation soapAction="http://novell.com/simias/web/ValidCredentials" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="SetDomainCredentials">
      <soap:operation soapAction="http://novell.com/simias/web/SetDomainCredentials" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetDomainCredentials">
      <soap:operation soapAction="http://novell.com/simias/web/GetDomainCredentials" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ConnectToDomain">
      <soap:operation soapAction="http://novell.com/simias/web/ConnectToDomain" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="LeaveDomain">
      <soap:operation soapAction="http://novell.com/simias/web/LeaveDomain" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="SetDefaultDomain">
      <soap:operation soapAction="http://novell.com/simias/web/SetDefaultDomain" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetDefaultDomainID">
      <soap:operation soapAction="http://novell.com/simias/web/GetDefaultDomainID" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="Simias_x0020_Web_x0020_Service">
    <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Web Service providing access to Simias</documentation>
    <wsdl:port name="Simias_x0020_Web_x0020_ServiceSoap" binding="tns:Simias_x0020_Web_x0020_ServiceSoap">
      <soap:address location="http://127.0.0.1:8086/simias10/Simias.asmx" />
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>