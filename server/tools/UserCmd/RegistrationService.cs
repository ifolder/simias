// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 1.1.4322.2032
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

// 
// This source code was auto-generated by Mono Web Services Description Language Utility
//

/// <remarks/>
/// <remarks>
///Web Service providing self provisioning/registration for Simias users.
///</remarks>
[System.Web.Services.WebServiceBinding(Name="User RegistrationSoap", Namespace="http://novell.com/simias-server/registration")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public class UserRegistration : System.Web.Services.Protocols.SoapHttpClientProtocol {
    
    public UserRegistration() {
        this.Url = "http://localhost:8086/simias10/Registration.asmx";
    }
    
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://novell.com/simias-server/registration/GetPublicKey", RequestNamespace="http://novell.com/simias-server/registration", ResponseNamespace="http://novell.com/simias-server/registration", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
    public string GetPublicKey() {
        object[] results = this.Invoke("GetPublicKey", new object[0]);
        return ((string)(results[0]));
    }
    
    public System.IAsyncResult BeginGetPublicKey(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetPublicKey", new object[0], callback, asyncState);
    }
    
    public string EndGetPublicKey(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://novell.com/simias-server/registration/CreateUser", RequestNamespace="http://novell.com/simias-server/registration", ResponseNamespace="http://novell.com/simias-server/registration", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
    public RegistrationInfo CreateUser(string Username, string Password, string UserGuid, string FirstName, string LastName, string FullName, string DistinguishedName, string Email) {
        object[] results = this.Invoke("CreateUser", new object[] {
            Username,
            Password,
            UserGuid,
            FirstName,
            LastName,
            FullName,
            DistinguishedName,
            Email});
        return ((RegistrationInfo)(results[0]));
    }
    
    public System.IAsyncResult BeginCreateUser(string Username, string Password, string UserGuid, string FirstName, string LastName, string FullName, string DistinguishedName, string Email, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("CreateUser", new object[] {
            Username,
            Password,
            UserGuid,
            FirstName,
            LastName,
            FullName,
            DistinguishedName,
            Email}, callback, asyncState);
    }
    
    public RegistrationInfo EndCreateUser(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((RegistrationInfo)(results[0]));
    }
}

/// <remarks/>
[System.Xml.Serialization.XmlType(Namespace="http://novell.com/simias-server/registration")]
public class RegistrationInfo {
    
    /// <remarks/>
    public RegistrationStatus Status;
    
    /// <remarks/>
    public string Message;
    
    /// <remarks/>
    public string UserGuid;
    
    /// <remarks/>
    public string[] SuggestedNames;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://novell.com/simias-server/registration")]
public enum RegistrationStatus {
    
    /// <remarks/>
    UserCreated,
    
    /// <remarks/>
    UserExists,
    
    /// <remarks/>
    InvalidParameters,
    
    /// <remarks/>
    InvalidDomain,
    
    /// <remarks/>
    UsernamePolicyException,
    
    /// <remarks/>
    PasswordPolicyException,
    
    /// <remarks/>
    InternalException,
}

